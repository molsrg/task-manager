"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Day_1 = __importDefault(require("./grid/Day"));
var Week_1 = __importDefault(require("./grid/Week"));
var DaySelector_1 = __importDefault(require("./grid/DaySelector"));
var DAY_MILISECOND = 86400000;
var TODAY = new Date();
var DAY = {
    0: '일',
    1: '월',
    2: '화',
    3: '수',
    4: '목',
    5: '금',
    6: '토',
};
var Calendar = /** @class */ (function () {
    function Calendar(element) {
        var _this = this;
        var daySelector = new DaySelector_1.default();
        // 캘린더 날짜 설정 메뉴
        this.calendarMenu = document.createElement('div');
        this.calendarMenu.className = 'calendar-menu';
        this.prevBtn = document.createElement('button');
        this.todayBtn = document.createElement('button');
        this.nowDayText = document.createElement('span');
        this.nextBtn = document.createElement('button');
        this.todayBtn.innerHTML = 'Today';
        this.todayBtn.className = 'today-btn';
        this.prevBtn.innerHTML = ' < ';
        this.nextBtn.innerHTML = ' > ';
        this.calendarMenu.append(this.todayBtn, this.prevBtn, this.nextBtn, this.nowDayText);
        // 요일 표시
        var dayWeek = document.createElement('div');
        dayWeek.className = 'day-week-container';
        dayWeek.innerHTML = "\n        <div class=\"day-week sunday\"> \uC77C </div>\n        <div class=\"day-week\"> \uC6D4 </div>\n        <div class=\"day-week\"> \uD654 </div>\n        <div class=\"day-week\"> \uC218 </div>\n        <div class=\"day-week\"> \uBAA9 </div>\n        <div class=\"day-week\"> \uAE08 </div>\n        <div class=\"day-week\"> \uD1A0 </div>\n        ";
        this.container = document.createElement('div');
        this.container.className = 'container';
        this.container.append(this.calendarMenu, dayWeek);
        this.month = document.createElement('div');
        this.month.className = 'month';
        this.$today = new Date();
        this.nowDayText.innerHTML = "" + (this.$today.getFullYear() +
            '.' +
            (this.$today.getMonth() + 1 < 10
                ? '0' + (this.$today.getMonth() + 1)
                : this.$today.getMonth() + 1));
        this.prevBtn.addEventListener('click', function () {
            _this.$today.setDate(1);
            _this.$today.setMonth(_this.$today.getMonth() - 1);
            _this.mok = Math.floor(_this.$today.getDate() / 7);
            _this.namugi = (_this.$today.getDay() % 7) - 1;
            _this.updateYearMonth();
            _this.nowDayText.innerHTML = "" + (_this.$today.getFullYear() +
                '.' +
                (_this.$today.getMonth() + 1 < 10
                    ? '0' + (_this.$today.getMonth() + 1)
                    : _this.$today.getMonth() + 1));
        });
        this.nextBtn.addEventListener('click', function () {
            _this.$today.setDate(1);
            _this.$today.setMonth(_this.$today.getMonth() + 1);
            _this.mok = Math.floor(_this.$today.getDate() / 7);
            _this.namugi = (_this.$today.getDay() % 7) - 1;
            _this.updateYearMonth();
            _this.nowDayText.innerHTML = "" + (_this.$today.getFullYear() +
                '.' +
                (_this.$today.getMonth() + 1 < 10
                    ? '0' + (_this.$today.getMonth() + 1)
                    : _this.$today.getMonth() + 1));
        });
        this.todayBtn.addEventListener('click', function () {
            _this.$today = new Date();
            _this.mok = Math.floor(_this.$today.getDate() / 7);
            _this.namugi = (_this.$today.getDay() % 7) - 1;
            _this.updateYearMonth();
            _this.nowDayText.innerHTML = "" + (_this.$today.getFullYear() +
                '.' +
                (_this.$today.getMonth() + 1 < 10
                    ? '0' + (_this.$today.getMonth() + 1)
                    : _this.$today.getMonth() + 1));
        });
        var date = this.$today.getDate();
        var day = this.$today.getDay();
        this.mok = Math.floor(date / 7);
        this.namugi = (date % 7) - 1;
        this.weeks = [];
        this.days = [];
        var j = -1;
        for (var i = 0; i < 42; i++) {
            if (!(i % 7)) {
                this.weeks.push(new Week_1.default(this.month));
                j++;
            }
            this.days.push(new Day_1.default(this.weeks[j].element, this.$today, new Date(this.$today.getTime() +
                (i -
                    (this.namugi > this.$today.getDay()
                        ? (this.mok + 1) * 7 + this.$today.getDay()
                        : this.mok * 7 + this.$today.getDay())) *
                    DAY_MILISECOND), TODAY, daySelector));
        }
        this.container.append(this.month);
        element.append(this.container);
        this.onWindowClicked(daySelector);
    }
    Calendar.prototype.updateYearMonth = function () {
        var _this = this;
        this.days.forEach(function (day, i) {
            day.setDate(new Date(_this.$today.getTime() +
                (i -
                    (_this.namugi > _this.$today.getDay()
                        ? (_this.mok + 1) * 7 + _this.$today.getDay()
                        : _this.mok * 7 + _this.$today.getDay())) *
                    DAY_MILISECOND));
            day.updateUI(_this.$today);
        });
    };
    Calendar.prototype.onWindowClicked = function (daySelector) {
        window.addEventListener('click', function (e) {
            daySelector.setDisplayNone();
        }, true);
    };
    return Calendar;
}());
exports.default = Calendar;
