{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport moment from \"moment\";\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\nmoment.locale(\"ru\");\nexport default {\n  data() {\n    return {\n      currentWeek: \"\",\n      days: [],\n      showSelect: false,\n      isArrowShow: true,\n      isFirstWeekReg: false,\n      // загрузка данных с сервера\n      showLoader: false,\n      showCalendar: true\n    };\n  },\n  mounted() {\n    this.SHOW_WEEK(moment());\n    this.GET_HOURS();\n    this.GET_PRESENT_DAY();\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\n  },\n  methods: {\n    ...mapActions(['GET_HOURS', 'GET_MONTHS', 'GET_PRESENT_DAY', 'SHOW_WEEK']),\n    ...mapMutations(['SET_WEEK', 'UPDATE_FIRST_DAY_WEEK']),\n    // Функция для вычисления стиля задачи \n    taskStyle(task) {\n      const heightInPixels = this.calculateTaskLengthInPixels(task);\n      const colorTask = this.calculateTaskColor(task);\n      return {\n        height: heightInPixels + 'px',\n        'background-color': colorTask\n      };\n    },\n    // Функция для вычисления фона задачи \n    calculateTaskColor(task) {\n      if (task.type == 'EveryDay') {\n        return '#C4D7DA';\n      }\n      if (task.type == 'Working') {\n        return '#FFDEBF';\n      }\n      if (task.type == 'Common') {\n        return '#DDC9C3';\n      }\n    },\n    // Функция для вычисления длины задачи в пикселях\n    calculateTaskLengthInPixels(task) {\n      const [startTime, endTime] = task.time.split(' - ');\n\n      // Разбиваем время начала и времени окончания на часы и минуты\n      const [startHour, startMinute] = startTime.split(':').map(Number);\n      const [endHour, endMinute] = endTime.split(':').map(Number);\n\n      // Вычисляем продолжительность задачи в минутах\n      const durationInMinutes = (endHour - startHour) * 60 + (endMinute - startMinute);\n\n      // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\n      const lengthInPixels = durationInMinutes / 60 * 80;\n\n      // Добавляем 10px за каждый пройденный час\n      const hoursElapsed = moment().diff(moment(startTime, 'HH:mm'), 'hours');\n      const additionalPixels = hoursElapsed * 12.5;\n      return lengthInPixels + additionalPixels;\n    },\n    // // заполнение днями недели текущей\n    fillDays(startDate) {\n      const daysArray = [];\n      for (let i = 0; i <= 6; i++) {\n        const day = moment(startDate).add(i, \"days\").format(\"dddd-DD-MMMM-YYYY\");\n        daysArray.push(day.split(\"-\"));\n      }\n      return daysArray;\n    },\n    // изменяет выбранный месяц в списке (визуально)\n    changeCurrentMonth(value) {\n      this.UPDATE_FIRST_DAY_WEEK = `${value[0]} ${value[1]}`;\n      const newDate = moment(`${value[0]}-${value[1]}`, \"MMMM-YYYY\").startOf(\"month\");\n      this.SHOW_WEEK(newDate);\n    },\n    // переключает неделю на предыдущую (стрелка)\n    prevWeek(startDate) {\n      this.startLoading();\n      if (!this.currentWeek) {\n        this.currentWeek = moment().startOf(\"isoWeek\").subtract(1, \"week\");\n      } else {\n        this.currentWeek = this.currentWeek.clone().subtract(1, \"week\");\n      }\n      const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\"month\");\n      if (this.currentWeek.isBefore(startDateNormalized)) {\n        if (!this.isFirstWeekReg) {\n          this.SET_WEEK(this.fillDays(this.currentWeek));\n          console.log(this.SE);\n          this.isArrowShow = false;\n        }\n        this.isFirstWeekReg = true;\n        // alert(\"Вы не можете перейти за начальную дату регистрации.\");\n      }\n\n      this.UPDATE_FIRST_DAY_WEEK(`${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${this.CURRENT_WEEK[0][3]}`);\n      this.loading();\n    },\n    // переключает неделю на следующую (стрелка)\n    nextWeek() {\n      this.startLoading();\n      this.isFirstWeekReg = false;\n      this.isArrowShow = true;\n      if (!this.currentWeek) {\n        // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\n        this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\n      } else {\n        // Иначе переключаемся на следующую неделю\n        this.currentWeek.add(1, \"week\");\n      }\n      this.days = [];\n      this.days = this.fillDays(this.currentWeek);\n      this.firstDay = `${this.capitalizeFirstLetter(this.days[0][2])}  ${this.days[0][3]}`;\n      this.loading();\n    },\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    // старт загрузки\n    startLoading() {\n      this.showLoader = true;\n      this.showCalendar = false;\n    },\n    // процесс загрузки\n    loading() {\n      // здесь будем получать данные с сервера\n      setTimeout(() => {\n        this.showLoader = false;\n        this.showCalendar = true;\n      }, 1000);\n    }\n  },\n  computed: {\n    ...mapGetters(['USER_TASKS', 'CURRENT_HOURS', 'CURRENT_MONTHS', 'USER_REGISTRATIONS', 'PRESENT_DAY', 'CURRENT_WEEK', 'FIRST_DAY'])\n  }\n};","map":{"version":3,"names":["moment","mapGetters","mapActions","mapMutations","locale","data","currentWeek","days","showSelect","isArrowShow","isFirstWeekReg","showLoader","showCalendar","mounted","SHOW_WEEK","GET_HOURS","GET_PRESENT_DAY","GET_MONTHS","USER_REGISTRATIONS","methods","taskStyle","task","heightInPixels","calculateTaskLengthInPixels","colorTask","calculateTaskColor","height","type","startTime","endTime","time","split","startHour","startMinute","map","Number","endHour","endMinute","durationInMinutes","lengthInPixels","hoursElapsed","diff","additionalPixels","fillDays","startDate","daysArray","i","day","add","format","push","changeCurrentMonth","value","UPDATE_FIRST_DAY_WEEK","newDate","startOf","prevWeek","startLoading","subtract","clone","startDateNormalized","isBefore","SET_WEEK","console","log","SE","capitalizeFirstLetter","CURRENT_WEEK","loading","nextWeek","firstDay","string","charAt","toUpperCase","slice","setTimeout","computed"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\CalendarComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar__component\">\r\n    <div class=\"select__arrow\">\r\n    <div class=\"select\">\r\n      <div class=\"select__header\">\r\n        <div class=\"select__current\">{{ FIRST_DAY }} </div>\r\n        <img\r\n          @click=\"showSelect = !showSelect\"\r\n          :class=\"showSelect ? 'select__btn' : 'select__btn-isActive'\"\r\n          src=\"../../assets/images/home/select__btn.svg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div :class=\"showSelect ? 'select__body-show' : 'select__body'\">\r\n        <div\r\n          @click=\"changeCurrentMonth(month)\"\r\n          class=\"select__item\"\r\n          v-for=\"month in CURRENT_MONTHS\"\r\n          :key=\"month\"\r\n        >\r\n          {{ month[0] }} {{ month[1] }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"arrows\">\r\n      <img\r\n        @click=\"prevWeek(this.registrationMonth)\"\r\n        src=\"../../assets/images/home/left-arrow.svg\"\r\n        alt=\"\"\r\n        :class=\"isArrowShow ? 'arrows__item' : 'arrows__item-hidden'\"\r\n      />\r\n      <img\r\n        @click=\"nextWeek()\"\r\n        src=\"../../assets/images/home/right-arrow.svg\"\r\n        alt=\"\"\r\n        class=\"arrows__item\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <div class=\"calendar\">\r\n    <div class=\"week\">\r\n      <div\r\n        :class=\"\r\n          day[1] == PRESENT_DAY[0] && day[2] == PRESENT_DAY[1]\r\n            ? 'present-day'\r\n            : 'day'\r\n        \"\r\n        v-for=\"day in CURRENT_WEEK\"\r\n        :key=\"day\"\r\n      >\r\n        <div class=\"day__number\">{{ day[1] }}</div>\r\n        <div class=\"day__text\">{{ day[0] }}</div>\r\n        <div class=\"day__text\">{{ day[2] }}</div>\r\n        <div class=\"day__text\">{{ day[3] }}</div>\r\n        <div class=\"day__line\">―</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"wrapper\" v-if=\"showLoader\">\r\n      <span class=\"loader\"></span>\r\n    </div>\r\n    <div class=\"calendar__taskboard\" v-else>\r\n      <div class=\"time\">\r\n\r\n      <div class=\"time__container\">\r\n        <span class=\"time__name\" v-for=\"hour in CURRENT_HOURS\" :key=\"hour\">{{ hour }}</span>\r\n        \r\n      </div>\r\n\r\n      \r\n    </div>\r\n    \r\n    <div class=\"task\" v-for=\"task in USER_TASKS\" :key=\"task.id\" :style=\"taskStyle(task)\">\r\n      <h5 class=\"task__name\">{{ task.name }}</h5>\r\n      <span class=\"task__time\">{{ task.time }}</span>\r\n    </div>\r\n\r\n    <!-- <div class=\"taskboard\">\r\n      \r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      \r\n      \r\n    </div> -->\r\n    </div>\r\n\r\n  </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\r\nmoment.locale(\"ru\");\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentWeek: \"\",\r\n      days: [],\r\n\r\n      showSelect: false,\r\n      isArrowShow: true,\r\n      isFirstWeekReg: false, \r\n\r\n      // загрузка данных с сервера\r\n      showLoader: false,\r\n      showCalendar: true,\r\n\r\n    };\r\n  },\r\n  mounted() {\r\n\r\n    this.SHOW_WEEK(moment())\r\n    this.GET_HOURS();\r\n    this.GET_PRESENT_DAY()\r\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\r\n\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions(['GET_HOURS', 'GET_MONTHS', 'GET_PRESENT_DAY', 'SHOW_WEEK']), \r\n    ...mapMutations(['SET_WEEK', 'UPDATE_FIRST_DAY_WEEK']),\r\n    // Функция для вычисления стиля задачи \r\n    taskStyle(task) {\r\n      const heightInPixels = this.calculateTaskLengthInPixels(task);\r\n      const colorTask = this.calculateTaskColor(task)\r\n      return {\r\n        height: heightInPixels + 'px', \r\n        'background-color': colorTask \r\n      }\r\n    },\r\n  \r\n    // Функция для вычисления фона задачи \r\n    calculateTaskColor(task){\r\n      if(task.type == 'EveryDay'){\r\n        return '#C4D7DA'\r\n      }\r\n      if(task.type == 'Working') {\r\n        return '#FFDEBF'\r\n      }\r\n      if (task.type == 'Common') {\r\n        return '#DDC9C3'\r\n      }\r\n    },\r\n\r\n    // Функция для вычисления длины задачи в пикселях\r\n    calculateTaskLengthInPixels(task) {\r\n      const [startTime, endTime] = task.time.split(' - ');\r\n\r\n      // Разбиваем время начала и времени окончания на часы и минуты\r\n      const [startHour, startMinute] = startTime.split(':').map(Number);\r\n      const [endHour, endMinute] = endTime.split(':').map(Number);\r\n\r\n      // Вычисляем продолжительность задачи в минутах\r\n      const durationInMinutes = (endHour - startHour) * 60 + (endMinute - startMinute);\r\n\r\n      // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\r\n      const lengthInPixels = (durationInMinutes / 60) * 80;\r\n\r\n      // Добавляем 10px за каждый пройденный час\r\n      const hoursElapsed = moment().diff(moment(startTime, 'HH:mm'), 'hours');\r\n      const additionalPixels = hoursElapsed * 12.5;\r\n\r\n      return lengthInPixels + additionalPixels;\r\n    },\r\n\r\n\r\n    // // заполнение днями недели текущей\r\n    fillDays(startDate) {\r\n      const daysArray = [];\r\n      for (let i = 0; i <= 6; i++) {\r\n        const day = moment(startDate).add(i, \"days\").format(\"dddd-DD-MMMM-YYYY\");\r\n        daysArray.push(day.split(\"-\"));\r\n      }\r\n      return daysArray;\r\n    },\r\n\r\n\r\n    // изменяет выбранный месяц в списке (визуально)\r\n    changeCurrentMonth(value) {\r\n      this.UPDATE_FIRST_DAY_WEEK = `${value[0]} ${value[1]}`;\r\n      const newDate = moment(`${value[0]}-${value[1]}`, \"MMMM-YYYY\").startOf(\"month\");\r\n      this.SHOW_WEEK(newDate);\r\n    },\r\n\r\n   // переключает неделю на предыдущую (стрелка)\r\nprevWeek(startDate) {\r\n    this.startLoading();\r\n\r\n    if (!this.currentWeek) {\r\n      this.currentWeek = moment().startOf(\"isoWeek\").subtract(1, \"week\");\r\n    } else {\r\n      this.currentWeek = this.currentWeek.clone().subtract(1, \"week\");\r\n    }\r\n\r\n    const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\"month\");\r\n\r\n    if (this.currentWeek.isBefore(startDateNormalized)) {\r\n      if (!this.isFirstWeekReg) {\r\n        this.SET_WEEK(this.fillDays(this.currentWeek));\r\n        console.log(this.SE)\r\n        this.isArrowShow = false;\r\n      }\r\n      this.isFirstWeekReg = true;\r\n      // alert(\"Вы не можете перейти за начальную дату регистрации.\");\r\n    }\r\n\r\n    this.UPDATE_FIRST_DAY_WEEK(`${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${this.CURRENT_WEEK[0][3]}`);\r\n    this.loading();\r\n},\r\n\r\n\r\n    // переключает неделю на следующую (стрелка)\r\n    nextWeek() {\r\n      this.startLoading();\r\n      this.isFirstWeekReg = false \r\n      this.isArrowShow = true;\r\n      if (!this.currentWeek) {\r\n        // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\r\n        this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\r\n      } else {\r\n        // Иначе переключаемся на следующую неделю\r\n        this.currentWeek.add(1, \"week\");\r\n      }\r\n      this.days = [];\r\n\r\n      this.days = this.fillDays(this.currentWeek);\r\n      this.firstDay = `${this.capitalizeFirstLetter(this.days[0][2])}  ${this.days[0][3]}`\r\n      this.loading();\r\n    },\r\n\r\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\r\n    capitalizeFirstLetter(string) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    },\r\n\r\n    // старт загрузки\r\n    startLoading() {\r\n      this.showLoader = true;\r\n      this.showCalendar = false;\r\n    },\r\n    // процесс загрузки\r\n    loading() {\r\n      // здесь будем получать данные с сервера\r\n      setTimeout(() => {\r\n        this.showLoader = false;\r\n        this.showCalendar = true;\r\n      }, 1000);\r\n    },\r\n    \r\n  },\r\n  computed: {\r\n    ...mapGetters(['USER_TASKS', 'CURRENT_HOURS', 'CURRENT_MONTHS', 'USER_REGISTRATIONS', 'PRESENT_DAY', 'CURRENT_WEEK', 'FIRST_DAY']), \r\n},\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n.wrapper {\r\n  margin: 100px auto;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.loader {\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 5px solid black;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}