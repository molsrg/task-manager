{"ast":null,"code":"// import axios from 'axios'\nexport default {\n  state() {\n    return {\n      lengthInPixels: null\n    };\n  },\n  getters: {},\n  mutations: {\n    CALCULATE_TASK_LENGTH_IN_PIXELS: (state, response) => {\n      state.lengthInPixels = response;\n    }\n  },\n  actions: {\n    CALCULATE_TASK_LENGTH_IN_PIXELS({\n      commit\n    }) {\n      const [startTime, endTime] = task.time.split(' - ');\n\n      // Разбиваем время начала и времени окончания на часы и минуты\n      const [startHour, startMinute] = startTime.split(':').map(Number);\n      const [endHour, endMinute] = endTime.split(':').map(Number);\n\n      // Вычисляем продолжительность задачи в минутах\n      const durationInMinutes = (endHour - startHour) * 60 + (endMinute - startMinute);\n\n      // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\n      const lengthInPixels = durationInMinutes / 60 * 80;\n\n      // Добавляем 10px за каждый пройденный час\n      if (endHour - startHour > 1) {\n        const addedHours = endHour - startHour;\n        let additionalPixels = addedHours * 6;\n        return lengthInPixels + additionalPixels;\n      }\n      return lengthInPixels;\n    }\n  }\n};","map":{"version":3,"names":["state","lengthInPixels","getters","mutations","CALCULATE_TASK_LENGTH_IN_PIXELS","response","actions","commit","startTime","endTime","task","time","split","startHour","startMinute","map","Number","endHour","endMinute","durationInMinutes","addedHours","additionalPixels"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/User/Task.js"],"sourcesContent":["// import axios from 'axios'\r\nexport default {\r\n    state() {\r\n        return {\r\n            lengthInPixels: null \r\n    }},\r\n    getters: {\r\n    \r\n    }, \r\n    mutations: {\r\n        CALCULATE_TASK_LENGTH_IN_PIXELS: (state, response) => {\r\n            state.lengthInPixels = response\r\n        }\r\n\r\n    }, \r\n    actions: {\r\n        \r\n\r\n        CALCULATE_TASK_LENGTH_IN_PIXELS ({commit}){\r\n            const [startTime, endTime] = task.time.split(' - ');\r\n  \r\n            // Разбиваем время начала и времени окончания на часы и минуты\r\n            const [startHour, startMinute] = startTime.split(':').map(Number);\r\n            const [endHour, endMinute] = endTime.split(':').map(Number);\r\n      \r\n            // Вычисляем продолжительность задачи в минутах\r\n            const durationInMinutes = (endHour - startHour) * 60 + (endMinute - startMinute);\r\n      \r\n            // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\r\n            const lengthInPixels = (durationInMinutes / 60) * 80;\r\n      \r\n            // Добавляем 10px за каждый пройденный час\r\n            if(endHour - startHour > 1){\r\n              const addedHours = endHour - startHour\r\n              let additionalPixels = addedHours * 6;\r\n              return lengthInPixels + additionalPixels;\r\n            }\r\n            return lengthInPixels ;\r\n        }, \r\n        }\r\n}"],"mappings":"AAAA;AACA,eAAe;EACXA,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,cAAc,EAAE;IACxB,CAAC;EAAA,CAAC;EACFC,OAAO,EAAE,CAET,CAAC;EACDC,SAAS,EAAE;IACPC,+BAA+B,EAAEA,CAACJ,KAAK,EAAEK,QAAQ,KAAK;MAClDL,KAAK,CAACC,cAAc,GAAGI,QAAQ;IACnC;EAEJ,CAAC;EACDC,OAAO,EAAE;IAGLF,+BAA+BA,CAAE;MAACG;IAAM,CAAC,EAAC;MACtC,MAAM,CAACC,SAAS,EAAEC,OAAO,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,KAAK,CAAC;;MAEnD;MACA,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGN,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAACC,MAAM,CAAC;MACjE,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGT,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAACC,MAAM,CAAC;;MAE3D;MACA,MAAMG,iBAAiB,GAAG,CAACF,OAAO,GAAGJ,SAAS,IAAI,EAAE,IAAIK,SAAS,GAAGJ,WAAW,CAAC;;MAEhF;MACA,MAAMb,cAAc,GAAIkB,iBAAiB,GAAG,EAAE,GAAI,EAAE;;MAEpD;MACA,IAAGF,OAAO,GAAGJ,SAAS,GAAG,CAAC,EAAC;QACzB,MAAMO,UAAU,GAAGH,OAAO,GAAGJ,SAAS;QACtC,IAAIQ,gBAAgB,GAAGD,UAAU,GAAG,CAAC;QACrC,OAAOnB,cAAc,GAAGoB,gBAAgB;MAC1C;MACA,OAAOpB,cAAc;IACzB;EACA;AACR,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}