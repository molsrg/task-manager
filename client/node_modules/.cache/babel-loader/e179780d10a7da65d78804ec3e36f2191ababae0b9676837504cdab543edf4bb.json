{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nimport _imports_0 from '../assets/images/auth/logo.svg';\nimport _imports_1 from '../assets/images/auth/google.svg';\nimport _imports_2 from '../assets/images/auth/github.svg';\nimport _imports_3 from '../assets/images/auth/facebook.svg';\nconst _hoisted_1 = {\n  class: \"auth-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"auth-form__section\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"logo\"\n}), /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"auth-form__section_text\"\n}, \"Task Unity Tech\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"auth-form__section\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"overflow\": \"hidden\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_createStaticVNode(\"<button type=\\\"submit\\\" class=\\\"auth-form-button\\\">Войти</button><div class=\\\"section__item\\\"><div class=\\\"section__text-or\\\"><span>или</span></div><div class=\\\"section__bt-container\\\"><a href=\\\"https://accounts.google.com/o/oauth2/auth?client_id=429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1&amp;redirect_uri=http://localhost:8080/waiting&amp;response_type=code&amp;scope=https://www.googleapis.com/auth/userinfo.profile&amp;state=123\\\"><img src=\\\"\" + _imports_1 + \"\\\"></a><a href=\\\"https://github.com/login/oauth/authorize?scope=user:email&amp;client_id=db3492f883c60a412c39&amp;redirect_uri=http://localhost:8080/waiting\\\"><img src=\\\"\" + _imports_2 + \"\\\"></a><a href=\\\"https://oauth.yandex.ru/authorize?client_id=5b1b15fa24b542948bbd72ac320d6b9f&amp;redirect_uri=http://localhost:8080/waiting&amp;response_type=code\\\"><img src=\\\"\" + _imports_3 + \"\\\"></a></div></div>\", 2);\nconst _hoisted_7 = {\n  key: 0,\n  class: \"invalid-span\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"invalid-span\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"invalid-span\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"invalid-span\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createStaticVNode(\"<button type=\\\"submit\\\" class=\\\"auth-form-button\\\">Зарегистрироваться</button><div class=\\\"section__item\\\"><div class=\\\"section__text-or\\\"><span>или</span></div><div class=\\\"section__bt-container\\\"><a href=\\\"https://accounts.google.com/o/oauth2/auth?client_id=429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1&amp;redirect_uri=http://localhost:8080/waiting&amp;response_type=code&amp;scope=https://www.googleapis.com/auth/userinfo.profile&amp;state=123\\\"><img src=\\\"\" + _imports_1 + \"\\\"></a><a href=\\\"https://github.com/login/oauth/authorize?scope=user:email&amp;client_id=db3492f883c60a412c39&amp;redirect_uri=http://localhost:8080/waiting\\\"><img src=\\\"\" + _imports_2 + \"\\\"></a><a href=\\\"https://oauth.yandex.ru/authorize?client_id=5b1b15fa24b542948bbd72ac320d6b9f&amp;redirect_uri=http://localhost:8080/waiting&amp;response_type=code\\\"><img src=\\\"\" + _imports_3 + \"\\\"></a></div></div>\", 2);\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass(_ctx.isReg ? 'auth-form auth-form-short' : 'auth-form ')\n  }, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.changeReg && _ctx.changeReg(...args)),\n    class: _normalizeClass(_ctx.isReg ? 'auth-form__section_button-inactive' : 'auth-form__section_button')\n  }, \"Регистрация\", 2 /* CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.changeReg && _ctx.changeReg(...args)),\n    class: _normalizeClass(_ctx.isReg ? 'auth-form__section_button' : 'auth-form__section_button-inactive')\n  }, \"Вход\", 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = (...args) => _ctx.authUser && _ctx.authUser(...args)),\n    class: _normalizeClass(_ctx.isReg ? 'form-signin ' : 'form-signin form-signin-left'),\n    action: \"\",\n    method: \"post\",\n    name: \"form\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"auth-form-input\",\n    type: \"email\",\n    placeholder: \"E-mail\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.mail = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.mail]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"auth-form-input\",\n    type: \"password\",\n    placeholder: \"Пароль\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _hoisted_5], 34 /* CLASS, HYDRATE_EVENTS */), _createElementVNode(\"form\", {\n    onSubmit: _cache[9] || (_cache[9] = (...args) => _ctx.authUser && _ctx.authUser(...args)),\n    class: _normalizeClass(_ctx.isReg ? 'form-signup' : 'form-signup form-signup-left'),\n    action: \"\",\n    method: \"post\",\n    name: \"form\"\n  }, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"auth-form-input\",\n    type: \"text\",\n    placeholder: \"Имя пользователя\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.login = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.login]]), _ctx.v$.login.$invalid ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \"Минимальная длина 6 символов\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" <span class=\\\"invalid-span\\\" v-if=\\\"v$.login.$error\\\">Неправильное имя</span> \")]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"auth-form-input\",\n    type: \"email\",\n    placeholder: \"E-mail\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.mail = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.mail]]), _ctx.v$.mail.$invalid ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, \"Некорректный email\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"auth-form-input\",\n    type: \"password\",\n    placeholder: \"Пароль\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _ctx.v$.password.$invalid ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, \"Минимальная длина 8 символов\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"auth-form-input\",\n    type: \"password\",\n    placeholder: \"Подтверждение пароля\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.confirm_password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.confirm_password]]), _ctx.v$.confirm_password.$invalid ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"Минимальная длина 8 символов\")) : _createCommentVNode(\"v-if\", true)]), _hoisted_11], 34 /* CLASS, HYDRATE_EVENTS */)])], 2 /* CLASS */)]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","class","_createElementVNode","src","alt","style","_createElementBlock","_hoisted_1","_normalizeClass","_ctx","isReg","_hoisted_2","_hoisted_3","onClick","_cache","args","changeReg","_hoisted_4","onSubmit","authUser","action","method","name","type","placeholder","mail","$event","password","_hoisted_5","login","v$","$invalid","_hoisted_7","_createCommentVNode","_hoisted_8","_hoisted_9","confirm_password","_hoisted_10","_hoisted_11"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AuthorizationClient.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <div :class=\"isReg ? 'auth-form auth-form-short' : 'auth-form '\">\r\n      <div class=\"auth-form__section\">\r\n        <img\r\n          src=\"../assets/images/auth/logo.svg\"\r\n          alt=\"logo\"\r\n        />\r\n        <h3 class=\"auth-form__section_text\">Task Unity Tech</h3>\r\n      </div>\r\n      <div class=\"auth-form__section\">\r\n        <button @click=\"changeReg\" :class=\"isReg ? 'auth-form__section_button-inactive' : 'auth-form__section_button'\">Регистрация</button>\r\n        <button @click=\"changeReg\" :class=\"isReg ? 'auth-form__section_button' : 'auth-form__section_button-inactive'\">Вход</button>\r\n      </div>\r\n      <div style=\"overflow: hidden;\">\r\n        <form @submit=\"authUser\"\r\n          :class=\"isReg ? 'form-signin ' : 'form-signin form-signin-left'\"\r\n          action=\"\"\r\n          method=\"post\"\r\n          name=\"form\"\r\n        >\r\n        <input class=\"auth-form-input\"  type=\"email\" placeholder=\"E-mail\" v-model=\"mail\">\r\n        <input class=\"auth-form-input\"  type=\"password\" placeholder=\"Пароль\" v-model=\"password\">\r\n\r\n        <button type=\"submit\" class=\"auth-form-button\">Войти</button>\r\n        <div class=\"section__item\">\r\n          <div class=\"section__text-or\">\r\n              <span>или</span>\r\n            </div>\r\n\r\n          <div class=\"section__bt-container\">\r\n            <a href=\"https://accounts.google.com/o/oauth2/auth?client_id=429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1&redirect_uri=http://localhost:8080/waiting&response_type=code&scope=https://www.googleapis.com/auth/userinfo.profile&state=123\"><img src=\"../assets/images/auth/google.svg\"></a>\r\n\r\n            <a href=\"https://github.com/login/oauth/authorize?scope=user:email&client_id=db3492f883c60a412c39&redirect_uri=http://localhost:8080/waiting\"> <img src=\"../assets/images/auth/github.svg\"></a>\r\n\r\n            <a href=\"https://oauth.yandex.ru/authorize?client_id=5b1b15fa24b542948bbd72ac320d6b9f&redirect_uri=http://localhost:8080/waiting&response_type=code\"> <img src=\"../assets/images/auth/facebook.svg\"></a>\r\n          </div>\r\n      </div>\r\n        </form>\r\n\r\n        <form @submit=\"authUser\"\r\n          :class=\"isReg ? 'form-signup' : 'form-signup form-signup-left'\"\r\n          action=\"\"\r\n          method=\"post\"\r\n          name=\"form\"\r\n        >\r\n        <div>\r\n          <input class=\"auth-form-input\" type=\"text\" placeholder=\"Имя пользователя\" v-model=\"login\">\r\n          <span class=\"invalid-span\" v-if=\"v$.login.$invalid\">Минимальная длина 6 символов</span>\r\n          <!-- <span class=\"invalid-span\" v-if=\"v$.login.$error\">Неправильное имя</span> -->\r\n          \r\n        </div>\r\n        <div>\r\n          <input class=\"auth-form-input\"  type=\"email\" placeholder=\"E-mail\" v-model=\"mail\">\r\n          <span class=\"invalid-span\" v-if=\"v$.mail.$invalid\">Некорректный email</span>\r\n        </div>\r\n        <div>\r\n          <input class=\"auth-form-input\"  type=\"password\" placeholder=\"Пароль\"  v-model=\"password\">\r\n          <span class=\"invalid-span\" v-if=\"v$.password.$invalid\">Минимальная длина 8 символов</span>\r\n        </div>\r\n        <div>\r\n          <input class=\"auth-form-input\"  type=\"password\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\" >\r\n          <span class=\"invalid-span\" v-if=\"v$.confirm_password.$invalid\">Минимальная длина 8 символов</span>\r\n        </div>\r\n          \r\n          \r\n          \r\n          \r\n\r\n          <button type=\"submit\" class=\"auth-form-button\">Зарегистрироваться</button>\r\n          <div class=\"section__item\">\r\n            <div class=\"section__text-or\">\r\n              <span>или</span>\r\n            </div>\r\n\r\n            <div class=\"section__bt-container\">\r\n              <a href=\"https://accounts.google.com/o/oauth2/auth?client_id=429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1&redirect_uri=http://localhost:8080/waiting&response_type=code&scope=https://www.googleapis.com/auth/userinfo.profile&state=123\"><img src=\"../assets/images/auth/google.svg\"></a>\r\n\r\n              <a href=\"https://github.com/login/oauth/authorize?scope=user:email&client_id=db3492f883c60a412c39&redirect_uri=http://localhost:8080/waiting\"> <img src=\"../assets/images/auth/github.svg\"></a>\r\n\r\n              <a href=\"https://oauth.yandex.ru/authorize?client_id=5b1b15fa24b542948bbd72ac320d6b9f&redirect_uri=http://localhost:8080/waiting&response_type=code\"> <img src=\"../assets/images/auth/facebook.svg\"></a>\r\n            </div>\r\n        </div>\r\n      </form>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required, minLength, email } from '@vuelidate/validators'\r\n\r\nexport default {\r\n  setup () {\r\n        return {\r\n            v$: useVuelidate()\r\n        }\r\n    },\r\n  data(){\r\n    return { \r\n      login: '', \r\n      mail: '', \r\n      password: '', \r\n      confirm_password: '', \r\n      auth: 'Зарегестрироваться',\r\n\r\n    isReg: false,\r\n      errors: [],\r\n\r\n    }\r\n  }, \r\n  validations: {\r\n    login: { required, minLength: minLength(6) },\r\n    mail: { required, email },\r\n    password: { required,  minLength: minLength(8)},\r\n    confirm_password: { required,  minLength: minLength(8) },\r\n    },\r\n\r\n  mounted(){\r\n    if(localStorage.getItem('AccessToken')){\r\n      window.location.href = \"http://localhost:8080/home\"\r\n    }\r\n  },\r\n  methods: {\r\n    changeReg(){\r\n      this.isReg = !this.isReg\r\n      this.auth = this.auth == 'Войти' :\r\n    },\r\n\r\n    async authUser(event) {\r\n      event.preventDefault();\r\n    \r\n      const isFormCorrect = await this.v$.$validate()\r\n            if (!isFormCorrect) return\r\n\r\n      if(this.errors.length == 0){\r\n        let data = {}\r\n        let type = ''\r\n\r\n        if(this.auth == 'Зарегистрироваться'){\r\n          data = {\r\n          username: this.login,\r\n          email: this.mail,\r\n          password: this.password,\r\n            } \r\n          \r\n          type = 'registration'\r\n        }\r\n        else if (this.auth == 'Войти') {\r\n          data = {\r\n            email: this.mail,\r\n            password: this.password,\r\n          }\r\n\r\n          type = 'login'\r\n        }\r\n        axios.post(`http://localhost:5000/auth/${type}`, data)\r\n          .then((response) => {\r\n              this.login = ''\r\n              this.mail = '', \r\n              this.password = '', \r\n              this.confirm_password = ''\r\n\r\n              const token = response.data.AccessToken\r\n              localStorage.setItem('AccessToken', token); // write\r\n              // console.log(localStorage.getItem('AccessToken')); // read\r\n              window.location.href = \"http://localhost:8080/home\"\r\n\r\n              \r\n      \r\n                \r\n          }\r\n          )\r\n\r\n          .catch((error) => {\r\n            console.log(error)\r\n            this.errors = [error.response.data?.errors]\r\n            this.errors = [error.response.data?.message]\r\n\r\n            if(error.response.data?.message == \"Почтовый адрес уже был зарегистрирован\"){\r\n              this.mail = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Пользователь с таким именем уже существует\"){\r\n              this.login = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Введен неверный пароль\"){\r\n              this.password = \"\"\r\n            }\r\n\r\n          })   \r\n      }\r\n      \r\n    },     \r\n    validForm(){\r\n      const regex = /^(?=.*[A-Za-z])([A-Za-z0-9]+)$/;\r\n      this.errors = []\r\n      if(this.title == 'Регистрация'){\r\n        if(this.password !== this.confirm_password){\r\n                this.errors.push(\"Пароли не совпадают\")\r\n                this.password = ''\r\n                this.confirm_password = ''\r\n              }\r\n      }\r\n      \r\n      if(!regex.test(this.password)){\r\n        this.errors.push(\"Пароль не прошел валидацию\")\r\n        this.password = ''\r\n        this.confirm_password = ''\r\n      }\r\n    },\r\n    AuthOrReg(){\r\n\r\n      this.errors = []\r\n      this.login = ''\r\n      this.mail = '', \r\n      this.password = '', \r\n      this.confirm_password = ''\r\n\r\n      if(this.subtitle == \"Вход\"){\r\n        this.title = \"Вход\"\r\n        this.subtitle = \"Регистрация\"\r\n        this.auth = \"Войти\"\r\n\r\n      }\r\n\r\n      else if(this.subtitle == \"Регистрация\"){\r\n        this.title = \"Регистрация\"\r\n        this.subtitle = \"Вход\"\r\n        this.auth = \"Зарегистрироваться\"\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.auth-container{\r\n  position: fixed;\r\n  top: 150px;\r\n  left: 150px;\r\n\r\n}\r\n\r\n.auth-form{\r\n  background-color: #cacdd3;\r\n  max-height: 650px;\r\n  width: 400px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  transition: all 0.5s ease;\r\n\r\n  font-family: Raleway;\r\n  padding:20px 10px ;\r\n}\r\n\r\n.auth-form-short{\r\n  max-height: 500px;\r\n}\r\n\r\n.auth-form__section {\r\n  display: flex;\r\n  gap: 11px;\r\n  align-items: center;\r\n}\r\n\r\n.auth-form__section h3{\r\n  font-size: 20px;\r\n  font-weight: 200;\r\n}\r\n\r\n\r\n.auth-form__section_button {\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n\r\n  padding-bottom: 10px;\r\n  color: #15616D;\r\n\r\n  border-bottom: solid 2px #15616D;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.auth-form__section_button-inactive {\r\n\r\n  font-family: Raleway;\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n\r\n  color: #001524;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n.form-signin {\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* background-color: red; */\r\n  gap: 41px;\r\n  padding-top:10px;\r\n  width: 100%;\r\n  height: 375px;\r\n\r\n  transition: opacity 0.5s ease, transform 0.5s ease;\r\n}\r\n\r\n.form-signin-left {\r\n  transform: translateX(-400px);\r\n}\r\n\r\n.form-signup {\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 41px;\r\n  padding-top:10px;\r\n  /* background-color: blue; */\r\n  width: 100%;\r\n  height: 375px;\r\n\r\n  position: relative;\r\n  top: -375px;\r\n  left: 400px;\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.form-signup-left {\r\n  transform: translateX(-400px);\r\n}\r\n\r\n\r\n.auth-form-input{\r\n  margin: 0 auto;\r\n  width:95%;\r\n  margin-bottom: 3px;\r\n  outline: none;\r\n  border: 0px solid white;\r\n  border-bottom: 1px solid rgba(0, 21, 36, 0.5);\r\n  background: transparent;\r\n\r\n  font-family: Raleway;\r\n  font-size: 16px;\r\n}\r\n\r\n.auth-form-button{\r\n  width: 95%;\r\n  margin: 0 auto;\r\n  padding: 16px 53px;\r\n  border-radius: 10px;\r\n\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n\r\n\r\n  color: rgba(255, 236, 209, 1);\r\n  background:rgba(135, 151, 154, 1);\r\n\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n\r\n.auth-form-container{\r\n  width: 90%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n\r\n\r\n\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}