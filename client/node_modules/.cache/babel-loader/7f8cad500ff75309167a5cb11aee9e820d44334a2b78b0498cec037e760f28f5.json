{"ast":null,"code":"import axios from 'axios';\nexport default {\n  state() {\n    return {\n      registration: '23-07-2023',\n      tasklist: [{\n        title: 'Эта неделя',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: [{\n          name: 'Кросс бегит 10км',\n          id: 1,\n          time: '03:00 - 05:00',\n          type: 'EveryDay',\n          date: '25-09-2023'\n        }, {\n          name: 'Дрочит',\n          id: 2,\n          time: '12:00 - 17:00',\n          type: 'Working',\n          date: '26-09-2023'\n        }, {\n          name: 'Обед кушать плотный спасибо мама',\n          id: 3,\n          time: '15:00 - 20:00',\n          type: 'Common',\n          date: '27-09-2023'\n        }, {\n          name: 'Дрочит',\n          id: 4,\n          time: '12:00 - 14:30',\n          type: 'Common',\n          date: '27-09-2023'\n        }, {\n          name: 'Уроки делат',\n          id: 5,\n          time: '12:00 - 17:30',\n          type: 'EveryDay',\n          date: '29-09-2023'\n        }, {\n          name: 'Пакакать',\n          id: 6,\n          time: '17:30 - 20:00',\n          type: 'Working',\n          date: '29-09-2023'\n        }, {\n          name: 'Прес делат буду бальшой',\n          id: 7,\n          time: '20:00 - 22:00',\n          type: 'Common',\n          date: '30-09-2023'\n        }, {\n          name: 'Дрочит на ноч спокойно ночи',\n          id: 8,\n          time: '12:00 - 24:00',\n          type: 'Common',\n          date: '01-10-2023'\n        }, {\n          name: 'Дрочит на ноч спокойно ночи',\n          id: 9,\n          time: '14:30 - 15:00',\n          type: 'Common',\n          date: '27-09-2023'\n        }]\n      }, {\n        title: 'Этот месяц',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: [{\n          name: 'Утренняя рутина',\n          id: 4,\n          time: '10:00 - 15:00',\n          type: 'EveryDay'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 5,\n          time: '19:00 - 22:00',\n          type: 'Working'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 6,\n          time: '21:00 - 23:30',\n          type: 'Common'\n        }]\n      }],\n      selectTask: []\n    };\n  },\n  getters: {\n    USER_REGISTRATIONS: state => {\n      return state.registration;\n    },\n    USER_TASKLISTS: state => {\n      return state.tasklist;\n    },\n    USER_SELECT_TASKS: state => {\n      return state.selectTask;\n    }\n  },\n  mutations: {\n    UPDATE_VISIBLE_TASKLIST: (state, idx) => {\n      state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle;\n      state.tasklist[idx].isTasklistVisible = !state.tasklist[idx].isTasklistVisible;\n    },\n    UPDATE_SELECT_TASKS: (state, response) => {\n      state.selectTask = response;\n    }\n  },\n  actions: {\n    GET_THIS_WEEK_TASKS({\n      commit\n    }) {\n      axios({\n        method: 'GET',\n        url: 'https://api.kinopoisk.dev/v1.3/movie?selectFields=id&selectFields=name&selectFields=poster.url&page=1&limit=50&poster.url=%21null&top250=%21null',\n        headers: {\n          'accept': 'application/json',\n          'X-API-KEY': '9PRCJQN-50B4RSN-H1AFN30-AQM1V9G'\n        }\n      }).then(response => {\n        commit('UPDATE_THIS_WEEK_TASKS');\n      }).catch(() => {\n        alert(\"Грустно\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","state","registration","tasklist","title","toggleCircle","isTasklistVisible","tasks","name","id","time","type","date","selectTask","getters","USER_REGISTRATIONS","USER_TASKLISTS","USER_SELECT_TASKS","mutations","UPDATE_VISIBLE_TASKLIST","idx","UPDATE_SELECT_TASKS","response","actions","GET_THIS_WEEK_TASKS","commit","method","url","headers","then","catch","alert"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/User.js"],"sourcesContent":["import axios from 'axios'\r\nexport default {\r\n\r\n    state() {\r\n        return {\r\n            registration: '23-07-2023',\r\n            tasklist: [\r\n                {\r\n                    title: 'Эта неделя',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [\r\n                        {name: 'Кросс бегит 10км', id: 1, time: '03:00 - 05:00', type: 'EveryDay', date: '25-09-2023'},\r\n                        {name: 'Дрочит', id: 2, time: '12:00 - 17:00', type: 'Working',date: '26-09-2023'},\r\n                        {name: 'Обед кушать плотный спасибо мама', id: 3, time: '15:00 - 20:00', type: 'Common',date: '27-09-2023'},\r\n                        {name: 'Дрочит', id: 4, time: '12:00 - 14:30', type: 'Common',date: '27-09-2023'},\r\n                        {name: 'Уроки делат', id: 5, time: '12:00 - 17:30', type: 'EveryDay', date: '29-09-2023'},\r\n                        {name: 'Пакакать', id: 6, time: '17:30 - 20:00', type: 'Working',date: '29-09-2023'},\r\n                        {name: 'Прес делат буду бальшой', id: 7, time: '20:00 - 22:00', type: 'Common',date: '30-09-2023'},\r\n                        {name: 'Дрочит на ноч спокойно ночи', id: 8, time: '12:00 - 24:00', type: 'Common',date: '01-10-2023'}, \r\n                        {name: 'Дрочит на ноч спокойно ночи', id: 9, time: '14:30 - 15:00', type: 'Common',date: '27-09-2023'}\r\n                        \r\n                    ],\r\n                }, \r\n                {\r\n                    title: 'Этот месяц',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [\r\n                        {name: 'Утренняя рутина', id: 4, time: '10:00 - 15:00', type: 'EveryDay'},\r\n                        {name: 'Вечерняя закалка', id: 5, time: '19:00 - 22:00', type: 'Working'},\r\n                        {name: 'Вечерняя закалка', id: 6, time: '21:00 - 23:30', type: 'Common'},\r\n                    ],\r\n                }, \r\n            ], \r\n            selectTask: []\r\n        }\r\n        \r\n    }, \r\n    getters: {\r\n        \r\n        USER_REGISTRATIONS: state => {\r\n            return state.registration\r\n        },\r\n        USER_TASKLISTS: state => {\r\n            return state.tasklist\r\n        }, \r\n        USER_SELECT_TASKS: state => {\r\n            return state.selectTask\r\n        }\r\n    }, \r\n    mutations: {\r\n        UPDATE_VISIBLE_TASKLIST: (state, idx) => {\r\n            state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle\r\n            state.tasklist[idx].isTasklistVisible = !state.tasklist[idx].isTasklistVisible\r\n        }, \r\n        UPDATE_SELECT_TASKS: (state, response) => {\r\n            state.selectTask = response\r\n        }\r\n    }, \r\n    actions: {\r\n        \r\n        GET_THIS_WEEK_TASKS({commit}) {\r\n            axios({\r\n                method: 'GET', \r\n                url: 'https://api.kinopoisk.dev/v1.3/movie?selectFields=id&selectFields=name&selectFields=poster.url&page=1&limit=50&poster.url=%21null&top250=%21null',\r\n                headers: {\r\n                    'accept': 'application/json', \r\n                    'X-API-KEY': '9PRCJQN-50B4RSN-H1AFN30-AQM1V9G'\r\n                }\r\n            })\r\n            .then((response) => {\r\n                commit('UPDATE_THIS_WEEK_TASKS')\r\n                })\r\n            .catch(() => {\r\n                alert(\"Грустно\")\r\n                })   \r\n            }\r\n\r\n\r\n        \r\n        ,\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}