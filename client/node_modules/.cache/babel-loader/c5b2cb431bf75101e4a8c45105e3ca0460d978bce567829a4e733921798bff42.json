{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport moment from \"moment\";\n// eslint-disable-next-line no-unused-vars\n// import Task from \"../../store/modules/Task/Task\";\n\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\nmoment.locale(\"ru\");\nexport default {\n  data() {\n    return {\n      currentWeek: moment().clone().startOf(\"week\"),\n      showSelect: false,\n      // меняет состоянике стрелки в списке месяцев\n      isArrowShow: true,\n      // убирает стрелку при достижении недели регистрации\n      isFirstWeekReg: false // тоже для первой регистрации\n    };\n  },\n\n  computed: {\n    ...mapGetters([\"CURRENT_MONTHS\", \"USER_REGISTRATIONS\", \"CURRENT_WEEK\", \"FIRST_DAY\"])\n  },\n  mounted() {\n    this.CHANGE_WEEK(moment());\n    this.GET_PRESENT_DAY();\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\n  },\n  methods: {\n    ...mapActions([\"GET_MONTHS\", \"GET_PRESENT_DAY\", \"CHANGE_WEEK\", 'GET_THIS_WEEK_TASKS']),\n    ...mapMutations([\"UPDATE_WEEK\", \"UPDATE_FIRST_DAY_WEEK\"]),\n    // заполнение днями недели текущей\n    fillDays(startDate) {\n      const daysArray = [];\n      for (let i = 0; i <= 6; i++) {\n        const day = moment(startDate).add(i, \"days\").format(\"ddd-DD-MMMM-YYYY-MM\");\n        daysArray.push(day.split(\"-\"));\n      }\n      return daysArray;\n    },\n    // изменяет выбранный месяц в списке (визуально)\n    async changeCurrentMonth(value) {\n      this.startLoading();\n      this.UPDATE_FIRST_DAY_WEEK(`${value[0]} ${value[1]}`);\n      const newDate = moment(`${value[0]}-${value[1]}`, \"MMMM-YYYY\").startOf(\"month\");\n      this.CHANGE_WEEK(newDate);\n      this.showSelect = false;\n      this.currentWeek = newDate;\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n      await this.loading();\n      this.scrollToCurrentHour();\n    },\n    // переключает неделю на предыдущую (стрелка)\n    async prevWeek(startDate) {\n      this.startLoading();\n      const previousWeek = this.currentWeek ? this.currentWeek.clone().subtract(1, \"week\") : moment().startOf(\"isoWeek\").subtract(1, \"week\");\n      const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\"month\");\n      if (previousWeek.isBefore(startDateNormalized)) {\n        if (!this.isFirstWeekReg) {\n          this.currentWeek = previousWeek;\n          this.isArrowShow = false;\n        }\n        this.isFirstWeekReg = true;\n      } else {\n        this.currentWeek.subtract(1, \"week\");\n      }\n      this.UPDATE_WEEK(this.fillDays(this.currentWeek));\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n      this.UPDATE_FIRST_DAY_WEEK(`${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${this.CURRENT_WEEK[0][3]}`);\n      await this.loading();\n      this.scrollToCurrentHour();\n    },\n    // переключает неделю на следующую (стрелка)\n    async nextWeek() {\n      this.startLoading();\n      this.isFirstWeekReg = false;\n      this.isArrowShow = true;\n      if (!this.currentWeek) {\n        // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\n        this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\n      } else {\n        // Иначе переключаемся на следующую неделю\n        this.currentWeek.add(1, \"week\");\n      }\n      this.UPDATE_WEEK(this.fillDays(this.currentWeek));\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n      this.UPDATE_FIRST_DAY_WEEK(`${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${this.CURRENT_WEEK[0][3]}`);\n      await this.loading();\n      this.scrollToCurrentHour();\n    },\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    async goToCurrentWeek() {\n      this.startLoading();\n      this.CHANGE_WEEK(moment());\n      this.currentWeek = moment().clone().startOf(\"week\");\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n      this.GET_THIS_DAY_TASKS(this.PRESENT_DAY);\n      await this.loading();\n      this.scrollToCurrentHour();\n    },\n    // старт загрузки\n    startLoading() {\n      this.showLoader = true;\n      this.showCalendar = false;\n    },\n    // процесс загрузки\n    async loading() {\n      return new Promise(resolve => {\n        // Здесь выполняются асинхронные действия, например, задержка в 1 секунду\n        setTimeout(() => {\n          this.showLoader = false;\n          this.showCalendar = true;\n          resolve(); // Разрешить промис после выполнения\n        }, 1000);\n      });\n    }\n  }\n};","map":{"version":3,"names":["moment","mapGetters","mapActions","mapMutations","locale","data","currentWeek","clone","startOf","showSelect","isArrowShow","isFirstWeekReg","computed","mounted","CHANGE_WEEK","GET_PRESENT_DAY","GET_MONTHS","USER_REGISTRATIONS","methods","fillDays","startDate","daysArray","i","day","add","format","push","split","changeCurrentMonth","value","startLoading","UPDATE_FIRST_DAY_WEEK","newDate","GET_THIS_WEEK_TASKS","CURRENT_WEEK","loading","scrollToCurrentHour","prevWeek","previousWeek","subtract","startDateNormalized","isBefore","UPDATE_WEEK","capitalizeFirstLetter","nextWeek","string","charAt","toUpperCase","slice","goToCurrentWeek","GET_THIS_DAY_TASKS","PRESENT_DAY","showLoader","showCalendar","Promise","resolve","setTimeout"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\CALENDAR\\SelectArrow.vue"],"sourcesContent":["<template>\r\n  <div class=\"select__arrow\">\r\n    <div class=\"select\">\r\n      <div class=\"select__header\">\r\n        <div class=\"select__current\">{{ FIRST_DAY }}</div>\r\n        <img\r\n          @click=\"showSelect = !showSelect\"\r\n          :class=\"showSelect ? 'select__btn' : 'select__btn-isActive'\"\r\n          src=\"../../../assets/images/home/select__btn.svg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div :class=\"showSelect ? 'select__body-show' : 'select__body'\">\r\n        <div\r\n          @click=\"changeCurrentMonth(month)\"\r\n          class=\"select__item\"\r\n          v-for=\"month in CURRENT_MONTHS\"\r\n          :key=\"month\"\r\n        >\r\n          {{ month[0] }} {{ month[1] }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"arrows\">\r\n      <img\r\n        @click=\"prevWeek(this.USER_REGISTRATIONS)\"\r\n        src=\"../../../assets/images/home/left-arrow.svg\"\r\n        alt=\"\"\r\n        :class=\"isArrowShow ? 'arrows__item' : 'arrows__item-hidden'\"\r\n      />\r\n      <img\r\n        @click=\"nextWeek()\"\r\n        src=\"../../../assets/images/home/right-arrow.svg\"\r\n        alt=\"\"\r\n        class=\"arrows__item\"\r\n      />\r\n      <img\r\n        @click=\"goToCurrentWeek\"\r\n        class=\"arrows__item\"\r\n        src=\"../../../assets/images/home/home.svg\"\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\n// eslint-disable-next-line no-unused-vars\r\n// import Task from \"../../store/modules/Task/Task\";\r\n\r\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\r\nmoment.locale(\"ru\");\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      currentWeek: moment().clone().startOf(\"week\"),\r\n\r\n      showSelect: false, // меняет состоянике стрелки в списке месяцев\r\n      isArrowShow: true, // убирает стрелку при достижении недели регистрации\r\n      isFirstWeekReg: false, // тоже для первой регистрации\r\n\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      \"CURRENT_MONTHS\",\r\n      \"USER_REGISTRATIONS\",\r\n      \"CURRENT_WEEK\",\r\n      \"FIRST_DAY\",\r\n    ]),\r\n  },\r\n  mounted() {\r\n    this.CHANGE_WEEK(moment());\r\n    this.GET_PRESENT_DAY();\r\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\r\n      \"GET_MONTHS\",\r\n      \"GET_PRESENT_DAY\",\r\n      \"CHANGE_WEEK\",\r\n      'GET_THIS_WEEK_TASKS'\r\n    ]),\r\n    ...mapMutations([\r\n      \"UPDATE_WEEK\",\r\n      \"UPDATE_FIRST_DAY_WEEK\",\r\n    ]),\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    // заполнение днями недели текущей\r\n    fillDays(startDate) {\r\n      const daysArray = [];\r\n      for (let i = 0; i <= 6; i++) {\r\n        const day = moment(startDate)\r\n          .add(i, \"days\")\r\n          .format(\"ddd-DD-MMMM-YYYY-MM\");\r\n        daysArray.push(day.split(\"-\"));\r\n      }\r\n      return daysArray;\r\n    },\r\n\r\n    // изменяет выбранный месяц в списке (визуально)\r\n    async changeCurrentMonth(value) {\r\n      this.startLoading();\r\n      this.UPDATE_FIRST_DAY_WEEK(`${value[0]} ${value[1]}`);\r\n      const newDate = moment(`${value[0]}-${value[1]}`, \"MMMM-YYYY\").startOf(\r\n        \"month\"\r\n      );\r\n      this.CHANGE_WEEK(newDate);\r\n      this.showSelect = false;\r\n      this.currentWeek = newDate;\r\n\r\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n      await this.loading();\r\n      this.scrollToCurrentHour();\r\n    },\r\n\r\n    // переключает неделю на предыдущую (стрелка)\r\n    async prevWeek(startDate) {\r\n      this.startLoading();\r\n      const previousWeek = this.currentWeek\r\n        ? this.currentWeek.clone().subtract(1, \"week\")\r\n        : moment().startOf(\"isoWeek\").subtract(1, \"week\");\r\n\r\n      const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\r\n        \"month\"\r\n      );\r\n\r\n      if (previousWeek.isBefore(startDateNormalized)) {\r\n        if (!this.isFirstWeekReg) {\r\n          this.currentWeek = previousWeek;\r\n          this.isArrowShow = false;\r\n        }\r\n        this.isFirstWeekReg = true;\r\n      } else {\r\n        this.currentWeek.subtract(1, \"week\");\r\n      }\r\n\r\n      this.UPDATE_WEEK(this.fillDays(this.currentWeek));\r\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n      this.UPDATE_FIRST_DAY_WEEK(\r\n        `${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${\r\n          this.CURRENT_WEEK[0][3]\r\n        }`\r\n      );\r\n\r\n      await this.loading();\r\n      this.scrollToCurrentHour();\r\n    },\r\n\r\n    // переключает неделю на следующую (стрелка)\r\n    async nextWeek() {\r\n      this.startLoading();\r\n      this.isFirstWeekReg = false;\r\n      this.isArrowShow = true;\r\n      if (!this.currentWeek) {\r\n        // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\r\n        this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\r\n      } else {\r\n        // Иначе переключаемся на следующую неделю\r\n        this.currentWeek.add(1, \"week\");\r\n      }\r\n\r\n      this.UPDATE_WEEK(this.fillDays(this.currentWeek));\r\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n      this.UPDATE_FIRST_DAY_WEEK(\r\n        `${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${\r\n          this.CURRENT_WEEK[0][3]\r\n        }`\r\n      );\r\n\r\n      await this.loading();\r\n      this.scrollToCurrentHour();\r\n    },\r\n\r\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\r\n    capitalizeFirstLetter(string) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    },\r\n\r\n    async goToCurrentWeek() {\r\n      this.startLoading();\r\n      this.CHANGE_WEEK(moment());\r\n      this.currentWeek = moment().clone().startOf(\"week\");\r\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n      this.GET_THIS_DAY_TASKS(this.PRESENT_DAY);\r\n      await this.loading();\r\n      this.scrollToCurrentHour();\r\n    },\r\n    // старт загрузки\r\n    startLoading() {\r\n        this.showLoader = true;\r\n        this.showCalendar = false;\r\n        },\r\n        // процесс загрузки\r\n        async loading() {\r\n    return new Promise((resolve) => {\r\n        // Здесь выполняются асинхронные действия, например, задержка в 1 секунду\r\n        setTimeout(() => {\r\n        this.showLoader = false;\r\n        this.showCalendar = true;\r\n        resolve(); // Разрешить промис после выполнения\r\n        }, 1000);\r\n    });\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}