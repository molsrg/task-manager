{"ast":null,"code":"// import axios from 'axios'\n\nexport default {\n  state() {\n    return {\n      // users: {},\n      tasks: [{\n        name: 'Утренняя рутина',\n        id: 1,\n        time: '07:00 - 09:00',\n        type: 'EveryDay'\n      }, {\n        name: 'Вечерняя закалка',\n        id: 2,\n        time: '09:00 - 12:30',\n        type: 'Working'\n      }, {\n        name: 'Вечерняя закалка',\n        id: 2,\n        time: '09:00 - 17:30',\n        type: 'Common'\n      }]\n    };\n  },\n  getters: {\n    USER_TASKS: state => {\n      return state.tasks;\n    }\n  },\n  mutations: {\n    // SET_USERS_FROM_FIREBASE: (state, response) => {\n    //     state.users = response\n    // }, \n  },\n  actions: {\n    // GET_USERS_FROM_FIREBASE({commit}){\n    //     axios.get('https://movie-seeker-d9219-default-rtdb.firebaseio.com/user.json')\n    //         .then((res) => {\n    //             let data = res.data\n    //             const response = Object.keys(data).map(key => {\n    //                 return {\n    //                     id:key, \n    //                     name: data[key].userName, \n    //                     mail: data[key].userMail, \n    //                     password: data[key].userPassword\n    //                 }\n    //             })\n    //             commit('SET_USERS_FROM_FIREBASE', response)\n    //         })\n    //         .catch(() => {\n    //             alert('Ошибка получения данных пользователей с БД!')\n    //         })  \n    // }, \n  }\n};","map":{"version":3,"names":["state","tasks","name","id","time","type","getters","USER_TASKS","mutations","actions"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/User.js"],"sourcesContent":["// import axios from 'axios'\r\n\r\nexport default {\r\n    state() {\r\n        return {\r\n            // users: {},\r\n            tasks: [{name: 'Утренняя рутина', id: 1, time: '07:00 - 09:00', type: 'EveryDay'}, {name: 'Вечерняя закалка', id: 2, time: '09:00 - 12:30', type: 'Working'},{name: 'Вечерняя закалка', id: 2, time: '09:00 - 17:30', type: 'Common'}],\r\n        }\r\n        \r\n    }, \r\n    getters: {\r\n        USER_TASKS: state => {\r\n            return state.tasks\r\n        }\r\n    }, \r\n    mutations: {\r\n        // SET_USERS_FROM_FIREBASE: (state, response) => {\r\n        //     state.users = response\r\n        // }, \r\n    }, \r\n    actions: {\r\n        // GET_USERS_FROM_FIREBASE({commit}){\r\n        //     axios.get('https://movie-seeker-d9219-default-rtdb.firebaseio.com/user.json')\r\n        //         .then((res) => {\r\n        //             let data = res.data\r\n        //             const response = Object.keys(data).map(key => {\r\n        //                 return {\r\n        //                     id:key, \r\n        //                     name: data[key].userName, \r\n        //                     mail: data[key].userMail, \r\n        //                     password: data[key].userPassword\r\n        //                 }\r\n        //             })\r\n        //             commit('SET_USERS_FROM_FIREBASE', response)\r\n        //         })\r\n        //         .catch(() => {\r\n        //             alert('Ошибка получения данных пользователей с БД!')\r\n        //         })  \r\n        // }, \r\n\r\n}}"],"mappings":"AAAA;;AAEA,eAAe;EACXA,KAAKA,CAAA,EAAG;IACJ,OAAO;MACH;MACAC,KAAK,EAAE,CAAC;QAACC,IAAI,EAAE,iBAAiB;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAU,CAAC,EAAE;QAACH,IAAI,EAAE,kBAAkB;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAS,CAAC,EAAC;QAACH,IAAI,EAAE,kBAAkB;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAQ,CAAC;IACzO,CAAC;EAEL,CAAC;EACDC,OAAO,EAAE;IACLC,UAAU,EAAEP,KAAK,IAAI;MACjB,OAAOA,KAAK,CAACC,KAAK;IACtB;EACJ,CAAC;EACDO,SAAS,EAAE;IACP;IACA;IACA;EAAA,CACH;EACDC,OAAO,EAAE;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEP,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}