{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"leftnavbar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TaskContainer = _resolveComponent(\"TaskContainer\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <div class=\\\"people-container\\\">\\r\\n      <img\\r\\n        class=\\\"logo__img people-container__logo\\\"\\r\\n        src=\\\"../../assets/images/auth/logo.svg\\\"\\r\\n        alt=\\\"logo\\\"\\r\\n      />\\r\\n\\r\\n      <div class=\\\"people-container__user-container user-container\\\">\\r\\n        <h3 class=\\\"user-container__user-count\\\">3</h3>\\r\\n        <img src=\\\"../../assets/images/home/line__horizont.svg\\\" alt=\\\"\\\" />\\r\\n        <img\\r\\n          src=\\\"../../assets/images/home/zaxar.png\\\"\\r\\n          alt=\\\"\\\"\\r\\n          class=\\\"user-container__user\\\"\\r\\n        />\\r\\n        <img\\r\\n          src=\\\"../../assets/images/home/zaxar.png\\\"\\r\\n          alt=\\\"\\\"\\r\\n          class=\\\"user-container__user\\\"\\r\\n        />\\r\\n        <img\\r\\n          src=\\\"../../assets/images/home/zaxar.png\\\"\\r\\n          alt=\\\"\\\"\\r\\n          class=\\\"user-container__user\\\"\\r\\n        />\\r\\n        <button class=\\\"user-container__add-user\\\" @click=\\\"addPeople()\\\">\\r\\n          <img src=\\\"../../assets/images/home/addpeople.svg\\\" alt=\\\"\\\" />\\r\\n        </button>\\r\\n      </div>\\r\\n      <div></div>\\r\\n      <img @click=\\\"goPersonalArea\\\" src=\\\"./../../assets/images/home/lk.svg\\\" alt=\\\"\\\">\\r\\n      <img @click=\\\"goOut\\\" src=\\\"./../../assets/images/auth/exit.svg\\\" alt=\\\"\\\">\\r\\n    </div> \"), _createCommentVNode(\" <div class=\\\"task-container\\\">\\r\\n      <h3 class=\\\"logo__text task-container__logo-text\\\">Task Unity Tech</h3>\\r\\n      <div\\r\\n        v-for=\\\"(tasklist, index) in USER_TASKLISTS\\\"\\r\\n        :key=\\\"index\\\"\\r\\n        class=\\\"task-container__tasklist tasklist\\\"\\r\\n      >\\r\\n        <div class=\\\"tasklist__title\\\">\\r\\n          <h4 class=\\\"tasklist__text\\\">{{ tasklist.title }}</h4>\\r\\n          <div\\r\\n            :class=\\\"\\r\\n              tasklist.toggleCircle\\r\\n                ? 'circle-plus opened'\\r\\n                : 'circle-plus closed'\\r\\n            \\\"\\r\\n            @click=\\\"changeToggle(index)\\\"\\r\\n          >\\r\\n            <div class=\\\"circle\\\" v-if=\\\"tasklist.tasks.length > 0\\\">\\r\\n              <div class=\\\"horizontal\\\"></div>\\r\\n              <div class=\\\"vertical\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div\\r\\n          :class=\\\"{ visible: tasklist.isTasklistVisible && tasklist.tasks.length > 0}\\\"\\r\\n          class=\\\"tasklist__tasks\\\"\\r\\n        >\\r\\n          <label\\r\\n            v-for=\\\"task in tasklist.tasks\\\"\\r\\n            :key=\\\"task.id\\\"\\r\\n            class=\\\"tasklist__label\\\"\\r\\n          >\\r\\n            <input\\r\\n              class=\\\"real-checkbox\\\"\\r\\n              :value=\\\"task\\\"\\r\\n              type=\\\"checkbox\\\"\\r\\n              @change=\\\"selectTasks()\\\"\\r\\n              v-model=\\\"checkedTasks\\\"\\r\\n            />\\r\\n            <span class=\\\"custom-checkbox\\\"></span>\\r\\n            {{ task.name }}\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"display:flex; flex-direction: column;\\\">\\r\\n        <button class=\\\"task-container__tasklist tasklist\\\" @click=\\\"addedTask\\\">\\r\\n        Добавить задачу\\r\\n        </button>\\r\\n        <button class=\\\"task-container__tasklist tasklist\\\" @click=\\\"addedTasklist\\\">\\r\\n          Добавить лист\\r\\n        </button>\\r\\n        <button class=\\\"task-container__tasklist tasklist\\\" @click=\\\"checkSelectedTask\\\">\\r\\n          Показать отмеченные задачи\\r\\n        </button>\\r\\n      </div>\\r\\n      \\r\\n    </div> \"), _createVNode(_component_TaskContainer)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_TaskContainer"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\LeftNavbar.vue"],"sourcesContent":["<template>\r\n  <div class=\"leftnavbar\">\r\n    <!-- <div class=\"people-container\">\r\n      <img\r\n        class=\"logo__img people-container__logo\"\r\n        src=\"../../assets/images/auth/logo.svg\"\r\n        alt=\"logo\"\r\n      />\r\n\r\n      <div class=\"people-container__user-container user-container\">\r\n        <h3 class=\"user-container__user-count\">3</h3>\r\n        <img src=\"../../assets/images/home/line__horizont.svg\" alt=\"\" />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <button class=\"user-container__add-user\" @click=\"addPeople()\">\r\n          <img src=\"../../assets/images/home/addpeople.svg\" alt=\"\" />\r\n        </button>\r\n      </div>\r\n      <div></div>\r\n      <img @click=\"goPersonalArea\" src=\"./../../assets/images/home/lk.svg\" alt=\"\">\r\n      <img @click=\"goOut\" src=\"./../../assets/images/auth/exit.svg\" alt=\"\">\r\n    </div> -->\r\n\r\n    <!-- <div class=\"task-container\">\r\n      <h3 class=\"logo__text task-container__logo-text\">Task Unity Tech</h3>\r\n      <div\r\n        v-for=\"(tasklist, index) in USER_TASKLISTS\"\r\n        :key=\"index\"\r\n        class=\"task-container__tasklist tasklist\"\r\n      >\r\n        <div class=\"tasklist__title\">\r\n          <h4 class=\"tasklist__text\">{{ tasklist.title }}</h4>\r\n          <div\r\n            :class=\"\r\n              tasklist.toggleCircle\r\n                ? 'circle-plus opened'\r\n                : 'circle-plus closed'\r\n            \"\r\n            @click=\"changeToggle(index)\"\r\n          >\r\n            <div class=\"circle\" v-if=\"tasklist.tasks.length > 0\">\r\n              <div class=\"horizontal\"></div>\r\n              <div class=\"vertical\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          :class=\"{ visible: tasklist.isTasklistVisible && tasklist.tasks.length > 0}\"\r\n          class=\"tasklist__tasks\"\r\n        >\r\n          <label\r\n            v-for=\"task in tasklist.tasks\"\r\n            :key=\"task.id\"\r\n            class=\"tasklist__label\"\r\n          >\r\n            <input\r\n              class=\"real-checkbox\"\r\n              :value=\"task\"\r\n              type=\"checkbox\"\r\n              @change=\"selectTasks()\"\r\n              v-model=\"checkedTasks\"\r\n            />\r\n            <span class=\"custom-checkbox\"></span>\r\n            {{ task.name }}\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div style=\"display:flex; flex-direction: column;\">\r\n        <button class=\"task-container__tasklist tasklist\" @click=\"addedTask\">\r\n        Добавить задачу\r\n        </button>\r\n        <button class=\"task-container__tasklist tasklist\" @click=\"addedTasklist\">\r\n          Добавить лист\r\n        </button>\r\n        <button class=\"task-container__tasklist tasklist\" @click=\"checkSelectedTask\">\r\n          Показать отмеченные задачи\r\n        </button>\r\n      </div>\r\n      \r\n    </div> -->\r\n  \r\n    <TaskContainer></TaskContainer>\r\n  \r\n  </div>\r\n</template>\r\n  \r\n\r\n<script>\r\n\r\nimport { mapGetters, mapMutations, mapActions } from \"vuex\";\r\nimport TaskContainer from './LEFT_NAVBAR/TaskContainer.vue'\r\nimport PeopleContainer from './LEFT_NAVBAR/PeopleContainer.vue'\r\n// eslint-disable-next-line no-unused-vars\r\nimport Task from '../../store/modules/Task/Task'\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkedTasks: [],\r\n    };\r\n  \r\n  },\r\n\r\n  components: {\r\n    TaskContainer, \r\n    PeopleContainer\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"USER_TASKLISTS\", 'CHECKED_TASK']),\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"UPDATE_VISIBLE_TASKLIST\", \"UPDATE_SELECT_TASKS\",'UPDATE_IS_ADDED_TASK', 'UPDATE_IS_ADDED_TASKLIST', 'UPDATE_CHECK_SELECT_TASK']),\r\n    ...mapActions(['GET_THIS_WEEK_TASKS','GET_THIS_DAY_TASKS']), \r\n\r\n    changeToggle(index) {\r\n      this.UPDATE_VISIBLE_TASKLIST(index);\r\n    },\r\n    selectTasks() {\r\n      this.UPDATE_SELECT_TASKS(this.checkedTasks);\r\n    },\r\n\r\n    addedTask() {\r\n      this.UPDATE_IS_ADDED_TASK()\r\n    },\r\n\r\n    addedTasklist(){\r\n      this.UPDATE_IS_ADDED_TASKLIST()\r\n    },\r\n    goPersonalArea(){\r\n      window.location.href = \"http://localhost:8080/personal\"\r\n    },\r\n\r\n    checkSelectedTask(){\r\n      this.UPDATE_CHECK_SELECT_TASK()\r\n    },\r\n\r\n    // заготовка под добавление людей\r\n    addPeople() {},\r\n\r\n    goOut(){\r\n      localStorage.removeItem('AccessToken')\r\n      window.location.href = \"http://localhost:8080/\"\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;;uBAAvBC,mBAAA,CA+FM,OA/FNC,UA+FM,GA9FJC,mBAAA,uvCAgCU,EAEVA,mBAAA,siEAwDU,EAEVC,YAAA,CAA+BC,wBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}