{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  state() {\n    return {\n      registration: \"23-07-2023\",\n      tasklist: [{\n        title: \"Текущий день\",\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: []\n      }, {\n        title: \"Неделя на календаре\",\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: []\n      }],\n      selectTask: []\n    };\n  },\n  getters: {\n    USER_REGISTRATIONS: state => {\n      return state.registration;\n    },\n    USER_TASKLISTS: state => {\n      return state.tasklist;\n    },\n    USER_SELECT_TASKS: state => {\n      return state.selectTask;\n    },\n    USER_TASKS_IN_CALENDAR: state => {\n      return state.tasklist[1].tasks;\n    }\n  },\n  mutations: {\n    UPDATE_VISIBLE_TASKLIST: (state, idx) => {\n      state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle;\n      state.tasklist[idx].isTasklistVisible = !state.tasklist[idx].isTasklistVisible;\n    },\n    UPDATE_SELECT_TASKS: (state, response) => {\n      state.selectTask = response;\n    },\n    UPDATE_THIS_DAY_TASKS: (state, response) => {\n      state.tasklist[0].tasks = response;\n    },\n    UPDATE_THIS_WEEK_TASKS: (state, response) => {\n      state.tasklist[1].tasks = response;\n    },\n    UPDATE_TASKLIST: (state, data) => {\n      state.tasklist = state.tasklist.concat(data);\n    }\n  },\n  actions: {\n    GET_THIS_DAY_TASKS({\n      commit\n    }, day) {\n      const presentDay = `${day[2]}-${day[3]}-${day[0]}`;\n      let nextDay_day = day[0].split(\"0\");\n      const nextDay = `${day[2]}-${day[3]}-${Number(day[0]) > 10 ? Number(day[0]) + 1 : `0${Number(nextDay_day[1]) + 1}`}`;\n      axios({\n        method: \"GET\",\n        url: \"http://localhost:5000/task/getTask\",\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`\n        },\n        params: {\n          startTime: `${presentDay}T00:00:00Z`,\n          endTime: `${nextDay}T00:00:00Z`\n        }\n      }).then(response => {\n        commit(\"UPDATE_THIS_DAY_TASKS\", response.data.tasks);\n      }).catch(() => {\n        alert(\"Запрос на этот день не удался\");\n      });\n    },\n    GET_THIS_WEEK_TASKS({\n      commit\n    }, week) {\n      const startTime = `${week[0][3]}-${week[0][4]}-${week[0][1]}`;\n      const endTime = `${week[6][3]}-${week[6][4]}-${week[6][1]}`;\n      axios({\n        method: \"GET\",\n        url: \"http://localhost:5000/task/getTask\",\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`\n        },\n        params: {\n          startTime: `${startTime}T00:00:00Z`,\n          endTime: `${endTime}T00:00:00Z`\n        }\n      }).then(response => {\n        commit(\"UPDATE_THIS_WEEK_TASKS\", response.data.tasks);\n      }).catch(() => {\n        alert(\"Запрос на эту неделю не удался\");\n      });\n    },\n    ADDED_TASKLIST() {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/task/createTaskList\",\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`\n        },\n        data: {\n          title: \"мужиков\",\n          toggleCircle: false,\n          isTasklistVisible: false,\n          startTime: \"2023-10-02T11:00:00Z\",\n          endTime: \"2023-10-03T16:30:00Z\"\n        }\n      }).then(() => {\n        // this.GET_TASKLIST()\n      }).catch(() => {\n        alert(\"Создание списка не удалось\");\n      });\n    },\n    GET_TASKLIST({\n      commit\n    }) {\n      axios({\n        method: \"GET\",\n        url: \"http://localhost:5000/task/getTaskList\",\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`\n        }\n      }).then(response => {\n        commit(\"UPDATE_TASKLIST\", response.data.tasksList);\n      }).catch(() => {\n        alert(\"Запрос на кастомный список не удался\");\n      });\n    },\n    ADD_TASK() {\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/task/createTask\",\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`\n        },\n        data: {\n          name: \"Занятие спортом\",\n          type: \"Working\",\n          text: \"Люблю заниматься по утрам\",\n          status: \"Done\",\n          startTime: \"2023-10-03T11:00:00Z\",\n          endTime: \"2023-10-03T15:00:00Z\"\n        }\n      }).then(() => {\n        this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n        this.GET_THIS_DAY_TASKS(this.PRESENT_DAY);\n      }).catch(err => {\n        console.log(err);\n        alert(\"Создание задачи не удалось\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","state","registration","tasklist","title","toggleCircle","isTasklistVisible","tasks","selectTask","getters","USER_REGISTRATIONS","USER_TASKLISTS","USER_SELECT_TASKS","USER_TASKS_IN_CALENDAR","mutations","UPDATE_VISIBLE_TASKLIST","idx","UPDATE_SELECT_TASKS","response","UPDATE_THIS_DAY_TASKS","UPDATE_THIS_WEEK_TASKS","UPDATE_TASKLIST","data","concat","actions","GET_THIS_DAY_TASKS","commit","day","presentDay","nextDay_day","split","nextDay","Number","method","url","headers","authorization","localStorage","getItem","params","startTime","endTime","then","catch","alert","GET_THIS_WEEK_TASKS","week","ADDED_TASKLIST","GET_TASKLIST","tasksList","ADD_TASK","name","type","text","status","CURRENT_WEEK","PRESENT_DAY","err","console","log"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/User.js"],"sourcesContent":["import axios from \"axios\";\r\nexport default {\r\n  state() {\r\n    return {\r\n      registration: \"23-07-2023\",\r\n      tasklist: [\r\n        {\r\n          title: \"Текущий день\",\r\n          toggleCircle: false,\r\n          isTasklistVisible: false,\r\n          tasks: [],\r\n        },\r\n        {\r\n          title: \"Неделя на календаре\",\r\n          toggleCircle: false,\r\n          isTasklistVisible: false,\r\n          tasks: [],\r\n        },\r\n      ],\r\n      selectTask: [],\r\n    };\r\n  },\r\n  getters: {\r\n    USER_REGISTRATIONS: (state) => {\r\n      return state.registration;\r\n    },\r\n    USER_TASKLISTS: (state) => {\r\n      return state.tasklist;\r\n    },\r\n    USER_SELECT_TASKS: (state) => {\r\n      return state.selectTask;\r\n    },\r\n\r\n    USER_TASKS_IN_CALENDAR: (state) => {\r\n      return state.tasklist[1].tasks;\r\n    },\r\n  },\r\n  mutations: {\r\n    UPDATE_VISIBLE_TASKLIST: (state, idx) => {\r\n      state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle;\r\n      state.tasklist[idx].isTasklistVisible =\r\n        !state.tasklist[idx].isTasklistVisible;\r\n    },\r\n    UPDATE_SELECT_TASKS: (state, response) => {\r\n      state.selectTask = response;\r\n    },\r\n    UPDATE_THIS_DAY_TASKS: (state, response) => {\r\n      state.tasklist[0].tasks = response;\r\n    },\r\n    UPDATE_THIS_WEEK_TASKS: (state, response) => {\r\n      state.tasklist[1].tasks = response;\r\n    },\r\n    UPDATE_TASKLIST: (state, data) => {\r\n      state.tasklist = state.tasklist.concat(data);\r\n    },\r\n  },\r\n  actions: {\r\n    GET_THIS_DAY_TASKS({ commit }, day) {\r\n      const presentDay = `${day[2]}-${day[3]}-${day[0]}`;\r\n      let nextDay_day = day[0].split(\"0\");\r\n      const nextDay = `${day[2]}-${day[3]}-${\r\n        Number(day[0]) > 10\r\n          ? Number(day[0]) + 1\r\n          : `0${Number(nextDay_day[1]) + 1}`\r\n      }`;\r\n\r\n      axios({\r\n        method: \"GET\",\r\n        url: \"http://localhost:5000/task/getTask\",\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`,\r\n        },\r\n        params: {\r\n          startTime: `${presentDay}T00:00:00Z`,\r\n          endTime: `${nextDay}T00:00:00Z`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          commit(\"UPDATE_THIS_DAY_TASKS\", response.data.tasks);\r\n        })\r\n        .catch(() => {\r\n          alert(\"Запрос на этот день не удался\");\r\n        });\r\n    },\r\n\r\n    GET_THIS_WEEK_TASKS({ commit }, week) {\r\n      const startTime = `${week[0][3]}-${week[0][4]}-${week[0][1]}`;\r\n      const endTime = `${week[6][3]}-${week[6][4]}-${week[6][1]}`;\r\n\r\n      axios({\r\n        method: \"GET\",\r\n        url: \"http://localhost:5000/task/getTask\",\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`,\r\n        },\r\n        params: {\r\n          startTime: `${startTime}T00:00:00Z`,\r\n          endTime: `${endTime}T00:00:00Z`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          commit(\"UPDATE_THIS_WEEK_TASKS\", response.data.tasks);\r\n        })\r\n        .catch(() => {\r\n          alert(\"Запрос на эту неделю не удался\");\r\n        });\r\n    },\r\n\r\n    ADDED_TASKLIST() {\r\n      axios({\r\n        method: \"POST\",\r\n        url: \"http://localhost:5000/task/createTaskList\",\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`,\r\n        },\r\n        data: {\r\n          title: \"мужиков\",\r\n          toggleCircle: false,\r\n          isTasklistVisible: false,\r\n          startTime: \"2023-10-02T11:00:00Z\",\r\n          endTime: \"2023-10-03T16:30:00Z\",\r\n        },\r\n      })\r\n        .then(() => {\r\n          // this.GET_TASKLIST()\r\n        })\r\n        .catch(() => {\r\n          alert(\"Создание списка не удалось\");\r\n        });\r\n    },\r\n\r\n    GET_TASKLIST({ commit }) {\r\n      axios({\r\n        method: \"GET\",\r\n        url: \"http://localhost:5000/task/getTaskList\",\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          commit(\"UPDATE_TASKLIST\", response.data.tasksList);\r\n        })\r\n        .catch(() => {\r\n          alert(\"Запрос на кастомный список не удался\");\r\n        });\r\n    },\r\n\r\n    ADD_TASK() {\r\n      axios({\r\n        method: \"POST\",\r\n        url: \"http://localhost:5000/task/createTask\",\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`,\r\n        },\r\n        data: {\r\n          name: \"Занятие спортом\",\r\n          type: \"Working\",\r\n          text: \"Люблю заниматься по утрам\",\r\n          status: \"Done\",\r\n          startTime: \"2023-10-03T11:00:00Z\",\r\n          endTime: \"2023-10-03T15:00:00Z\",\r\n        },\r\n      })\r\n        .then(() => {\r\n          this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n          this.GET_THIS_DAY_TASKS(this.PRESENT_DAY);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Создание задачи не удалось\");\r\n        });\r\n    },\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}