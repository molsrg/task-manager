{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../../../assets/images/home/select__btn.svg';\nimport _imports_1 from '../../../assets/images/home/left-arrow.svg';\nimport _imports_2 from '../../../assets/images/home/right-arrow.svg';\nimport _imports_3 from '../../../assets/images/home/home.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-6ded1fa8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"navigation\"\n};\nconst _hoisted_2 = {\n  class: \"select-month\"\n};\nconst _hoisted_3 = {\n  class: \"select-month_header\"\n};\nconst _hoisted_4 = {\n  class: \"select-month_current\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"arrows\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(_ctx.FIRST_DAY), 1 /* TEXT */), _createElementVNode(\"img\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.showSelect = !$data.showSelect),\n    class: _normalizeClass($data.showSelect ? 'select-month_btn' : 'select-month_btn-isActive'),\n    src: _imports_0,\n    alt: \"\"\n  }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", {\n    class: _normalizeClass($data.showSelect ? 'select-month_body-show' : 'select-month_body')\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.CURRENT_MONTHS, month => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      onClick: $event => $options.changeCurrentMonth(month),\n      class: \"select-month_body-item\",\n      key: month\n    }, _toDisplayString(month[0]) + \" \" + _toDisplayString(month[1]), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.prevWeek(this.USER_REGISTRATIONS)),\n    src: _imports_1,\n    alt: \"\",\n    class: _normalizeClass($data.isArrowShow ? '' : 'arrows-item-hidden')\n  }, null, 2 /* CLASS */), _createElementVNode(\"img\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.nextWeek()),\n    src: _imports_2,\n    alt: \"\"\n  }), _createElementVNode(\"img\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.goToCurrentWeek && $options.goToCurrentWeek(...args)),\n    src: _imports_3,\n    alt: \"\"\n  })])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","_ctx","FIRST_DAY","onClick","_cache","$event","$data","showSelect","_normalizeClass","src","alt","_Fragment","_renderList","CURRENT_MONTHS","month","$options","changeCurrentMonth","key","_hoisted_5","_hoisted_6","prevWeek","USER_REGISTRATIONS","isArrowShow","nextWeek","args","goToCurrentWeek"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\CALENDAR\\SelectArrow.vue"],"sourcesContent":["<template>\r\n    <div class=\"navigation\">\r\n        <div class=\"select-month\">\r\n            <div class=\"select-month_header\">\r\n                <div class=\"select-month_current\">{{ FIRST_DAY }}</div>\r\n                <img\r\n                @click=\"showSelect = !showSelect\"\r\n                :class=\"showSelect ? 'select-month_btn' : 'select-month_btn-isActive'\"\r\n                \r\n                src=\"../../../assets/images/home/select__btn.svg\"\r\n                alt=\"\"\r\n                />\r\n            </div>\r\n\r\n            <div\r\n            :class=\"showSelect ? 'select-month_body-show' : 'select-month_body'\"\r\n            \r\n            >\r\n                <div\r\n                @click=\"changeCurrentMonth(month)\"\r\n                class=\"select-month_body-item\"\r\n                v-for=\"month in CURRENT_MONTHS\"\r\n                :key=\"month\"\r\n                >\r\n                {{ month[0] }} {{ month[1] }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"arrows\">\r\n        <img\r\n            @click=\"prevWeek(this.USER_REGISTRATIONS)\"\r\n            src=\"../../../assets/images/home/left-arrow.svg\"\r\n            alt=\"\"\r\n            :class=\"isArrowShow ? '' : 'arrows-item-hidden'\"\r\n        />\r\n        <img\r\n            @click=\"nextWeek()\"\r\n            src=\"../../../assets/images/home/right-arrow.svg\"\r\n            alt=\"\"\r\n        />\r\n        <img\r\n            @click=\"goToCurrentWeek\"\r\n            src=\"../../../assets/images/home/home.svg\"\r\n            alt=\"\"\r\n        />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\r\nmoment.locale(\"ru\");\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      currentWeek: moment().clone().startOf(\"week\"),\r\n\r\n      showSelect: false, // меняет состоянике стрелки в списке месяцев\r\n    //   isFirstLoadSelect: false,\r\n      isArrowShow: true, // убирает стрелку при достижении недели регистрации\r\n      isFirstWeekReg: false, // тоже для первой регистрации\r\n\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      \"CURRENT_MONTHS\",\r\n      \"USER_REGISTRATIONS\",\r\n      \"CURRENT_WEEK\",\r\n      \"FIRST_DAY\",\r\n    ]),\r\n  },\r\n  mounted() {\r\n    this.CHANGE_WEEK(moment());\r\n    this.GET_PRESENT_DAY();\r\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\r\n      \"GET_MONTHS\",\r\n      \"GET_PRESENT_DAY\",\r\n      \"CHANGE_WEEK\",\r\n      'GET_THIS_WEEK_TASKS', \r\n    ]),\r\n    ...mapMutations([\r\n      \"UPDATE_WEEK\",\r\n      \"UPDATE_FIRST_DAY_WEEK\",\r\n      \"UPDATE_SHOW_LOADER\"\r\n    ]),\r\n    // переключает неделю на предыдущую (стрелка)\r\n    async prevWeek(startDate) {\r\n        this.startLoading();\r\n        const previousWeek = this.currentWeek\r\n        ? this.currentWeek.clone().subtract(1, \"week\")\r\n        : moment().startOf(\"isoWeek\").subtract(1, \"week\");\r\n\r\n        const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\r\n        \"month\"\r\n        );\r\n\r\n        if (previousWeek.isBefore(startDateNormalized)) {\r\n        if (!this.isFirstWeekReg) {\r\n            this.currentWeek = previousWeek;\r\n            this.isArrowShow = false;\r\n        }\r\n        this.isFirstWeekReg = true;\r\n        } else {\r\n        this.currentWeek.subtract(1, \"week\");\r\n        }\r\n\r\n        this.UPDATE_WEEK(this.fillDays(this.currentWeek));\r\n        this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n        this.UPDATE_FIRST_DAY_WEEK(\r\n        `${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${\r\n            this.CURRENT_WEEK[0][3]\r\n        }`\r\n        );\r\n\r\n        await this.loading();\r\n    },\r\n\r\n    // переключает неделю на следующую (стрелка)\r\n    async nextWeek() {\r\n        this.startLoading();\r\n        this.isFirstWeekReg = false;\r\n        this.isArrowShow = true;\r\n        if (!this.currentWeek) {\r\n            // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\r\n            this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\r\n        } else {\r\n            // Иначе переключаемся на следующую неделю\r\n            this.currentWeek.add(1, \"week\");\r\n        }\r\n\r\n        this.UPDATE_WEEK(this.fillDays(this.currentWeek));\r\n        this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n        this.UPDATE_FIRST_DAY_WEEK(\r\n            `${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${\r\n            this.CURRENT_WEEK[0][3]\r\n            }`\r\n        );\r\n\r\n        await this.loading();\r\n    },\r\n\r\n    // заполнение днями недели текущей\r\n    fillDays(startDate) {\r\n        const daysArray = [];\r\n        for (let i = 0; i <= 6; i++) {\r\n            const day = moment(startDate)\r\n            .add(i, \"days\")\r\n            .format(\"ddd-DD-MMMM-YYYY-MM\");\r\n            daysArray.push(day.split(\"-\"));\r\n        }\r\n        return daysArray;\r\n    },\r\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    },\r\n    // изменяет выбранный месяц в списке (визуально)\r\n    async changeCurrentMonth(value) {\r\n        this.startLoading();\r\n        this.UPDATE_FIRST_DAY_WEEK(`${value[0]} ${value[1]}`);\r\n        const newDate = moment(`${value[0]}-${value[1]}`, \"MMMM-YYYY\").startOf(\r\n            \"month\"\r\n        );\r\n        this.CHANGE_WEEK(newDate);\r\n        this.showSelect = false;\r\n        this.currentWeek = newDate;\r\n\r\n        this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n        await this.loading();\r\n        // this.scrollToCurrentHour();\r\n    },\r\n    // возвращается к текущей неделе\r\n    async goToCurrentWeek() {\r\n        this.startLoading();\r\n        this.CHANGE_WEEK(moment());\r\n        this.currentWeek = moment().clone().startOf(\"week\");\r\n        this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n        await this.loading();\r\n\r\n    },\r\n\r\n        \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    // старт загрузки\r\n    startLoading() {\r\n        this.UPDATE_SHOW_LOADER()\r\n    },\r\n    // процесс загрузки\r\n    async loading() {\r\n        return new Promise((resolve) => {\r\n            // Здесь выполняются асинхронные действия, например, задержка в 1 секунду\r\n            setTimeout(() => {\r\n                this.startLoading()\r\n            resolve(); // Разрешить промис после выполнения\r\n            }, 1000);\r\n        });\r\n    },\r\n}\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.navigation {\r\n    margin-top: 24px;\r\n    margin-left: 70px;\r\n    max-width: 400px;\r\n    display: flex;\r\n    gap: 10px;\r\n    font-family: Raleway;\r\n\r\n}\r\n\r\n.select-month{\r\n    \r\n}\r\n.select-month_header{\r\n    display: flex;\r\n    /* align-items: center; */\r\n}\r\n\r\n.select-month_current{\r\n    font-size: 28px;\r\n    font-weight: 700;\r\n}\r\n\r\n.select-month_btn {\r\n    margin-left: 5px;\r\n    transition: 1s;\r\n    transform: rotate(180deg);\r\n}\r\n\r\n.select-month_btn-isActive {\r\n    transition: 1s;\r\n    margin-left: 5px;\r\n\r\n}\r\n\r\n.select-month_body-show {\r\n    background-color: white;\r\n    position: fixed;\r\n    display: flex;\r\n    gap: 10px;\r\n    flex-direction: column;\r\n    border-radius: 10px;\r\n    z-index: 1;\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    opacity: 0;\r\n    animation: show 2s forwards;\r\n\r\n}\r\n    @keyframes show {\r\n        0% {opacity: 0;}\r\n        100% {opacity: 1;}\r\n    }\r\n\r\n.select-month_body {\r\n\r\n    z-index: 1;\r\n    position: fixed;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 10px;\r\n    opacity: 0;\r\n    animation: ANTIshow 2s forwards;\r\n    background-color: white;    \r\n    gap: 10px;   \r\n\r\n    display: none;\r\n}\r\n    /* @keyframes ANTIshow {\r\n            0% {opacity: 1;}\r\n            100% {opacity: 0; display: none;}\r\n        } */\r\n\r\n.select-month_body-item {\r\n    font-size: 26px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    display: inline-block; \r\n    filter: blur(0);\r\n}\r\n\r\n.select-month_body-item:after {\r\n    display: block; /*превращаем его в блочный элемент*/\r\n    content: \"\"; /*контента в данном блоке не будет поэтому в кавычках ничего не ставим*/\r\n    height: 3px; /*задаём высоту линии*/\r\n    width: 0%; /*задаём начальную ширину элемента (линии)*/\r\n    background-color: #225384; /*цвет фона элемента*/\r\n    transition: width 0.4s ease-in-out; /*данное свойство отвечает за плавное изменение ширины. Здесь можно задать время анимации в секундах (в данном случае задано 0.4 секунды)*/\r\n}\r\n\r\n.select-month_body-item:hover {\r\n    color:#225384;\r\n}\r\n\r\n.select-month_body-item:hover::after, .select-month_body-item:focus::after  {\r\n    width: 100%;\r\n}\r\n\r\n\r\n.arrows{\r\n    /* background-color: #225384; */\r\n    display: flex;\r\n    cursor: pointer;\r\n    gap: 30px;\r\n    margin-left: 10px;;\r\n}\r\n\r\n.arrows-item-hidden{\r\n    visibility: hidden;\r\n}\r\n</style>"],"mappings":";OASgBA,UAAiD;OAsBrDC,UAAgD;OAMhDC,UAAiD;OAKjDC,UAA0C;;;EAzC7CC,KAAK,EAAC;AAAY;;EACdA,KAAK,EAAC;AAAc;;EAChBA,KAAK,EAAC;AAAqB;;EACvBA,KAAK,EAAC;AAAsB;;;EAwBpCA,KAAK,EAAC;AAAQ;;uBA3BvBC,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CFC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBFD,mBAAA,CASM,OATNE,UASM,GARFF,mBAAA,CAAuD,OAAvDG,UAAuD,EAAAC,gBAAA,CAAlBC,IAAA,CAAAC,SAAS,kBAC9CN,mBAAA,CAME;IALDO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,UAAU,IAAID,KAAA,CAAAC,UAAU;IAC/Bd,KAAK,EAAAe,eAAA,CAAEF,KAAA,CAAAC,UAAU;IAElBE,GAAiD,EAAjDpB,UAAiD;IACjDqB,GAAG,EAAC;6BAIRd,mBAAA,CAYM;IAXLH,KAAK,EAAAe,eAAA,CAAEF,KAAA,CAAAC,UAAU;yBAGdb,mBAAA,CAOMiB,SAAA,QAAAC,WAAA,CAJUX,IAAA,CAAAY,cAAc,EAAvBC,KAAK;yBAHZpB,mBAAA,CAOM;MANLS,OAAK,EAAAE,MAAA,IAAEU,QAAA,CAAAC,kBAAkB,CAACF,KAAK;MAChCrB,KAAK,EAAC,wBAAwB;MAE7BwB,GAAG,EAAEH;wBAEHA,KAAK,OAAM,GAAC,GAAAd,gBAAA,CAAGc,KAAK,2BAAAI,UAAA;qDAI/BtB,mBAAA,CAiBM,OAjBNuB,UAiBM,GAhBNvB,mBAAA,CAKE;IAJGO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEU,QAAA,CAAAK,QAAQ,MAAMC,kBAAkB;IACxCZ,GAAgD,EAAhDnB,UAAgD;IAChDoB,GAAG,EAAC,EAAE;IACLjB,KAAK,EAAAe,eAAA,CAAEF,KAAA,CAAAgB,WAAW;2BAEvB1B,mBAAA,CAIE;IAHGO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEU,QAAA,CAAAQ,QAAQ;IAChBd,GAAiD,EAAjDlB,UAAiD;IACjDmB,GAAG,EAAC;MAERd,mBAAA,CAIE;IAHGO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAoB,IAAA,KAAET,QAAA,CAAAU,eAAA,IAAAV,QAAA,CAAAU,eAAA,IAAAD,IAAA,CAAe;IACvBf,GAA0C,EAA1CjB,UAA0C;IAC1CkB,GAAG,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}