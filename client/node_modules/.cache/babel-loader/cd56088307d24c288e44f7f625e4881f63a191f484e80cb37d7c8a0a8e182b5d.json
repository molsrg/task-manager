{"ast":null,"code":"import axios from 'axios';\nexport default {\n  state() {\n    return {\n      registration: '23-07-2023',\n      tasklist: [{\n        title: 'Этот день',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: []\n      }, {\n        title: 'Эта неделя',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: []\n      }, {\n        title: 'Этот месяц',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: [{\n          name: 'Утренняя рутина',\n          id: 4,\n          time: '10:00 - 15:00',\n          type: 'EveryDay'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 5,\n          time: '19:00 - 22:00',\n          type: 'Working'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 6,\n          time: '21:00 - 23:30',\n          type: 'Common'\n        }]\n      }],\n      selectTask: []\n    };\n  },\n  getters: {\n    USER_REGISTRATIONS: state => {\n      return state.registration;\n    },\n    USER_TASKLISTS: state => {\n      return state.tasklist;\n    },\n    USER_SELECT_TASKS: state => {\n      return state.selectTask;\n    }\n  },\n  mutations: {\n    UPDATE_VISIBLE_TASKLIST: (state, idx) => {\n      state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle;\n      state.tasklist[idx].isTasklistVisible = !state.tasklist[idx].isTasklistVisible;\n    },\n    UPDATE_SELECT_TASKS: (state, response) => {\n      state.selectTask = response;\n    },\n    UPDATE_THIS_WEEK_TASKS: (state, response) => {\n      state.tasklist[1].tasks = response;\n    },\n    UPDATE_THIS_WEEK_TASKS: (state, response) => {\n      state.tasklist[1].tasks = response;\n    }\n  },\n  actions: {\n    GET_THIS_WEEK_TASKS({\n      commit\n    }, week) {\n      const startTime = `${week[0][3]}-${week[0][4]}-${week[0][1]}`;\n      const endTime = `${week[6][3]}-${week[6][4]}-${week[6][1]}`;\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/task/get',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        params: {\n          startTime: `${startTime}T00:00:00Z`,\n          endTime: `${endTime}T00:00:00Z`\n        }\n      }).then(response => {\n        commit('UPDATE_THIS_WEEK_TASKS', response);\n      }).catch(() => {\n        alert(\"Запрос на эту неделю не удался\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","state","registration","tasklist","title","toggleCircle","isTasklistVisible","tasks","name","id","time","type","selectTask","getters","USER_REGISTRATIONS","USER_TASKLISTS","USER_SELECT_TASKS","mutations","UPDATE_VISIBLE_TASKLIST","idx","UPDATE_SELECT_TASKS","response","UPDATE_THIS_WEEK_TASKS","actions","GET_THIS_WEEK_TASKS","commit","week","startTime","endTime","method","url","headers","localStorage","getItem","params","then","catch","alert"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/User.js"],"sourcesContent":["import axios from 'axios'\r\nexport default {\r\n\r\n    state() {\r\n        return {\r\n            registration: '23-07-2023',\r\n            tasklist: [\r\n                {\r\n                    title: 'Этот день',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [],\r\n                }, \r\n                {\r\n                    title: 'Эта неделя',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [],\r\n                }, \r\n                {\r\n                    title: 'Этот месяц',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [\r\n                        {name: 'Утренняя рутина', id: 4, time: '10:00 - 15:00', type: 'EveryDay'},\r\n                        {name: 'Вечерняя закалка', id: 5, time: '19:00 - 22:00', type: 'Working'},\r\n                        {name: 'Вечерняя закалка', id: 6, time: '21:00 - 23:30', type: 'Common'},\r\n                    ],\r\n                }, \r\n            ], \r\n            selectTask: []\r\n        }\r\n        \r\n    }, \r\n    getters: {\r\n        \r\n        USER_REGISTRATIONS: state => {\r\n            return state.registration\r\n        },\r\n        USER_TASKLISTS: state => {\r\n            return state.tasklist\r\n        }, \r\n        USER_SELECT_TASKS: state => {\r\n            return state.selectTask\r\n        }\r\n    }, \r\n    mutations: {\r\n        UPDATE_VISIBLE_TASKLIST: (state, idx) => {\r\n            state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle\r\n            state.tasklist[idx].isTasklistVisible = !state.tasklist[idx].isTasklistVisible\r\n        }, \r\n        UPDATE_SELECT_TASKS: (state, response) => {\r\n            state.selectTask = response\r\n        }, \r\n        UPDATE_THIS_WEEK_TASKS: (state, response) => {\r\n            state.tasklist[1].tasks = response\r\n        }, \r\n        UPDATE_THIS_WEEK_TASKS: (state, response) => {\r\n            state.tasklist[1].tasks = response\r\n        }, \r\n    }, \r\n    actions: {\r\n        GET_THIS_WEEK_TASKS({commit}, week) {\r\n            \r\n            const startTime = `${week[0][3]}-${week[0][4]}-${week[0][1]}`\r\n            const endTime = `${week[6][3]}-${week[6][4]}-${week[6][1]}`\r\n\r\n            axios({\r\n                method: 'GET', \r\n                url: 'http://localhost:5000/task/get',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                params: {\r\n                    startTime: `${startTime}T00:00:00Z`, \r\n                    endTime: `${endTime}T00:00:00Z`, \r\n                }\r\n            })\r\n            .then((response) => {\r\n                commit('UPDATE_THIS_WEEK_TASKS', response)\r\n            })\r\n            .catch(() => {\r\n                alert(\"Запрос на эту неделю не удался\")\r\n            })   \r\n        },\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}