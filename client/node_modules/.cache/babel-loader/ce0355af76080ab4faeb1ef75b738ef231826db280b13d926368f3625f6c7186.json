{"ast":null,"code":"import axios from 'axios';\nimport { mapActions, mapMutations } from \"vuex\";\nexport default {\n  data() {\n    return {\n      taskListTitle: '',\n      taskListStartTime: '',\n      taskListEndTime: ''\n    };\n  },\n  methods: {\n    ...mapActions(['ADD_TASK']),\n    ...mapMutations(['UPDATE_IS_ADDED_TASK']),\n    addTaskList(event) {\n      event.preventDefault();\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/task/createTaskList',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        data: {\n          title: this.taskListTitle,\n          toggleCircle: false,\n          isTasklistVisible: false,\n          startTime: this.taskListStartTime,\n          endTime: \"taskListEndTime\"\n        }\n      }).then(() => {\n        this.dispatch('GET_TASKLIST');\n      }).catch(err => {\n        console.log(err);\n        alert(\"Создание списка не удалось\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","mapActions","mapMutations","data","taskListTitle","taskListStartTime","taskListEndTime","methods","addTaskList","event","preventDefault","method","url","headers","localStorage","getItem","title","toggleCircle","isTasklistVisible","startTime","endTime","then","dispatch","catch","err","console","log","alert"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AddTaskList.vue"],"sourcesContent":["<template>\r\n    <form action=\"\" type=\"post\" @submit=\"addTaskList\">\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"Название задачи\"\r\n        required\r\n        v-model=\"taskListTitle\"\r\n        />\r\n\r\n        <label for=\"start-time\">Выберите время и дату начала отслеживания нового списка</label>\r\n        <input\r\n        id=\"start-time\"\r\n        type=\"datetime-local\"\r\n        placeholder=\"Начало задачи\"\r\n        required\r\n        v-model=\"taskListStartTime\"\r\n        />\r\n        <label for=\"end-time\">Выберите время и дату окончания отслеживания нового списка</label>\r\n        <input\r\n        type=\"datetime-local\"\r\n        id=\"end-time\"\r\n        placeholder=\"Окончание задачи\"\r\n        required\r\n        v-model=\"taskListEndTime\"\r\n        />\r\n\r\n        <button type=\"submit\">Добавить задачу</button>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { mapActions, mapMutations } from \"vuex\";\r\nexport default {\r\n    data(){\r\n        return {\r\n            taskListTitle: '',\r\n            taskListStartTime: '',\r\n            taskListEndTime: ''\r\n        }\r\n    }, \r\n    methods: {\r\n        ...mapActions(['ADD_TASK']), \r\n        ...mapMutations(['UPDATE_IS_ADDED_TASK']),\r\n        addTaskList(event) {\r\n            event.preventDefault();\r\n            axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/task/createTaskList',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                data: {\r\n                    title: this.taskListTitle,\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    startTime: this.taskListStartTime,\r\n                    endTime: \"taskListEndTime\",\r\n                },\r\n            })\r\n            .then(() => {\r\n                this.dispatch('GET_TASKLIST')\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(\"Создание списка не удалось\")\r\n            }) \r\n\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для модального окна */\r\n.modal {\r\n  position: fixed;\r\n  top: 25%;\r\n  left: 25%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5); /* Затемненный фон */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000; /* Выше других элементов на странице */\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  width: 400px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* Стили для формы и её элементов */\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"datetime-local\"] {\r\n  margin: 5px 0;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  font-size: 16px;\r\n}\r\n\r\ninput[type=\"radio\"] {\r\n  margin-right: 5px;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Стили для радиокнопок */\r\ninput[type=\"radio\"] + label {\r\n    font-weight: normal;\r\n    cursor: pointer;\r\n}\r\n\r\n/* Стили для кнопок и других элементов формы (если есть) */\r\nbutton {\r\n  margin-top: 10px;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 3px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"AA+BA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,UAAU,EAAEC,YAAW,QAAS,MAAM;AAC/C,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,aAAa,EAAE,EAAE;MACjBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE;IACrB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,GAAGN,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3B,GAAGC,YAAY,CAAC,CAAC,sBAAsB,CAAC,CAAC;IACzCM,WAAWA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBV,KAAK,CAAC;QACFW,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,2CAA2C;QAChDC,OAAO,EAAE;UAAC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QAAC,CAAC;QAC3EZ,IAAI,EAAE;UACFa,KAAK,EAAE,IAAI,CAACZ,aAAa;UACzBa,YAAY,EAAE,KAAK;UACnBC,iBAAiB,EAAE,KAAK;UACxBC,SAAS,EAAE,IAAI,CAACd,iBAAiB;UACjCe,OAAO,EAAE;QACb;MACJ,CAAC,EACAC,IAAI,CAAC,MAAM;QACR,IAAI,CAACC,QAAQ,CAAC,cAAc;MAEhC,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG;QACfG,KAAK,CAAC,4BAA4B;MACtC,CAAC;IAEL;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}