{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nimport _imports_0 from '../assets/images/auth/logo.svg';\nimport _imports_1 from '../assets/images/auth/google.svg';\nimport _imports_2 from '../assets/images/auth/github.svg';\nimport _imports_3 from '../assets/images/auth/facebook.svg';\nconst _hoisted_1 = {\n  class: \"section\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"section__item\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"section__logo\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"logo\",\n  src: _imports_0,\n  alt: \"logo\"\n}), /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"section__text logo__text\"\n}, \"Task Unity Tech\")])], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"section__item\"\n};\nconst _hoisted_4 = {\n  class: \"section__auth\"\n};\nconst _hoisted_5 = {\n  class: \"section__title\"\n};\nconst _hoisted_6 = {\n  class: \"section__item\"\n};\nconst _hoisted_7 = {\n  action: \"\",\n  method: \"post\"\n};\nconst _hoisted_8 = {\n  class: \"section__alert-forget\"\n};\nconst _hoisted_9 = {\n  id: \"blink1\",\n  class: \"section__alert\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"section__forget\",\n  href: \"#\"\n};\nconst _hoisted_11 = {\n  class: \"section__item\"\n};\nconst _hoisted_12 = {\n  type: \"submit\",\n  class: \"section__button\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"section__text-or\\\"><span>или</span></div><div class=\\\"section__bt-container\\\"><!-- с регистарцией на гугле пока что проблемы --><a href=\\\"https://accounts.google.com/o/oauth2/auth?client_id=29829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1А&amp;redirect_uri=http://localhost:8080/code&amp;response_type=code&amp;scope=https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile&amp;state=123\\\"><img src=\\\"\" + _imports_1 + \"\\\"></a><!-- с регистрацией на гитхаб все ок, я создал компонент куда перенаправляется после запроса, лежит в этой же папке --><a href=\\\"https://github.com/login/oauth/authorize?client_id=11408a517eebc5ff6eb3&amp;redirect_uri=http://localhost:8080/code\\\"><img src=\\\"\" + _imports_2 + \"\\\"></a><!-- здесь я сделал регистрацию при помощи Яндекс ID, нужно будет только иконку заменить, результат возвращается как и в гите --><a href=\\\"https://oauth.yandex.ru/authorize?client_id=a346729c2c2e4bd482fcb0cb3ddcd9e8&amp;redirect_uri=http://localhost:8080/code&amp;response_type=code\\\"><img src=\\\"\" + _imports_3 + \"\\\"></a></div>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h3\", _hoisted_5, _toDisplayString($data.title), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.AuthOrReg && $options.AuthOrReg(...args)),\n    class: \"section__subtitle\"\n  }, _toDisplayString($data.subtitle), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"form\", _hoisted_7, [_createVNode(_Transition, {\n    name: \"input\"\n  }, {\n    default: _withCtx(() => [this.title == 'Регистрация' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      class: \"section__input\",\n      type: \"text\",\n      placeholder: \"Имя пользователя\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.login = $event)\n    }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.login]]) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _withDirectives(_createElementVNode(\"input\", {\n    class: \"section__input\",\n    type: \"email\",\n    placeholder: \"E-mail\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.mail = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.mail]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"section__input\",\n    type: \"password\",\n    placeholder: \"Пароль\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _createVNode(_Transition, {\n    name: \"input\"\n  }, {\n    default: _withCtx(() => [this.title == 'Регистрация' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n      key: 0,\n      class: \"section__input\",\n      type: \"password\",\n      placeholder: \"Подтверждение пароля\",\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.confirm_password = $event)\n    }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.confirm_password]]) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(this?.errors[0]), 1 /* TEXT */), this.title == 'Вход' ? (_openBlock(), _createElementBlock(\"a\", _hoisted_10, \"Забыли пароль?\")) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"form\", {\n    action: \"\",\n    method: \"post\",\n    onSubmit: _cache[9] || (_cache[9] = (...args) => $options.authUser && $options.authUser(...args))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"section__input\",\n    type: \"text\",\n    placeholder: \"Имя пользователя\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.login = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.login]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"section__input\",\n    type: \"email\",\n    placeholder: \"E-mail\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.mail = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.mail]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"section__input\",\n    type: \"password\",\n    placeholder: \"Пароль\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.password = $event),\n    required: \"\",\n    minlength: \"8\",\n    maxlength: \"128\",\n    pattern: \"[0-9A-Za-z]+\",\n    title: \"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"section__input\",\n    type: \"password\",\n    placeholder: \"Подтверждение пароля\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.confirm_password = $event),\n    required: \"\",\n    minlength: \"8\",\n    maxlength: \"128\",\n    pattern: \"[0-9A-Za-z]+\",\n    title: \"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirm_password]]), _createElementVNode(\"button\", _hoisted_12, _toDisplayString($data.auth), 1 /* TEXT */), _hoisted_13], 32 /* HYDRATE_EVENTS */)])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","class","_createElementVNode","src","alt","action","method","id","href","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","$data","title","onClick","_cache","args","$options","AuthOrReg","subtitle","_hoisted_6","_hoisted_7","_createVNode","_Transition","name","placeholder","login","$event","mail","password","confirm_password","_hoisted_8","_hoisted_9","errors","_hoisted_10","_hoisted_11","onSubmit","authUser","required","minlength","maxlength","pattern","_hoisted_12","auth","_hoisted_13"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AuthorizationClient.vue"],"sourcesContent":["<template>\r\n  <div class=\"section\">\r\n    <div class=\"section__item\">\r\n      <div class=\"section__logo\">\r\n        <img class=\"logo\" src=\"../assets/images/auth/logo.svg\" alt=\"logo\">\r\n        <h3 class=\"section__text logo__text\">Task Unity Tech</h3>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"section__item\">\r\n      <div class=\"section__auth\">\r\n        <h3 class=\"section__title\">{{ title }}</h3>\r\n        <button @click=\"AuthOrReg\" class=\"section__subtitle\">{{ subtitle }}</button>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n    <div class=\"section__item\">\r\n      <form action=\"\" method=\"post\">\r\n\r\n        <transition name=\"input\">\r\n          <input v-if=\"this.title == 'Регистрация' \" class=\"section__input\" type=\"text\" placeholder=\"Имя пользователя\"  v-model=\"login\">\r\n        </transition>  \r\n      \r\n        <input class=\"section__input\" type=\"email\" placeholder=\"E-mail\" v-model=\"mail\" >\r\n        <input class=\"section__input\" type=\"password\" placeholder=\"Пароль\" v-model=\"password\" >\r\n\r\n        <transition name=\"input\">\r\n          <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"password\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\" >\r\n        </transition> \r\n\r\n        <div class=\"section__alert-forget\">\r\n          <span id=\"blink1\" class=\"section__alert\">{{this?.errors[0]}} </span>\r\n        <a v-if=\"this.title == 'Вход'\" class=\"section__forget\" href=\"#\">Забыли пароль?</a>\r\n        </div>  \r\n      </form>\r\n    </div>\r\n\r\n\r\n    <div class=\"section__item\">\r\n      <form action=\"\" method=\"post\" @submit=\"authUser\">\r\n\r\n          <input class=\"section__input\" type=\"text\" placeholder=\"Имя пользователя\" required v-model=\"login\">\r\n          <input class=\"section__input\" type=\"email\" placeholder=\"E-mail\" v-model=\"mail\" required>\r\n          <input class=\"section__input\" type=\"password\" placeholder=\"Пароль\" v-model=\"password\" required minlength=\"8\" maxlength=\"128\" pattern=\"[0-9A-Za-z]+\" title=\"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\">\r\n          <input class=\"section__input\" type=\"password\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\" required minlength=\"8\" maxlength=\"128\" pattern=\"[0-9A-Za-z]+\" title=\"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\">\r\n\r\n          <button type=\"submit\" class=\"section__button\">{{ auth }}</button>\r\n          <div class=\"section__text-or\">\r\n            <span>или</span>\r\n          </div>\r\n\r\n          <div class=\"section__bt-container\">\r\n            <!-- с регистарцией на гугле пока что проблемы -->\r\n            <a href=\"https://accounts.google.com/o/oauth2/auth?client_id=29829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1А&redirect_uri=http://localhost:8080/code&response_type=code&scope=https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile&state=123\"><img src=\"../assets/images/auth/google.svg\"></a>\r\n\r\n            <!-- с регистрацией на гитхаб все ок, я создал компонент куда перенаправляется после запроса, лежит в этой же папке -->\r\n            <a href=\"https://github.com/login/oauth/authorize?client_id=11408a517eebc5ff6eb3&redirect_uri=http://localhost:8080/code\"> <img src=\"../assets/images/auth/github.svg\"></a>\r\n\r\n            <!-- здесь я сделал регистрацию при помощи Яндекс ID, нужно будет только иконку заменить, результат возвращается как и в гите -->\r\n            <a href=\"https://oauth.yandex.ru/authorize?client_id=a346729c2c2e4bd482fcb0cb3ddcd9e8&redirect_uri=http://localhost:8080/code&response_type=code\"> <img src=\"../assets/images/auth/facebook.svg\"></a>\r\n          </div>\r\n      </form>\r\n    </div>\r\n    \r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data(){\r\n    return { \r\n      login: '', \r\n      mail: '', \r\n      password: '', \r\n      confirm_password: '', \r\n\r\n\r\n      title: 'Регистрация', \r\n      subtitle: 'Вход', \r\n      auth: 'Зарегистрироваться',\r\n      errors: [],\r\n\r\n\r\n      \r\n      // Тимур это токены приложений, на них можно пока что забить хуй  \r\n      // const google_token = \"429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1\"\r\n      // const gitHub_token = \"11408a517eebc5ff6eb3\"\r\n\r\n    }\r\n  }, \r\n\r\n  methods: {\r\n\r\n    authUser() {\r\n      // event.preventDefault(); \r\n      // if(this.password !== this.confirm_password){\r\n      //   this.errors.push(\"Пароли не совпадают\")\r\n      //   return \r\n      // }\r\n\r\n      let data = {}\r\n      let type = ''\r\n      if(this.auth == 'Зарегистрироваться'){\r\n        data = {\r\n        username: this.login,\r\n        email: this.mail,\r\n        password: this.password,\r\n          } \r\n        \r\n        type = 'registration'\r\n      }\r\n      else if (this.auth == 'Войти') {\r\n        data = {\r\n          email: this.mail,\r\n          password: this.password,\r\n        }\r\n\r\n        type = 'login'\r\n      }\r\n\r\n      console.log(this.$refs.form.checkValidity())\r\n      axios.post(`http://localhost:5000/auth/${type}`, data)\r\n        .then((response) => {\r\n            this.login = ''\r\n            this.mail = '', \r\n            this.password = '', \r\n            this.confirm_password = ''\r\n\r\n            \r\n            console.log(response)\r\n        })\r\n\r\n        .catch((error) => {\r\n          this.errors = error.response.data?.errors\r\n          \r\n          // this.errors = error.response.data?.message\r\n          console.log(error)\r\n          console.log(this.errors)\r\n        })   \r\n    },     \r\n\r\n    AuthOrReg(){\r\n\r\n      this.errors = []\r\n      this.login = ''\r\n      this.mail = '', \r\n      this.password = '', \r\n      this.confirm_password = ''\r\n\r\n      if(this.subtitle == \"Вход\"){\r\n        this.title = \"Вход\"\r\n        this.subtitle = \"Регистрация\"\r\n        this.auth = \"Войти\"\r\n\r\n      }\r\n\r\n      else if(this.subtitle == \"Регистрация\"){\r\n        this.title = \"Регистрация\"\r\n        this.subtitle = \"Вход\"\r\n        this.auth = \"Зарегистрироваться\"\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n\r\n/* .input-enter-active, .input-leave-active {\r\n  transition: opacity 500ms;\r\n}\r\n\r\n.input-enter, .input-leave-to {\r\n  opacity: 0;\r\n} */\r\n\r\n\r\n\r\n/* .section__subtitle:active  .section__input{\r\n\r\n}\r\n */\r\n\r\n/* \r\n\r\n.section__auth:target  .section__title\r\n {     transform: translate(80px,0);\r\n\r\n\r\n }  \r\n\r\n .section__auth:active .section__subtitle {\r\n    transform: translate(-250px,0);\r\n}  \r\n */\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}