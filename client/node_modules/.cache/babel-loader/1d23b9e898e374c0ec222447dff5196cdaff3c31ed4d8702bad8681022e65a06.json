{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, normalizeStyle as _normalizeStyle, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nimport _imports_0 from '../../assets/images/auth/logo.svg';\nimport _imports_1 from '../../assets/images/home/line__horizont.svg';\nimport _imports_2 from '../../assets/images/home/zaxar.png';\nimport _imports_3 from '../../assets/images/home/addpeople.svg';\nconst _hoisted_1 = {\n  class: \"leftnavbar\"\n};\nconst _hoisted_2 = {\n  class: \"people-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"logo__img people-container__logo\",\n  src: _imports_0,\n  alt: \"logo\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"people-container__user-container user-container\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createStaticVNode(\"<h3 class=\\\"user-container__user-count\\\">3</h3><img src=\\\"\" + _imports_1 + \"\\\" alt=\\\"\\\"><img src=\\\"\" + _imports_2 + \"\\\" alt=\\\"\\\" class=\\\"user-container__user\\\"><img src=\\\"\" + _imports_2 + \"\\\" alt=\\\"\\\" class=\\\"user-container__user\\\"><img src=\\\"\" + _imports_2 + \"\\\" alt=\\\"\\\" class=\\\"user-container__user\\\">\", 5);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_3,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_11 = [_hoisted_10];\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"task-container\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"logo__text task-container__logo-text\"\n}, \"Task Unity Tech\", -1 /* HOISTED */);\nconst _hoisted_15 = {\n  class: \"tasklist__title\"\n};\nconst _hoisted_16 = {\n  class: \"tasklist__text\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = {\n  key: 0,\n  class: \"circle\"\n};\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"horizontal\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"vertical\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_21 = [_hoisted_19, _hoisted_20];\nconst _hoisted_22 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"button\", {\n    class: \"user-container__add-user\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.addPeople())\n  }, _hoisted_11)]), _hoisted_12]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.USER_TASKLISTS, (tasklist, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"task-container__tasklist tasklist\"\n    }, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"h4\", _hoisted_16, _toDisplayString(tasklist.title), 1 /* TEXT */), _createElementVNode(\"div\", {\n      class: _normalizeClass(tasklist.toggleCircle ? 'circle-plus opened' : 'circle-plus closed'),\n      onClick: $event => $options.changeToggle(index)\n    }, [tasklist.tasks.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _hoisted_21)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_17)]), _createElementVNode(\"div\", {\n      class: _normalizeClass([{\n        visible: tasklist.isTasklistVisible && tasklist.tasks.length > 0\n      }, \"tasklist__tasks\"])\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(tasklist.tasks, task => {\n      return _openBlock(), _createElementBlock(\"label\", {\n        key: task.id,\n        class: \"tasklist__label\"\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        class: \"real-checkbox\",\n        value: task,\n        type: \"checkbox\",\n        onChange: _cache[1] || (_cache[1] = $event => $options.selectTasks()),\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.checkedTasks = $event)\n      }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_22), [[_vModelCheckbox, $data.checkedTasks]]), _createElementVNode(\"span\", {\n        class: \"custom-checkbox\",\n        style: _normalizeStyle($options.tasklistLabel(task))\n      }, null, 4 /* STYLE */), _createTextVNode(\" \" + _toDisplayString(task.name), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    class: \"task-container__tasklist tasklist\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.addedTask && $options.addedTask(...args))\n  }, \" Добавить задачу (заглушка) \"), _createTextVNode(\" \" + _toDisplayString($data.checkedTasks), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","class","_createElementVNode","src","alt","_hoisted_10","_hoisted_19","_hoisted_20","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","onClick","_cache","$event","$options","addPeople","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","_renderList","_ctx","USER_TASKLISTS","tasklist","index","key","_hoisted_15","_hoisted_16","_toDisplayString","title","_normalizeClass","toggleCircle","changeToggle","tasks","length","_hoisted_18","_hoisted_21","isTasklistVisible","task","id","value","type","onChange","selectTasks","$data","checkedTasks","style","_normalizeStyle","tasklistLabel","name","args","addedTask"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\LeftNavbar.vue"],"sourcesContent":["<template>\r\n  <div class=\"leftnavbar\">\r\n    <div class=\"people-container\">\r\n      <img\r\n        class=\"logo__img people-container__logo\"\r\n        src=\"../../assets/images/auth/logo.svg\"\r\n        alt=\"logo\"\r\n      />\r\n\r\n      <div class=\"people-container__user-container user-container\">\r\n        <h3 class=\"user-container__user-count\">3</h3>\r\n        <img src=\"../../assets/images/home/line__horizont.svg\" alt=\"\" />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <button class=\"user-container__add-user\" @click=\"addPeople()\">\r\n          <img src=\"../../assets/images/home/addpeople.svg\" alt=\"\" />\r\n        </button>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n\r\n    <div class=\"task-container\">\r\n      <h3 class=\"logo__text task-container__logo-text\">Task Unity Tech</h3>\r\n      <div\r\n        v-for=\"(tasklist, index) in USER_TASKLISTS\"\r\n        :key=\"index\"\r\n        class=\"task-container__tasklist tasklist\"\r\n      >\r\n        <div class=\"tasklist__title\">\r\n          <h4 class=\"tasklist__text\">{{ tasklist.title }}</h4>\r\n          <div\r\n            :class=\"\r\n              tasklist.toggleCircle\r\n                ? 'circle-plus opened'\r\n                : 'circle-plus closed'\r\n            \"\r\n            @click=\"changeToggle(index)\"\r\n          >\r\n            <div class=\"circle\" v-if=\"tasklist.tasks.length > 0\">\r\n              <div class=\"horizontal\"></div>\r\n              <div class=\"vertical\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          :class=\"{\r\n            visible: tasklist.isTasklistVisible && tasklist.tasks.length > 0,\r\n          }\"\r\n          class=\"tasklist__tasks\"\r\n        >\r\n          <label\r\n            v-for=\"task in tasklist.tasks\"\r\n            :key=\"task.id\"\r\n            class=\"tasklist__label\"\r\n          >\r\n            <input\r\n              class=\"real-checkbox\"\r\n              :value=\"task\"\r\n              type=\"checkbox\"\r\n              @change=\"selectTasks()\"\r\n              v-model=\"checkedTasks\"\r\n            />\r\n            <span class=\"custom-checkbox\" :style=\"tasklistLabel(task)\"></span>\r\n            {{ task.name }}\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <button class=\"task-container__tasklist tasklist\" @click=\"addedTask\">\r\n        Добавить задачу (заглушка)\r\n      </button>\r\n      {{ checkedTasks }}\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { mapGetters, mapMutations, mapActions } from \"vuex\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport Task from \"./../Task/Task\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkedTasks: [],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"USER_TASKLISTS\", 'CURRENT_WEEK', 'PRESENT_DAY']),\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"UPDATE_VISIBLE_TASKLIST\", \"UPDATE_SELECT_TASKS\"]),\r\n    ...mapActions(['GET_THIS_WEEK_TASKS','GET_THIS_DAY_TASKS']), \r\n    changeToggle(index) {\r\n      this.UPDATE_VISIBLE_TASKLIST(index);\r\n    },\r\n    selectTasks() {\r\n      this.UPDATE_SELECT_TASKS(this.checkedTasks);\r\n    },\r\n    tasklistLabel() {\r\n      // const colorTask = Task.calculateTaskColor(task)\r\n      // return {\r\n      //   background: colorTask,\r\n      //   border: `1px solid ${colorTask}`\r\n      // }\r\n    },\r\n\r\n    addedTask() {\r\n      axios({\r\n        method: \"POST\",\r\n        url: \"http://localhost:5000/task/create\",\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`,\r\n        },\r\n        data: {\r\n          name: \"Kus kus Racing 33сxxxссууу\",\r\n          type: \"Personal\",\r\n          text: \"XERX2313сс1xxxццц\",\r\n          status: \"Done\",\r\n          startTime: \"2023-09-30T15:00:00Z\",\r\n          endTime: \"2023-09-30T16:00:00Z\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          console.log(response);\r\n          this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK)\r\n          this.GET_THIS_DAY_TASKS(this.PRESENT_DAY)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(\"Создание задачи не удалось\");\r\n        });\r\n    },\r\n\r\n    // заготовка под добавление людей\r\n    addPeople() {},\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}