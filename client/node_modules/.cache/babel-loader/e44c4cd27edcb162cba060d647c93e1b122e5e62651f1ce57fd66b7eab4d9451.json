{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../../assets/images/main/select__btn.svg';\nimport _imports_1 from '../../assets/images/main/left-arrow.svg';\nimport _imports_2 from '../../assets/images/main/right-arrow.svg';\nconst _hoisted_1 = {\n  class: \"select__arrow\"\n};\nconst _hoisted_2 = {\n  class: \"select\"\n};\nconst _hoisted_3 = {\n  class: \"select__header\"\n};\nconst _hoisted_4 = {\n  class: \"select__current\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"arrows\"\n};\nconst _hoisted_7 = {\n  class: \"calendar\"\n};\nconst _hoisted_8 = {\n  class: \"week\"\n};\nconst _hoisted_9 = {\n  class: \"day__number\"\n};\nconst _hoisted_10 = {\n  class: \"day__text\"\n};\nconst _hoisted_11 = {\n  class: \"day__text\"\n};\nconst _hoisted_12 = {\n  class: \"day__text\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"day__line\"\n}, \"―\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" <div class=\\\"select\\\">\\r\\n      <div class=\\\"select__header\\\">\\r\\n        <div class=\\\"select__current\\\">{{ currentMonth }}</div>\\r\\n        <img\\r\\n          @click=\\\"showSelect = !showSelect\\\"\\r\\n          :class=\\\"showSelect ? 'select__btn' : 'select__btn-isActive'\\\"\\r\\n          src=\\\"../../assets/images/main/select__btn.svg\\\"\\r\\n          alt=\\\"\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div :class=\\\"showSelect ? 'select__body-show' : 'select__body'\\\">\\r\\n        <div\\r\\n          @click=\\\"changeCurrentMonth(month)\\\"\\r\\n          class=\\\"select__item\\\"\\r\\n          v-for=\\\"month in months\\\"\\r\\n          :key=\\\"month\\\"\\r\\n        >\\r\\n          {{ month[0] }} {{ month[1] }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div> \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($data.firstDay), 1 /* TEXT */), _createElementVNode(\"img\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.showSelect = !$data.showSelect),\n    class: _normalizeClass($data.showSelect ? 'select__btn' : 'select__btn-isActive'),\n    src: _imports_0,\n    alt: \"\"\n  }, null, 2 /* CLASS */)]), _createElementVNode(\"div\", {\n    class: _normalizeClass($data.showSelect ? 'select__body-show' : 'select__body')\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.months, month => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      onClick: $event => $data.firstDay == month,\n      class: \"select__item\",\n      key: month\n    }, _toDisplayString(month[0]) + \" \" + _toDisplayString(month[1]), 9 /* TEXT, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.prevWeek(this.registrationMonth)),\n    src: _imports_1,\n    alt: \"\",\n    class: _normalizeClass($data.isArrowShow ? 'arrows__item' : 'arrows__item-hidden')\n  }, null, 2 /* CLASS */), _createElementVNode(\"img\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.nextWeek()),\n    src: _imports_2,\n    alt: \"\",\n    class: \"arrows__item\"\n  })])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.days, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass(day[1] == $data.presentDay[0] && day[2] == $data.presentDay[1] ? 'present-day' : 'day'),\n      key: day\n    }, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(day[1]), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(day[0]), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, _toDisplayString(day[2]), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, _toDisplayString(day[3]), 1 /* TEXT */), _hoisted_13], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" <div class=\\\"wrapper\\\" v-if=\\\"showLoader\\\">\\r\\n      <span class=\\\"loader\\\"></span>\\r\\n    </div>\\r\\n    <div class=\\\"taskboard\\\" v-else>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n      <div class=\\\"task\\\">\\r\\n        <h5 class=\\\"task__name\\\">Утренняя рутина</h5>\\r\\n        <span class=\\\"task__time\\\">7:00 - 8:00</span>\\r\\n      </div>\\r\\n    </div> \")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","class","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","$data","firstDay","onClick","_cache","$event","showSelect","_normalizeClass","src","alt","_createElementBlock","_Fragment","_renderList","months","month","key","_hoisted_5","_hoisted_6","$options","prevWeek","registrationMonth","isArrowShow","nextWeek","_hoisted_7","_hoisted_8","days","day","presentDay","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Auth\\AuthorizationFromService.vue"],"sourcesContent":["<template>\r\n  <div class=\"select__arrow\">\r\n    <!-- <div class=\"select\">\r\n      <div class=\"select__header\">\r\n        <div class=\"select__current\">{{ currentMonth }}</div>\r\n        <img\r\n          @click=\"showSelect = !showSelect\"\r\n          :class=\"showSelect ? 'select__btn' : 'select__btn-isActive'\"\r\n          src=\"../../assets/images/main/select__btn.svg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div :class=\"showSelect ? 'select__body-show' : 'select__body'\">\r\n        <div\r\n          @click=\"changeCurrentMonth(month)\"\r\n          class=\"select__item\"\r\n          v-for=\"month in months\"\r\n          :key=\"month\"\r\n        >\r\n          {{ month[0] }} {{ month[1] }}\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n    <div class=\"select\">\r\n      <div class=\"select__header\">\r\n        <div class=\"select__current\">{{ firstDay }} </div>\r\n        <img\r\n          @click=\"showSelect = !showSelect\"\r\n          :class=\"showSelect ? 'select__btn' : 'select__btn-isActive'\"\r\n          src=\"../../assets/images/main/select__btn.svg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div :class=\"showSelect ? 'select__body-show' : 'select__body'\">\r\n        <div\r\n          @click=\"firstDay ==  month\"\r\n          class=\"select__item\"\r\n          v-for=\"month in months\"\r\n          :key=\"month\"\r\n        >\r\n          {{ month[0] }} {{ month[1] }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"arrows\">\r\n      <img\r\n        @click=\"prevWeek(this.registrationMonth)\"\r\n        src=\"../../assets/images/main/left-arrow.svg\"\r\n        alt=\"\"\r\n        :class=\"isArrowShow ? 'arrows__item' : 'arrows__item-hidden'\"\r\n      />\r\n      <img\r\n        @click=\"nextWeek()\"\r\n        src=\"../../assets/images/main/right-arrow.svg\"\r\n        alt=\"\"\r\n        class=\"arrows__item\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"calendar\">\r\n    <div class=\"week\">\r\n      <div\r\n        :class=\"\r\n          day[1] == presentDay[0] && day[2] == presentDay[1]\r\n            ? 'present-day'\r\n            : 'day'\r\n        \"\r\n        v-for=\"day in days\"\r\n        :key=\"day\"\r\n      >\r\n        <div class=\"day__number\">{{ day[1] }}</div>\r\n        <div class=\"day__text\">{{ day[0] }}</div>\r\n        <div class=\"day__text\">{{ day[2] }}</div>\r\n        <div class=\"day__text\">{{ day[3] }}</div>\r\n        <div class=\"day__line\">―</div>\r\n      </div>\r\n    </div>\r\n    <!-- <div class=\"wrapper\" v-if=\"showLoader\">\r\n      <span class=\"loader\"></span>\r\n    </div>\r\n    <div class=\"taskboard\" v-else>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n    </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nmoment.locale(\"ru\");\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentDate: null,\r\n      presentDay: \"\",\r\n\r\n      currentWeek: \"\",\r\n      currentMonth: \"\",\r\n      firstDay: \"\",\r\n\r\n      days: [],\r\n      months: [],\r\n\r\n      showSelect: false,\r\n      isFirstUpdate: true,\r\n      isArrowShow: true,\r\n\r\n      isFirstWeekReg: false, \r\n\r\n\r\n      // загрузка данных с сервера\r\n      showLoader: false,\r\n      showCalendar: true,\r\n\r\n      registrationMonth: \"23-07-2023\", // user\r\n    };\r\n  },\r\n  mounted() {\r\n    this.currentDate = moment();\r\n    this.presentDay = this.currentDate.format(\"DD-MMMM\").split(\"-\"); // установка текущего дня \r\n    // this.OAuth();\r\n    this.getMonths(this.registrationMonth); // загрузка в  select всех месяцев с даты регистрации по текущий + следующие\r\n    this.showWeek(this.currentDate);\r\n  },\r\n\r\n  methods: {\r\n    // показывает текущую неделю на календаре (выбранную)\r\n    showWeek(currentDate) {\r\n      this.days = [];\r\n      const weekStart = currentDate.clone().startOf(\"week\");\r\n      this.currentWeek = weekStart;\r\n      this.days = this.fillDays(this.currentWeek);\r\n      this.firstDay = `${this.capitalizeFirstLetter(this.days[0][2])}  ${this.days[0][3]}`\r\n    },\r\n\r\n    // // заполнение днями недели текущей\r\n    fillDays(startDate) {\r\n      const daysArray = [];\r\n      for (let i = 0; i <= 6; i++) {\r\n        const day = moment(startDate).add(i, \"days\").format(\"dddd-DD-MMMM-YYYY\");\r\n        daysArray.push(day.split(\"-\"));\r\n      }\r\n      return daysArray;\r\n    },\r\n\r\n    // загружает месяца пользователя, с регистарации по текущий + 3 вперёд (настраиваемо)\r\n    getMonths(startDate, monthAfter = 3) {\r\n      const nowNormalized = moment().locale(\"ru\").startOf(\"month\"); // Первое число текущего месяца\r\n      const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\r\n        \"month\"\r\n      );\r\n      while (startDateNormalized.isBefore(nowNormalized)) {\r\n        this.months.push(\r\n          this.capitalizeFirstLetter(\r\n            startDateNormalized.format(\"MMMM YYYY MM\")\r\n          ).split(\" \")\r\n        );\r\n        startDateNormalized.add(1, \"M\");\r\n      }\r\n\r\n      // Добавляем месяцы после текущего\r\n      for (let i = 0; i < monthAfter; i++) {\r\n        const monthslater = nowNormalized.clone().add(i, \"M\");\r\n        this.months.push(\r\n          this.capitalizeFirstLetter(monthslater.format(\"MMMM YYYY MM\")).split(\r\n            \" \"\r\n          )\r\n        );\r\n      }\r\n    },\r\n\r\n    // изменяет выбранный месяц в списке (визуально)\r\n    // changeCurrentMonth(value) {\r\n    //   this.currentMonth = `${value[0]} ${value[1]}`;\r\n    // },\r\n\r\n    // переключает неделю на предыдущую (стрелка) -- переделать (не работает перелючения на 1 неделю месяца)\r\n    prevWeek(startDate) {\r\n      this.startLoading();\r\n\r\n      const previousWeek = this.currentWeek\r\n        ? this.currentWeek.clone().subtract(1, \"week\")\r\n        : moment().startOf(\"isoWeek\").subtract(1, \"week\");\r\n      const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\r\n        \"month\"\r\n      );\r\n      \r\n      if (previousWeek.isBefore(startDateNormalized)) {\r\n        if(!this.isFirstWeekReg) {\r\n          this.currentWeek = previousWeek;\r\n          this.days = [];\r\n          this.days = this.fillDays(this.currentWeek);\r\n          this.isArrowShow = false;\r\n        }\r\n        this.isFirstWeekReg = true \r\n        // alert(\"Вы не можете перейти за начальную дату регистрации.\");\r\n        \r\n      } else {\r\n        this.currentWeek = previousWeek;\r\n        this.days = [];\r\n        this.days = this.fillDays(this.currentWeek);\r\n      }\r\n      this.firstDay = `${this.capitalizeFirstLetter(this.days[0][2])}  ${this.days[0][3]}`\r\n      this.loading();\r\n    },\r\n\r\n    // переключает неделю на следующую (стрелка)\r\n    nextWeek() {\r\n      this.startLoading();\r\n      this.isFirstWeekReg = false \r\n      this.isArrowShow = true;\r\n      if (!this.currentWeek) {\r\n        // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\r\n        this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\r\n      } else {\r\n        // Иначе переключаемся на следующую неделю\r\n        this.currentWeek.add(1, \"week\");\r\n      }\r\n      this.days = [];\r\n\r\n      this.days = this.fillDays(this.currentWeek);\r\n      this.firstDay = `${this.capitalizeFirstLetter(this.days[0][2])}  ${this.days[0][3]}`\r\n      this.loading();\r\n    },\r\n\r\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\r\n    capitalizeFirstLetter(string) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    },\r\n\r\n    // изменяет месяц, выбранный в списке\r\n    // changeMonth() {\r\n    //   this.startLoading();\r\n\r\n    //   let date = null;\r\n    //   for (let i = 0; i < this.months.length; i++) {\r\n    //     if (`${this.months[i][0]} ${this.months[i][1]}` == this.currentMonth) {\r\n    //       date = `${this.months[i][2]}-${this.months[i][1]}-01`;\r\n    //     }\r\n    //   }\r\n    //   const newWeek = moment(date, \"MM-YYYY-DD\");\r\n    //   this.showWeek(newWeek);\r\n    //   this.loading();\r\n    // },\r\n\r\n    // // получает информацию о code пользователя из адреса\r\n    OAuth() {\r\n      const string = window.location.search;\r\n      const code = string.split(\"?code=\")[1];\r\n\r\n      console.log(code); // выводит код доступа гитхаба\r\n\r\n      axios\r\n        .post(`localhost:5000/auth/gh_oauth`, code)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    // старт загрузки\r\n    startLoading() {\r\n      this.showLoader = true;\r\n      this.showCalendar = false;\r\n    },\r\n    // процесс загрузки\r\n    loading() {\r\n      // здесь будем получать данные с сервера\r\n      setTimeout(() => {\r\n        this.showLoader = false;\r\n        this.showCalendar = true;\r\n      }, 1000);\r\n    },\r\n  },\r\n  watch: {\r\n    // следит за отслеживанием выбранного месяца в списке и вызывает функцию при изменении значения\r\n    // currentMonth() {\r\n    //   if (this.isFirstUpdate) {\r\n    //     this.isFirstUpdate = false; // Устанавливаем флаг false при первом обновлении\r\n    //   } else {\r\n    //     this.changeMonth();\r\n    //     this.showSelect = false;\r\n    //   }\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.wrapper {\r\n  margin: 100px auto;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.loader {\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 5px solid black;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>"],"mappings":";OA6BUA,UAA8C;OAkBhDC,UAA6C;OAM7CC,UAA8C;;EApD/CC,KAAK,EAAC;AAAe;;EAsBnBA,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAiB;;;EAmB3BA,KAAK,EAAC;AAAQ;;EAgBhBA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAM;;EAURA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;iCACtBC,mBAAA,CAA8B;EAAzBD,KAAK,EAAC;AAAW,GAAC,GAAC;;;6DA1E9BC,mBAAA,CAyDM,OAzDNC,UAyDM,GAxDJC,mBAAA,muBAoBU,EACVF,mBAAA,CAoBM,OApBNG,UAoBM,GAnBJH,mBAAA,CAQM,OARNI,UAQM,GAPJJ,mBAAA,CAAkD,OAAlDK,UAAkD,EAAAC,gBAAA,CAAlBC,KAAA,CAAAC,QAAQ,kBACxCR,mBAAA,CAKE;IAJCS,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,KAAA,CAAAK,UAAU,IAAIL,KAAA,CAAAK,UAAU;IAC/Bb,KAAK,EAAAc,eAAA,CAAEN,KAAA,CAAAK,UAAU;IAClBE,GAA8C,EAA9ClB,UAA8C;IAC9CmB,GAAG,EAAC;6BAGRf,mBAAA,CASM;IATAD,KAAK,EAAAc,eAAA,CAAEN,KAAA,CAAAK,UAAU;yBACrBI,mBAAA,CAOMC,SAAA,QAAAC,WAAA,CAJYX,KAAA,CAAAY,MAAM,EAAfC,KAAK;yBAHdJ,mBAAA,CAOM;MANHP,OAAK,EAAAE,MAAA,IAAEJ,KAAA,CAAAC,QAAQ,IAAKY,KAAK;MAC1BrB,KAAK,EAAC,cAAc;MAEnBsB,GAAG,EAAED;wBAEHA,KAAK,OAAM,GAAC,GAAAd,gBAAA,CAAGc,KAAK,2BAAAE,UAAA;qDAI7BtB,mBAAA,CAaM,OAbNuB,UAaM,GAZJvB,mBAAA,CAKE;IAJCS,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEa,QAAA,CAAAC,QAAQ,MAAMC,iBAAiB;IACvCZ,GAA6C,EAA7CjB,UAA6C;IAC7CkB,GAAG,EAAC,EAAE;IACLhB,KAAK,EAAAc,eAAA,CAAEN,KAAA,CAAAoB,WAAW;2BAErB3B,mBAAA,CAKE;IAJCS,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEa,QAAA,CAAAI,QAAQ;IAChBd,GAA8C,EAA9ChB,UAA8C;IAC9CiB,GAAG,EAAC,EAAE;IACNhB,KAAK,EAAC;UAKZC,mBAAA,CA+HM,OA/HN6B,UA+HM,GA9HJ7B,mBAAA,CAgBM,OAhBN8B,UAgBM,I,kBAfJd,mBAAA,CAcMC,SAAA,QAAAC,WAAA,CARUX,KAAA,CAAAwB,IAAI,EAAXC,GAAG;yBANZhB,mBAAA,CAcM;MAbHjB,KAAK,EAAAc,eAAA,CAAcmB,GAAG,OAAOzB,KAAA,CAAA0B,UAAU,OAAOD,GAAG,OAAOzB,KAAA,CAAA0B,UAAU,M;MAMlEZ,GAAG,EAAEW;QAENhC,mBAAA,CAA2C,OAA3CkC,UAA2C,EAAA5B,gBAAA,CAAf0B,GAAG,qBAC/BhC,mBAAA,CAAyC,OAAzCmC,WAAyC,EAAA7B,gBAAA,CAAf0B,GAAG,qBAC7BhC,mBAAA,CAAyC,OAAzCoC,WAAyC,EAAA9B,gBAAA,CAAf0B,GAAG,qBAC7BhC,mBAAA,CAAyC,OAAzCqC,WAAyC,EAAA/B,gBAAA,CAAf0B,GAAG,qBAC7BM,WAA8B,C;oCAGlCpC,mBAAA,6tIA4GU,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}