{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from './../assets/images/home/edited_task.svg';\nconst _hoisted_1 = {\n  class: \"form-task form-tasklist\"\n};\nconst _hoisted_2 = {\n  class: \"form-title-container\"\n};\nconst _hoisted_3 = {\n  class: \"form-title\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  class: \"form-text\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = {\n  class: \"form-button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", _hoisted_3, _toDisplayString(_ctx.CHECKED_TASK.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = $event => this.editedTask = !this.editedTask)\n  }, _hoisted_5)]), _createElementVNode(\"form\", {\n    action: \"\",\n    type: \"post\",\n    onSubmit: _cache[7] || (_cache[7] = (...args) => _ctx.editTask && _ctx.editTask(...args)),\n    style: {\n      \"display\": \"flex\",\n      \"flex-direction\": \"column\",\n      \"row-gap\": \"20px\"\n    }\n  }, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-input\",\n    type: \"text\",\n    placeholder: \"Описание задачи\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.taskInfo = $event),\n    disabled: !$data.editedTask\n  }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, $data.taskInfo]])]), _createElementVNode(\"h4\", _hoisted_7, \"Тип задачи - \" + _toDisplayString(_ctx.CHECKED_TASK.type), 1 /* TEXT */), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-input\",\n    type: \"text\",\n    placeholder: \"Дата начала\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.taskStartTime = $event),\n    disabled: !$data.editedTask\n  }, null, 8 /* PROPS */, _hoisted_8), [[_vModelText, $data.taskStartTime]])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-input\",\n    type: \"text\",\n    placeholder: \"Дата окончания\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.taskEndTime = $event),\n    disabled: !$data.editedTask\n  }, null, 8 /* PROPS */, _hoisted_9), [[_vModelText, $data.taskEndTime]])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", {\n    onClick: _cache[4] || (_cache[4] = $event => $options.deleteTask()),\n    class: \"task-edited-button\",\n    style: {\n      \"border\": \"1p\"\n    }\n  }, \" Удалить \"), _createElementVNode(\"div\", {\n    onClick: _cache[5] || (_cache[5] = $event => $options.changeTask()),\n    class: \"task-edited-button\",\n    style: {\n      \"background-color\": \"#87979A\"\n    }\n  }, \" Сохранить \"), _createElementVNode(\"div\", {\n    class: \"form-button_add\",\n    onClick: _cache[6] || (_cache[6] = $event => $options.closeTask())\n  }, \" Отмена \")])], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","alt","_hoisted_4","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","CHECKED_TASK","name","type","onClick","_cache","$event","editedTask","action","onSubmit","args","editTask","style","placeholder","$data","taskInfo","disabled","_hoisted_7","taskStartTime","taskEndTime","_hoisted_10","$options","deleteTask","changeTask","closeTask"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\TaskApp.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-task form-tasklist\">\r\n        <div class=\"form-title-container\">\r\n            <h3 class=\"form-title\">\r\n                {{ CHECKED_TASK.name }}\r\n            </h3>\r\n            <button type=\"button\" @click=\"this.editedTask = !this.editedTask\">\r\n                <img src=\"./../assets/images/home/edited_task.svg\" alt=\"\" />\r\n            </button>\r\n        </div>\r\n\r\n        <form\r\n            action=\"\"\r\n            type=\"post\"\r\n            @submit=\"editTask\"\r\n            style=\"display: flex; flex-direction: column; row-gap: 20px\"\r\n        >\r\n            <div>\r\n                <input\r\n                    class=\"form-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Описание задачи\"\r\n                    v-model=\"taskInfo\"\r\n                    :disabled=\"!editedTask\"\r\n                />\r\n            </div>\r\n            <h4 class=\"form-text\">Тип задачи - {{ CHECKED_TASK.type }}</h4>\r\n\r\n            <div>\r\n                <input\r\n                    class=\"form-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Дата начала\"\r\n                    v-model=\"taskStartTime\"\r\n                    :disabled=\"!editedTask\"\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <input\r\n                    class=\"form-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Дата окончания\"\r\n                    v-model=\"taskEndTime\"\r\n                    :disabled=\"!editedTask\"\r\n                />\r\n            </div>\r\n\r\n            <div class=\"form-button-container\">\r\n                <div @click=\"deleteTask()\" class=\"task-edited-button\" style=\"border: 1p;\r\n;\">\r\n                    Удалить\r\n                </div>\r\n\r\n                <div @click=\"changeTask()\" class=\"task-edited-button\" style=\"background-color: #87979A;\"> \r\n                    Сохранить\r\n                </div>\r\n\r\n                <div class=\"form-button_add\" @click=\"closeTask()\" >\r\n                    Отмена\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\nexport default {\r\n    computed: {\r\n        ...mapGetters([\"CHECKED_TASK\"]),\r\n    },\r\n    data() {\r\n        return {\r\n            taskInfo: \"\",\r\n            taskStartTime: \"\",\r\n            taskEndTime: \"\",\r\n            editedTask: false,\r\n        };\r\n    },\r\n    methods: {\r\n        ...mapMutations([\"UPDATE_CHECKED_TASK\"]),\r\n        closeTask() {\r\n            this.UPDATE_CHECKED_TASK(undefined);\r\n        },\r\n\r\n        deleteTask(){\r\n\r\n        }, \r\n        changeTask(){\r\n\r\n        }\r\n    },\r\n    created() {\r\n        const checkedTask = this.CHECKED_TASK;\r\n        if (checkedTask) {\r\n            this.taskInfo = checkedTask.text || \"\";\r\n            this.taskStartTime = checkedTask.startTime || \"\";\r\n            this.taskEndTime = checkedTask.endTime || \"\";\r\n        }\r\n\r\n        // <li>ID - {{ CHECKED_TASK._id }}</li>\r\n        // <li>NAME - {{ CHECKED_TASK.name }}</li>\r\n        // <li>INFO - {{ CHECKED_TASK.text}}</li>\r\n        // <li>TYPE - {{ CHECKED_TASK.type }}</li>\r\n        // <li>START TIME - {{ CHECKED_TASK.startTime }}</li>\r\n        // <li>END TIME - {{ CHECKED_TASK.endTime }}</li>\r\n        // <li>OWNER ? - {{ CHECKED_TASK.owner }}</li>\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.form-title-container {\r\n    display: flex;\r\n    column-gap: 5px;\r\n    justify-content: center;\r\n}\r\n\r\n.task-edited-button {\r\n    display: inline-block;\r\n    text-align: center;\r\n    padding-top: 11px;\r\n    border: 1px solid #001524;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n}\r\n</style>"],"mappings":";OAOqBA,UAA6C;;EANzDC,KAAK,EAAC;AAAyB;;EAC3BA,KAAK,EAAC;AAAsB;;EACzBA,KAAK,EAAC;AAAY;gCAIlBC,mBAAA,CAA4D;EAAvDC,GAA6C,EAA7CH,UAA6C;EAACI,GAAG,EAAC;;oBAAvDC,UAA4D,C;;;EAmB5DJ,KAAK,EAAC;AAAW;;;;EAsBhBA,KAAK,EAAC;AAAuB;;uBA/C1CK,mBAAA,CA8DM,OA9DNC,UA8DM,GA7DFL,mBAAA,CAOM,OAPNM,UAOM,GANFN,mBAAA,CAEK,MAFLO,UAEK,EAAAC,gBAAA,CADEC,IAAA,CAAAC,YAAY,CAACC,IAAI,kBAExBX,mBAAA,CAES;IAFDY,IAAI,EAAC,QAAQ;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAAOC,UAAU,SAASA,UAAU;oBAKpEhB,mBAAA,CAmDO;IAlDHiB,MAAM,EAAC,EAAE;IACTL,IAAI,EAAC,MAAM;IACVM,QAAM,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEV,IAAA,CAAAW,QAAA,IAAAX,IAAA,CAAAW,QAAA,IAAAD,IAAA,CAAQ;IACjBE,KAA4D,EAA5D;MAAA;MAAA;MAAA;IAAA;MAEArB,mBAAA,CAQM,c,gBAPFA,mBAAA,CAME;IALED,KAAK,EAAC,YAAY;IAClBa,IAAI,EAAC,MAAM;IACXU,WAAW,EAAC,iBAAiB;+DACpBC,KAAA,CAAAC,QAAQ,GAAAT,MAAA;IAChBU,QAAQ,GAAGF,KAAA,CAAAP;sDADHO,KAAA,CAAAC,QAAQ,E,KAIzBxB,mBAAA,CAA+D,MAA/D0B,UAA+D,EAAzC,eAAa,GAAAlB,gBAAA,CAAGC,IAAA,CAAAC,YAAY,CAACE,IAAI,kBAEvDZ,mBAAA,CAQM,c,gBAPFA,mBAAA,CAME;IALED,KAAK,EAAC,YAAY;IAClBa,IAAI,EAAC,MAAM;IACXU,WAAW,EAAC,aAAa;+DAChBC,KAAA,CAAAI,aAAa,GAAAZ,MAAA;IACrBU,QAAQ,GAAGF,KAAA,CAAAP;sDADHO,KAAA,CAAAI,aAAa,E,KAK9B3B,mBAAA,CAQM,c,gBAPFA,mBAAA,CAME;IALED,KAAK,EAAC,YAAY;IAClBa,IAAI,EAAC,MAAM;IACXU,WAAW,EAAC,gBAAgB;+DACnBC,KAAA,CAAAK,WAAW,GAAAb,MAAA;IACnBU,QAAQ,GAAGF,KAAA,CAAAP;sDADHO,KAAA,CAAAK,WAAW,E,KAK5B5B,mBAAA,CAaM,OAbN6B,WAaM,GAZF7B,mBAAA,CAGM;IAHAa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEe,QAAA,CAAAC,UAAU;IAAIhC,KAAK,EAAC,oBAAoB;IAACsB,KACpE,EADoE;MAAA;IAAA;KACnE,WAEa,GAEArB,mBAAA,CAEM;IAFAa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEe,QAAA,CAAAE,UAAU;IAAIjC,KAAK,EAAC,oBAAoB;IAACsB,KAAkC,EAAlC;MAAA;IAAA;KAAmC,aAEzF,GAEArB,mBAAA,CAEM;IAFDD,KAAK,EAAC,iBAAiB;IAAEc,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEe,QAAA,CAAAG,SAAS;KAAK,UAEnD,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}