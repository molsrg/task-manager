{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from './../../../assets/images/home/tasklist-more.svg';\nconst _withScopeId = n => (_pushScopeId(\"data-v-38c37455\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"task-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"task-container_logo\"\n}, \"Task Unity Tech\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"tasklist_title\"\n};\nconst _hoisted_4 = {\n  class: \"tasklist_title-text\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"circle\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"horizontal\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"vertical\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_7, _hoisted_8];\nconst _hoisted_10 = [\"value\"];\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"custom-checkbox\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"tasklist-important-task\"\n}, [/*#__PURE__*/_createElementVNode(\"h4\", null, \"Домашка\"), /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.USER_TASKLISTS, (tasklist, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"tasklist\"\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"h4\", _hoisted_4, _toDisplayString(tasklist.title), 1 /* TEXT */), _createElementVNode(\"div\", {\n      class: _normalizeClass(tasklist.toggleCircle ? 'circle-plus opened' : 'circle-plus closed'),\n      onClick: $event => $options.changeToggle(index)\n    }, [tasklist.tasks.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _hoisted_9)) : _createCommentVNode(\"v-if\", true)], 10 /* CLASS, PROPS */, _hoisted_5)]), _createElementVNode(\"div\", {\n      class: _normalizeClass([\"tasklist_tasks\", {\n        'tasklist_tasks-visible': tasklist.isTasklistVisible && tasklist.tasks.length > 0\n      }])\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(tasklist.tasks, task => {\n      return _openBlock(), _createElementBlock(\"label\", {\n        key: task.id,\n        class: \"tasklist_label\"\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        class: \"real-checkbox\",\n        value: task,\n        type: \"checkbox\",\n        onChange: _cache[0] || (_cache[0] = $event => $options.selectTasks()),\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.checkedTasks = $event)\n      }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_10), [[_vModelCheckbox, $data.checkedTasks]]), _hoisted_11, _createTextVNode(\" \" + _toDisplayString(task.name), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _hoisted_12, _createElementVNode(\"button\", {\n    class: \"tasklist-option\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addedTask && $options.addedTask(...args))\n  }, \" Создать задачу \"), _createElementVNode(\"button\", {\n    class: \"tasklist-option\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.addedTasklist && $options.addedTasklist(...args))\n  }, \" Добавить лист \"), _createElementVNode(\"button\", {\n    class: \"tasklist-option\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.checkSelectedTask && $options.checkSelectedTask(...args))\n  }, \" Показать отмеченные задачи \")]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","_hoisted_7","_hoisted_8","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_ctx","USER_TASKLISTS","tasklist","index","key","_hoisted_3","_hoisted_4","_toDisplayString","title","_normalizeClass","toggleCircle","onClick","$event","$options","changeToggle","tasks","length","_hoisted_6","_hoisted_9","isTasklistVisible","task","id","value","type","onChange","_cache","selectTasks","$data","checkedTasks","_hoisted_11","name","_hoisted_12","args","addedTask","addedTasklist","checkSelectedTask"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\LEFT_NAVBAR\\TaskContainer.vue"],"sourcesContent":["<template>\r\n<div class=\"task-container\">\r\n    <h3 class=\"task-container_logo\">Task Unity Tech</h3>\r\n\r\n        <div\r\n        v-for=\"(tasklist, index) in USER_TASKLISTS\"\r\n        :key=\"index\"\r\n        class=\"tasklist\"\r\n        >\r\n            <div class=\"tasklist_title\">\r\n                <h4 class=\"tasklist_title-text\">{{ tasklist.title }}</h4>\r\n                <div\r\n                    :class=\"\r\n                    tasklist.toggleCircle ? 'circle-plus opened' : 'circle-plus closed'\r\n                    \"\r\n                    @click=\"changeToggle(index)\"\r\n                >\r\n                    <div class=\"circle\" v-if=\"tasklist.tasks.length > 0\">\r\n                        <div class=\"horizontal\"></div>\r\n                        <div class=\"vertical\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                class=\"tasklist_tasks\"\r\n                :class=\"{ 'tasklist_tasks-visible': tasklist.isTasklistVisible && tasklist.tasks.length > 0 }\"\r\n            >\r\n            <label\r\n                v-for=\"task in tasklist.tasks\"\r\n                :key=\"task.id\"\r\n                class=\"tasklist_label\"\r\n            >\r\n                <input\r\n                class=\"real-checkbox\"\r\n                :value=\"task\"\r\n                type=\"checkbox\"\r\n                @change=\"selectTasks()\"\r\n                v-model=\"checkedTasks\"\r\n                />\r\n                <span class=\"custom-checkbox\"></span>\r\n                {{ task.name }}\r\n            </label>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"tasklist-important-task\">\r\n                <h4>Домашка</h4>\r\n                <img src=\"./../../../assets/images/home/tasklist-more.svg\" alt=\"\">\r\n        </div>\r\n\r\n        <button class=\"tasklist-option\" @click=\"addedTask\">\r\n        Создать задачу\r\n        </button>\r\n\r\n        <button class=\"tasklist-option\" @click=\"addedTasklist\">\r\n        Добавить лист\r\n        </button>\r\n\r\n        <button\r\n        class=\"tasklist-option\"\r\n        @click=\"checkSelectedTask\"\r\n        >\r\n        Показать отмеченные задачи\r\n        </button>\r\n\r\n    </div>\r\n\r\n    \r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapMutations, mapActions } from \"vuex\";\r\nimport './../../../assets/images/home/tasklist-more.svg'\r\nexport default {\r\n    data() {\r\n        return {\r\n        checkedTasks: [],\r\n        };\r\n    },\r\n    computed: {\r\n        ...mapGetters([\"USER_TASKLISTS\", \"CHECKED_TASK\"]),\r\n    },\r\n    methods: {\r\n        ...mapMutations([\r\n        \"UPDATE_VISIBLE_TASKLIST\",\r\n        \"UPDATE_SELECT_TASKS\",\r\n        \"UPDATE_IS_ADDED_TASK\",\r\n        \"UPDATE_IS_ADDED_TASKLIST\",\r\n        \"UPDATE_CHECK_SELECT_TASK\",\r\n        ]),\r\n        ...mapActions([\"GET_THIS_WEEK_TASKS\", \"GET_THIS_DAY_TASKS\"]),\r\n\r\n        changeToggle(index) {\r\n        this.UPDATE_VISIBLE_TASKLIST(index);\r\n        },\r\n        selectTasks() {\r\n        this.UPDATE_SELECT_TASKS(this.checkedTasks);\r\n        },\r\n\r\n        addedTask() {\r\n        this.UPDATE_IS_ADDED_TASK();\r\n        },\r\n\r\n        addedTasklist() {\r\n        this.UPDATE_IS_ADDED_TASKLIST();\r\n        },\r\n\r\n        checkSelectedTask() {\r\n        this.UPDATE_CHECK_SELECT_TASK();\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    .task-container {\r\n        font-family: Raleway;\r\n        display: flex;\r\n        flex-direction: column;\r\n        row-gap: 10px;\r\n        background-color: rgb(191, 191, 191);\r\n        padding: 35px 13px;\r\n        min-width: 340px;\r\n        /* overflow-y: scroll; */\r\n\r\n    }\r\n    .task-container_logo {\r\n        margin-bottom: 4px;\r\n        font-size: 20px;\r\n        font-weight: 200;\r\n        color: rgba(0, 21, 36, 1);\r\n    }\r\n\r\n\r\n    .tasklist {\r\n        /* display: flex;\r\n        \r\n        justify-content: space-between;\r\n        flex-direction: column; */\r\n\r\n\r\n        background-color: #C4D7DA;\r\n        padding: 17px 19px;\r\n        border-radius: 10px;\r\n        padding-bottom: 6px;\r\n    }\r\n\r\n    .tasklist_title{\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .tasklist_title-text {\r\n        font-size: 20px;\r\n        font-weight: 500;\r\n        line-height: 23px;\r\n    }\r\n\r\n    .tasklist_tasks{\r\n        margin-top: 8px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        font-family: Raleway;\r\n        font-size: 20px;\r\n        font-weight: 300;\r\n        line-height: 23px;\r\n        color: #001524;\r\n        gap: 11px;\r\n\r\n        max-height: 0;\r\n        overflow: hidden;\r\n        transition: max-height 5s linear; /* Устанавливаем время и тип анимации по вашему выбору */\r\n    }\r\n\r\n    .tasklist-important-task {\r\n        background-color: transparent;\r\n        border-radius: 10px;\r\n        \r\n        display: flex;\r\n        justify-content: space-between;\r\n        /* font-family: Raleway; */\r\n        font-size: 20px;\r\n        font-weight: 500;\r\n\r\n        background-color: #DDC9C3;\r\n        padding: 17px 21px;\r\n\r\n    }\r\n\r\n    .tasklist_tasks-visible{\r\n        max-height: 500px; /* Выберите подходящее значение, чтобы максимально раскрывать список задач */\r\n        padding-bottom: 13px;\r\n    }\r\n\r\n    .tasklist_label{\r\n        word-wrap: break-word;\r\n    }\r\n    \r\n    .tasklist-option {\r\n        background-color: transparent;\r\n        border-radius: 10px;\r\n        border: 1px #001524 solid;\r\n        padding: 16px 53px;\r\n        font-weight: 500;\r\n    }\r\n\r\n\r\n    \r\n\r\n</style>"],"mappings":";OA+CqBA,UAAqD;;;EA9CrEC,KAAK,EAAC;AAAgB;gEACvBC,mBAAA,CAAoD;EAAhDD,KAAK,EAAC;AAAqB,GAAC,iBAAe;;EAOlCA,KAAK,EAAC;AAAgB;;EACnBA,KAAK,EAAC;AAAqB;;;;EAOtBA,KAAK,EAAC;;gEACPC,mBAAA,CAA8B;EAAzBD,KAAK,EAAC;AAAY;gEACvBC,mBAAA,CAA4B;EAAvBD,KAAK,EAAC;AAAU;oBADrBE,UAA8B,EAC9BC,UAA4B,C;;iEAoBpCF,mBAAA,CAAqC;EAA/BD,KAAK,EAAC;AAAiB;iEAMrCC,mBAAA,CAGM;EAHDD,KAAK,EAAC;AAAyB,I,aAC5BC,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAkE;EAA7DG,GAAqD,EAArDL,UAAqD;EAACM,GAAG,EAAC;;;;uBA9C/EC,mBAAA,CAgEU,OAhEVC,UAgEU,GA/DNC,UAAoD,G,kBAEhDF,mBAAA,CAuCMG,SAAA,QAAAC,WAAA,CAtCsBC,IAAA,CAAAC,cAAc,GAAlCC,QAAQ,EAAEC,KAAK;yBADvBR,mBAAA,CAuCM;MArCLS,GAAG,EAAED,KAAK;MACXd,KAAK,EAAC;QAEFC,mBAAA,CAaM,OAbNe,UAaM,GAZFf,mBAAA,CAAyD,MAAzDgB,UAAyD,EAAAC,gBAAA,CAAtBL,QAAQ,CAACM,KAAK,kBACjDlB,mBAAA,CAUM;MATDD,KAAK,EAAAoB,eAAA,CAAwBP,QAAQ,CAACQ,YAAY,8C;MAGlDC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY,CAACX,KAAK;QAEAD,QAAQ,CAACa,KAAK,CAACC,MAAM,Q,cAA/CrB,mBAAA,CAGM,OAHNsB,UAGM,EAAAC,UAAA,K,0EAGd5B,mBAAA,CAmBM;MAlBFD,KAAK,EAAAoB,eAAA,EAAC,gBAAgB;QAAA,0BACcP,QAAQ,CAACiB,iBAAiB,IAAIjB,QAAQ,CAACa,KAAK,CAACC,MAAM;MAAA;2BAE3FrB,mBAAA,CAcQG,SAAA,QAAAC,WAAA,CAbWG,QAAQ,CAACa,KAAK,EAAtBK,IAAI;2BADfzB,mBAAA,CAcQ;QAZHS,GAAG,EAAEgB,IAAI,CAACC,EAAE;QACbhC,KAAK,EAAC;0BAENC,mBAAA,CAME;QALFD,KAAK,EAAC,eAAe;QACpBiC,KAAK,EAAEF,IAAI;QACZG,IAAI,EAAC,UAAU;QACdC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAb,MAAA,IAAEC,QAAA,CAAAa,WAAW;mEACXC,KAAA,CAAAC,YAAY,GAAAhB,MAAA;gFAAZe,KAAA,CAAAC,YAAY,E,GAErBC,WAAqC,E,iBAAA,GACrC,GAAAtB,gBAAA,CAAGa,IAAI,CAACU,IAAI,iB;;kCAKpBC,WAGM,EAENzC,mBAAA,CAES;IAFDD,KAAK,EAAC,iBAAiB;IAAEsB,OAAK,EAAAc,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEnB,QAAA,CAAAoB,SAAA,IAAApB,QAAA,CAAAoB,SAAA,IAAAD,IAAA,CAAS;KAAE,kBAEnD,GAEA1C,mBAAA,CAES;IAFDD,KAAK,EAAC,iBAAiB;IAAEsB,OAAK,EAAAc,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEnB,QAAA,CAAAqB,aAAA,IAAArB,QAAA,CAAAqB,aAAA,IAAAF,IAAA,CAAa;KAAE,iBAEvD,GAEA1C,mBAAA,CAKS;IAJTD,KAAK,EAAC,iBAAiB;IACtBsB,OAAK,EAAAc,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEnB,QAAA,CAAAsB,iBAAA,IAAAtB,QAAA,CAAAsB,iBAAA,IAAAH,IAAA,CAAiB;KACxB,8BAED,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}