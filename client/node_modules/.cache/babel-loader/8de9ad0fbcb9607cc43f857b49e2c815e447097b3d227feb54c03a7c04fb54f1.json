{"ast":null,"code":"import axios from 'axios';\nimport { mapActions, mapMutations, mapGetters } from \"vuex\";\nimport { useVuelidate } from '@vuelidate/core';\nimport { required, minLength } from '@vuelidate/validators';\nimport 'air-datepicker/air-datepicker.css';\nimport AirDatepicker from 'air-datepicker';\nexport default {\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  mounted() {\n    this.formattedDate = this.USER_REGISTRATIONS.split('-').reverse().join('-') + 'T00:00';\n    new AirDatepicker('#taskListDate', {\n      position: 'right center',\n      range: true,\n      multipleDatesSeparator: ' - ',\n      dateFormat: 'yyyy-MM-dd',\n      buttons: [{\n        content(dp) {\n          return dp.opts.timepicker ? 'Выключить выбор времени' : 'Включить выбор времени';\n        },\n        onClick(dp) {\n          let viewDate = dp.viewDate;\n          let today = new Date();\n\n          // Since timepicker takes initial time from 'viewDate', set up time here, \n          // otherwise time will be equal to 00:00 if user navigated through datepicker\n          viewDate.setHours(today.getHours());\n          viewDate.setMinutes(today.getMinutes());\n          dp.update({\n            timepicker: !dp.opts.timepicker,\n            viewDate\n          });\n        }\n      }]\n    });\n  },\n  data() {\n    return {\n      taskListTitle: '',\n      taskListInfo: '',\n      taskListDate: '',\n      taskListStartTime: '',\n      taskListEndTime: '',\n      formattedDate: ''\n    };\n  },\n  validations: {\n    taskListTitle: {\n      required,\n      minLength: minLength(6)\n    },\n    taskListInfo: {\n      required,\n      minLength: minLength(8)\n    },\n    taskListDate: {\n      required\n    }\n  },\n  methods: {\n    ...mapActions(['ADD_TASK', 'GET_TASKLIST']),\n    ...mapMutations(['UPDATE_IS_ADDED_TASKLIST']),\n    splitDateRange(dateRange) {\n      const [startDate, endDate] = dateRange.split(' - ');\n      return {\n        startDate,\n        endDate\n      };\n    },\n    formatToISODate(dateString) {\n      const date = new Date(dateString);\n      if (!isNaN(date.getTime())) {\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const day = String(date.getDate()).padStart(2, '0');\n        return `${year}-${month}-${day}T00:00:00Z`;\n      } else {\n        return null;\n      }\n    },\n    async addTaskList(event) {\n      event.preventDefault();\n      const taskDateInput = this.$refs.taskListDate;\n      this.taskListDate = taskDateInput.value;\n      const isFormCorrect = await this.v$.$validate();\n      if (!isFormCorrect) return;\n      const {\n        startDate,\n        endDate\n      } = this.splitDateRange(this.taskListDate);\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/task/createTaskList',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        data: {\n          title: this.taskListTitle,\n          toggleCircle: false,\n          isTasklistVisible: false,\n          startTime: this.formatToISODate(startDate),\n          endTime: this.formatToISODate(endDate)\n        }\n      }).then(() => {\n        this.UPDATE_IS_ADDED_TASKLIST();\n        this.GET_TASKLIST();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  computed: {\n    ...mapGetters(['USER_REGISTRATIONS'])\n  }\n};","map":{"version":3,"names":["axios","mapActions","mapMutations","mapGetters","useVuelidate","required","minLength","AirDatepicker","setup","v$","mounted","formattedDate","USER_REGISTRATIONS","split","reverse","join","position","range","multipleDatesSeparator","dateFormat","buttons","content","dp","opts","timepicker","onClick","viewDate","today","Date","setHours","getHours","setMinutes","getMinutes","update","data","taskListTitle","taskListInfo","taskListDate","taskListStartTime","taskListEndTime","validations","methods","splitDateRange","dateRange","startDate","endDate","formatToISODate","dateString","date","isNaN","getTime","year","getFullYear","month","String","getMonth","padStart","day","getDate","addTaskList","event","preventDefault","taskDateInput","$refs","value","isFormCorrect","$validate","method","url","headers","localStorage","getItem","title","toggleCircle","isTasklistVisible","startTime","endTime","then","UPDATE_IS_ADDED_TASKLIST","GET_TASKLIST","catch","err","console","log","computed"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AddSomething\\AddTaskList.vue"],"sourcesContent":["<template>\r\n        <div class=\"form-task\">\r\n            <h3 class=\"form-title\">\r\n                Создание списка задач\r\n            </h3>\r\n            <form action=\"\" type=\"post\" @submit=\"addTaskList\" style=\"display: flex; flex-direction: column; gap: 20px;\"> \r\n                <div>\r\n                    <input \r\n                        class=\"form-input\" \r\n                        type=\"text\" \r\n                        placeholder=\"Название списка\" \r\n                        v-model=\"taskListTitle\"\r\n                    > \r\n                    <span class=\"invalid-span\" v-if=\"v$.taskListTitle.$invalid\">Минимальная длина 6 символов</span>\r\n                </div>\r\n                \r\n                <div>\r\n                    <input class=\"form-input\" type=\"text\" placeholder=\"Описание списка\" v-model=\"taskListInfo\">\r\n                    <span class=\"invalid-span\" v-if=\"v$.taskListInfo.$invalid\">Минимальная длина 8 символов</span>\r\n                </div>\r\n                \r\n\r\n                <div>\r\n                    <input  id=\"taskListDate\" ref=\"taskListDate\" class=\"form-input\" type=\"text\" placeholder=\"Дата выполнения\" v-model=\"taskListDate\">\r\n                    \r\n                </div>\r\n\r\n                <button class=\"form-submit\" type=\"submit\">Создать</button>\r\n                <button class=\"form-submit_exit\" @click=\"UPDATE_IS_ADDED_TASKLIST()\">Отмена</button>\r\n            </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { mapActions, mapMutations, mapGetters } from \"vuex\";\r\n\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required, minLength } from '@vuelidate/validators'\r\n\r\nimport 'air-datepicker/air-datepicker.css';\r\nimport AirDatepicker from 'air-datepicker';\r\n\r\n\r\nexport default {\r\n    setup () {\r\n        return {\r\n            v$: useVuelidate()\r\n        }\r\n    },\r\n    mounted() {\r\n        this.formattedDate = this.USER_REGISTRATIONS.split('-').reverse().join('-') + 'T00:00'\r\n\r\n        new AirDatepicker('#taskListDate',{\r\n            position: 'right center',\r\n            range: true,\r\n            multipleDatesSeparator: ' - ', \r\n            dateFormat: 'yyyy-MM-dd',\r\n            buttons: [\r\n        {\r\n            content(dp) {\r\n                return dp.opts.timepicker \r\n                    ? 'Выключить выбор времени'\r\n                    : 'Включить выбор времени'\r\n            },\r\n            onClick(dp) {\r\n                let viewDate = dp.viewDate;\r\n                let today = new Date();\r\n                \r\n                // Since timepicker takes initial time from 'viewDate', set up time here, \r\n                // otherwise time will be equal to 00:00 if user navigated through datepicker\r\n                viewDate.setHours(today.getHours());\r\n                viewDate.setMinutes(today.getMinutes());\r\n\r\n                dp.update({\r\n                    timepicker: !dp.opts.timepicker,\r\n                    viewDate\r\n                })\r\n            }\r\n        }\r\n    ]\r\n        });\r\n        \r\n    },\r\n    data(){\r\n        return {\r\n            taskListTitle: '',\r\n            taskListInfo: '',\r\n            taskListDate:'',\r\n\r\n\r\n            taskListStartTime: '',\r\n            taskListEndTime: '',\r\n\r\n            formattedDate: ''\r\n        }\r\n    }, \r\n    validations: {\r\n        taskListTitle: { required, minLength: minLength(6) },\r\n        taskListInfo: { required, minLength: minLength(8) },\r\n        taskListDate: { required },\r\n\r\n    },\r\n    methods: {\r\n        ...mapActions(['ADD_TASK', 'GET_TASKLIST']), \r\n        ...mapMutations(['UPDATE_IS_ADDED_TASKLIST']),\r\n        splitDateRange(dateRange) {\r\n            const [startDate, endDate] = dateRange.split(' - ');\r\n            return { startDate, endDate };\r\n        },\r\n\r\n        formatToISODate(dateString) {\r\n            const date = new Date(dateString);\r\n            if (!isNaN(date.getTime())) {\r\n                const year = date.getFullYear();\r\n                const month = String(date.getMonth() + 1).padStart(2, '0');\r\n                const day = String(date.getDate()).padStart(2, '0');\r\n                return `${year}-${month}-${day}T00:00:00Z`;\r\n            } else {\r\n                return null;\r\n            }\r\n        },\r\n        \r\n        async addTaskList(event) {\r\n            event.preventDefault();\r\n\r\n            const taskDateInput = this.$refs.taskListDate\r\n            this.taskListDate = taskDateInput.value\r\n\r\n            const isFormCorrect = await this.v$.$validate()\r\n            if (!isFormCorrect) return\r\n\r\n            const { startDate, endDate } = this.splitDateRange(this.taskListDate);\r\n\r\n            axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/task/createTaskList',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                data: {\r\n                    title: this.taskListTitle,\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    startTime: this.formatToISODate(startDate),\r\n                    endTime: this.formatToISODate(endDate),\r\n                },\r\n            })\r\n            .then(() => {\r\n                this.UPDATE_IS_ADDED_TASKLIST()\r\n                this.GET_TASKLIST()\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            }) \r\n        }\r\n    },\r\n    computed: {\r\n    ...mapGetters(['USER_REGISTRATIONS']),\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.invalid-span {\r\n    font-size: 12px;\r\n}\r\n\r\n.form-task {\r\n    max-width: 251px;\r\n    max-height: 600px;\r\n    color: #001524;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    padding: 40px 90px ;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    font-family: Raleway;\r\n    font-weight: 500;\r\n}\r\n\r\n.form-title{\r\n    font-size: 20px;\r\n    margin-bottom: 35px;\r\n}\r\n\r\n.form-input {\r\n    width: 251px;\r\n    height: 19px;\r\n    outline: none;\r\n    border: 0px solid white;\r\n    border-bottom: 1px solid #001524;\r\n    font-family: Raleway;\r\n    font-size: 16px;\r\n}\r\n\r\n.form-submit{\r\n    width: 100%;\r\n    padding: 16px 53px;\r\n    color:#FFECD1;\r\n    background-color: #87979A;\r\n    border-radius: 10px;\r\n    transition: background-color 0.3s;\r\n}\r\n.form-submit_filled {\r\n    background-color: #15616D;\r\n}\r\n\r\n.form-submit_exit{\r\n    width: 100%;\r\n    padding: 16px 53px;\r\n    border-radius: 10px;\r\n    border: 1px solid #001524;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}