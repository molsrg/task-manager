{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios'\n\nexport default {\n  state() {\n    return {\n      registration: '23-07-2023',\n      tasks: [{\n        name: 'Утренняя рутина',\n        id: 1,\n        time: '07:00 - 09:00',\n        type: 'EveryDay'\n      }, {\n        name: 'Вечерняя закалка',\n        id: 2,\n        time: '09:00 - 12:30',\n        type: 'Working'\n      }, {\n        name: 'Вечерняя закалка',\n        id: 2,\n        time: '09:00 - 17:30',\n        type: 'Common'\n      }],\n      tasklist: [{\n        title: 'Эта неделя',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: [{\n          name: 'Утренняя рутина',\n          id: 1,\n          time: '07:00 - 09:00',\n          type: 'EveryDay'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 2,\n          time: '09:00 - 12:30',\n          type: 'Working'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 2,\n          time: '09:00 - 17:30',\n          type: 'Common'\n        }]\n      }, {\n        title: 'Этот месяц',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: [{\n          name: 'Утренняя рутина',\n          id: 1,\n          time: '07:00 - 09:00',\n          type: 'EveryDay'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 2,\n          time: '09:00 - 12:30',\n          type: 'Working'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 2,\n          time: '09:00 - 17:30',\n          type: 'Common'\n        }]\n      }]\n    };\n  },\n  getters: {\n    USER_REGISTRATIONS: state => {\n      return state.registration;\n    },\n    USER_TASKLISTS: state => {\n      return state.tasklist;\n    }\n  },\n  mutations: {\n    // SET_USERS_FROM_FIREBASE: (state, response) => {\n    //     state.users = response\n    // }, \n  },\n  actions: {\n    UPDATE_VISIBLE_TASKLIST({\n      commit\n    }) {\n      const hours = [];\n      const currentHour = Number(moment().format('HH'));\n      for (let i = 0; i < 24; i++) {\n        let hour = currentHour + i;\n        if (hour > 23) {\n          hour -= 24;\n        }\n        hours.push(`${hour}:00`);\n      }\n      commit('UPDATE_HOURS', hours);\n    }\n  }\n};","map":{"version":3,"names":["state","registration","tasks","name","id","time","type","tasklist","title","toggleCircle","isTasklistVisible","getters","USER_REGISTRATIONS","USER_TASKLISTS","mutations","actions","UPDATE_VISIBLE_TASKLIST","commit","hours","currentHour","Number","moment","format","i","hour","push"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/User.js"],"sourcesContent":["// import axios from 'axios'\r\n\r\nexport default {\r\n    state() {\r\n        return {\r\n            registration: '23-07-2023',\r\n            tasks: [{name: 'Утренняя рутина', id: 1, time: '07:00 - 09:00', type: 'EveryDay'}, {name: 'Вечерняя закалка', id: 2, time: '09:00 - 12:30', type: 'Working'},{name: 'Вечерняя закалка', id: 2, time: '09:00 - 17:30', type: 'Common'}],\r\n            tasklist: [\r\n                {\r\n                    title: 'Эта неделя',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [\r\n                        {name: 'Утренняя рутина', id: 1, time: '07:00 - 09:00', type: 'EveryDay'},\r\n                        {name: 'Вечерняя закалка', id: 2, time: '09:00 - 12:30', type: 'Working'},\r\n                        {name: 'Вечерняя закалка', id: 2, time: '09:00 - 17:30', type: 'Common'},\r\n                        \r\n                    ],\r\n                }, \r\n                {\r\n                    title: 'Этот месяц',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [\r\n                        {name: 'Утренняя рутина', id: 1, time: '07:00 - 09:00', type: 'EveryDay'},\r\n                        {name: 'Вечерняя закалка', id: 2, time: '09:00 - 12:30', type: 'Working'},\r\n                        {name: 'Вечерняя закалка', id: 2, time: '09:00 - 17:30', type: 'Common'},\r\n                    ],\r\n                }, \r\n            ]\r\n        }\r\n        \r\n    }, \r\n    getters: {\r\n        \r\n        USER_REGISTRATIONS: state => {\r\n            return state.registration\r\n        },\r\n        USER_TASKLISTS: state => {\r\n            return state.tasklist\r\n        }\r\n    }, \r\n    mutations: {\r\n        // SET_USERS_FROM_FIREBASE: (state, response) => {\r\n        //     state.users = response\r\n        // }, \r\n    }, \r\n    actions: {\r\n        UPDATE_VISIBLE_TASKLIST ({ commit }) {\r\n            const hours = [];\r\n            const currentHour = Number(moment().format('HH'));\r\n            for (let i = 0; i < 24; i++) {\r\n            let hour = currentHour + i;\r\n            if (hour > 23) {\r\n                hour -= 24; \r\n            }\r\n            hours.push(`${hour}:00`);\r\n            }\r\n            commit('UPDATE_HOURS', hours);\r\n        },\r\n        \r\n\r\n}}"],"mappings":";AAAA;;AAEA,eAAe;EACXA,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,YAAY,EAAE,YAAY;MAC1BC,KAAK,EAAE,CAAC;QAACC,IAAI,EAAE,iBAAiB;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAU,CAAC,EAAE;QAACH,IAAI,EAAE,kBAAkB;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAS,CAAC,EAAC;QAACH,IAAI,EAAE,kBAAkB;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;MACtOC,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,YAAY;QACnBC,YAAY,EAAE,KAAK;QACnBC,iBAAiB,EAAE,KAAK;QACxBR,KAAK,EAAE,CACH;UAACC,IAAI,EAAE,iBAAiB;UAAEC,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,eAAe;UAAEC,IAAI,EAAE;QAAU,CAAC,EACzE;UAACH,IAAI,EAAE,kBAAkB;UAAEC,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,eAAe;UAAEC,IAAI,EAAE;QAAS,CAAC,EACzE;UAACH,IAAI,EAAE,kBAAkB;UAAEC,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,eAAe;UAAEC,IAAI,EAAE;QAAQ,CAAC;MAGhF,CAAC,EACD;QACIE,KAAK,EAAE,YAAY;QACnBC,YAAY,EAAE,KAAK;QACnBC,iBAAiB,EAAE,KAAK;QACxBR,KAAK,EAAE,CACH;UAACC,IAAI,EAAE,iBAAiB;UAAEC,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,eAAe;UAAEC,IAAI,EAAE;QAAU,CAAC,EACzE;UAACH,IAAI,EAAE,kBAAkB;UAAEC,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,eAAe;UAAEC,IAAI,EAAE;QAAS,CAAC,EACzE;UAACH,IAAI,EAAE,kBAAkB;UAAEC,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE,eAAe;UAAEC,IAAI,EAAE;QAAQ,CAAC;MAEhF,CAAC;IAET,CAAC;EAEL,CAAC;EACDK,OAAO,EAAE;IAELC,kBAAkB,EAAEZ,KAAK,IAAI;MACzB,OAAOA,KAAK,CAACC,YAAY;IAC7B,CAAC;IACDY,cAAc,EAAEb,KAAK,IAAI;MACrB,OAAOA,KAAK,CAACO,QAAQ;IACzB;EACJ,CAAC;EACDO,SAAS,EAAE;IACP;IACA;IACA;EAAA,CACH;EACDC,OAAO,EAAE;IACLC,uBAAuBA,CAAE;MAAEC;IAAO,CAAC,EAAE;MACjC,MAAMC,KAAK,GAAG,EAAE;MAChB,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;MACjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC7B,IAAIC,IAAI,GAAGL,WAAW,GAAGI,CAAC;QAC1B,IAAIC,IAAI,GAAG,EAAE,EAAE;UACXA,IAAI,IAAI,EAAE;QACd;QACAN,KAAK,CAACO,IAAI,CAAE,GAAED,IAAK,KAAI,CAAC;MACxB;MACAP,MAAM,CAAC,cAAc,EAAEC,KAAK,CAAC;IACjC;EAGR;AAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}