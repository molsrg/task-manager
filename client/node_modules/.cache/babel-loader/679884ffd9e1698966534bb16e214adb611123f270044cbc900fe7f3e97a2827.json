{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '../assets/images/auth/logo.svg';\nimport _imports_1 from '../assets/images/auth/google.svg';\nimport _imports_2 from '../assets/images/auth/github.svg';\nimport _imports_3 from '../assets/images/auth/facebook.svg';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"section\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"section__item\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"section__logo\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"logo__img\",\n  src: _imports_0,\n  alt: \"logo\"\n}), /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"section__text logo__text\"\n}, \"Task Unity Tech\")])], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"section__item\"\n};\nconst _hoisted_5 = {\n  class: \"section__auth\"\n};\nconst _hoisted_6 = {\n  class: \"section__title\"\n};\nconst _hoisted_7 = {\n  class: \"section__item\"\n};\nconst _hoisted_8 = {\n  class: \"section__alert-forget\"\n};\nconst _hoisted_9 = {\n  id: \"blink1\",\n  class: \"section__alert\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"section__forget\",\n  href: \"#\"\n};\nconst _hoisted_11 = {\n  type: \"submit\",\n  class: \"section__button\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"section__text-or\\\"><span>или</span></div><div class=\\\"section__bt-container\\\"><!-- с регистарцией на гугле пока что проблемы --><a href=\\\"https://accounts.google.com/o/oauth2/auth?client_id=429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1&amp;redirect_uri=http://localhost:8080/waiting&amp;response_type=code&amp;scope=https://www.googleapis.com/auth/userinfo.profile&amp;state=123\\\"><img src=\\\"\" + _imports_1 + \"\\\"></a><!-- с регистрацией на гитхаб все ок, я создал компонент куда перенаправляется после запроса, лежит в этой же папке --><a href=\\\"https://github.com/login/oauth/authorize?client_id=47940374a073fa8e62aa&amp;redirect_uri=http://localhost:8080/waiting\\\"><img src=\\\"\" + _imports_2 + \"\\\"></a><!-- здесь я сделал регистрацию при помощи Яндекс ID, нужно будет только иконку заменить, результат возвращается как и в гите --><a href=\\\"https://oauth.yandex.ru/authorize?client_id=5b1b15fa24b542948bbd72ac320d6b9f&amp;redirect_uri=http://localhost:8080/waiting&amp;response_type=code\\\"><img src=\\\"\" + _imports_3 + \"\\\"></a></div>\", 2);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h3\", _hoisted_6, _toDisplayString($data.title), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.AuthOrReg && $options.AuthOrReg(...args)),\n    class: \"section__subtitle\"\n  }, _toDisplayString($data.subtitle), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"form\", {\n    action: \"\",\n    method: \"post\",\n    onSubmit: _cache[5] || (_cache[5] = (...args) => $options.authUser && $options.authUser(...args))\n  }, [this.title == 'Регистрация' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    class: \"section__input\",\n    type: \"text\",\n    placeholder: \"Имя пользователя\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.login = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.login]]) : _createCommentVNode(\"v-if\", true), _withDirectives(_createElementVNode(\"input\", {\n    class: \"section__input\",\n    type: \"email\",\n    placeholder: \"E-mail\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.mail = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.mail]]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"section__input\",\n    type: \"password\",\n    placeholder: \"Пароль\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.password = $event),\n    required: \"\",\n    minlength: \"8\",\n    maxlength: \"128\",\n    pattern: \"[0-9A-Za-z]+\",\n    title: \"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), this.title == 'Регистрация' ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    class: \"section__input\",\n    type: \"password\",\n    placeholder: \"Подтверждение пароля\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.confirm_password = $event),\n    required: \"\",\n    minlength: \"8\",\n    maxlength: \"128\",\n    pattern: \"[0-9A-Za-z]+\",\n    title: \"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\"\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.confirm_password]]) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(this?.errors[0]), 1 /* TEXT */), this.title == 'Вход' ? (_openBlock(), _createElementBlock(\"a\", _hoisted_10, \"Забыли пароль?\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"button\", _hoisted_11, _toDisplayString($data.auth), 1 /* TEXT */), _hoisted_12], 32 /* HYDRATE_EVENTS */)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","_createElementVNode","class","src","alt","id","href","type","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","$data","title","onClick","_cache","args","$options","AuthOrReg","subtitle","_hoisted_7","action","method","onSubmit","authUser","_createElementBlock","placeholder","required","login","$event","mail","password","minlength","maxlength","pattern","confirm_password","_hoisted_8","_hoisted_9","errors","_hoisted_10","_hoisted_11","auth","_hoisted_12"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AuthorizationClient.vue"],"sourcesContent":["<template>\r\n  <div></div>\r\n  <div class=\"section\">\r\n    <div class=\"section__item\">\r\n      <div class=\"section__logo\">\r\n        <img class=\"logo__img\" src=\"../assets/images/auth/logo.svg\" alt=\"logo\">\r\n        <h3 class=\"section__text logo__text\">Task Unity Tech</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"section__item\">\r\n      <div class=\"section__auth\">\r\n        <h3 class=\"section__title\">{{ title }}</h3>\r\n        <button @click=\"AuthOrReg\" class=\"section__subtitle\">{{ subtitle }}</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"section__item\">\r\n\r\n      <form action=\"\" method=\"post\" @submit=\"authUser\">\r\n          <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"text\" placeholder=\"Имя пользователя\" required v-model=\"login\">\r\n          <input class=\"section__input\" type=\"email\" placeholder=\"E-mail\" v-model=\"mail\" required>\r\n          <input class=\"section__input\" type=\"password\" placeholder=\"Пароль\" v-model=\"password\" required minlength=\"8\" maxlength=\"128\" pattern=\"[0-9A-Za-z]+\" title=\"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\">\r\n          <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"password\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\" required minlength=\"8\" maxlength=\"128\" pattern=\"[0-9A-Za-z]+\" title=\"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\">\r\n\r\n          <div class=\"section__alert-forget\">\r\n            <span id=\"blink1\" class=\"section__alert\">{{this?.errors[0]}} </span>\r\n            <a v-if=\"this.title == 'Вход'\" class=\"section__forget\" href=\"#\">Забыли пароль?</a>\r\n          </div>  \r\n\r\n          <button type=\"submit\" class=\"section__button\">{{ auth }}</button>\r\n          <div class=\"section__text-or\">\r\n            <span>или</span>\r\n          </div>\r\n\r\n          <div class=\"section__bt-container\">\r\n            <!-- с регистарцией на гугле пока что проблемы -->\r\n            <a href=\"https://accounts.google.com/o/oauth2/auth?client_id=429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1&redirect_uri=http://localhost:8080/waiting&response_type=code&scope=https://www.googleapis.com/auth/userinfo.profile&state=123\"><img src=\"../assets/images/auth/google.svg\"></a>\r\n\r\n            <!-- с регистрацией на гитхаб все ок, я создал компонент куда перенаправляется после запроса, лежит в этой же папке -->\r\n            <a href=\"https://github.com/login/oauth/authorize?client_id=47940374a073fa8e62aa&redirect_uri=http://localhost:8080/waiting\"> <img src=\"../assets/images/auth/github.svg\"></a>\r\n\r\n            <!-- здесь я сделал регистрацию при помощи Яндекс ID, нужно будет только иконку заменить, результат возвращается как и в гите -->\r\n            <a href=\"https://oauth.yandex.ru/authorize?client_id=5b1b15fa24b542948bbd72ac320d6b9f&redirect_uri=http://localhost:8080/waiting&response_type=code\"> <img src=\"../assets/images/auth/facebook.svg\"></a>\r\n          </div>\r\n\r\n      </form>\r\n    </div>\r\n    \r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data(){\r\n    return { \r\n      login: '', \r\n      mail: '', \r\n      password: '', \r\n      confirm_password: '', \r\n\r\n\r\n      title: 'Регистрация', \r\n      subtitle: 'Вход', \r\n      auth: 'Зарегистрироваться',\r\n      errors: [],\r\n\r\n    }\r\n  }, \r\n\r\n  methods: {\r\n\r\n    authUser(event) {\r\n      event.preventDefault();\r\n      this.validForm()\r\n\r\n      if(this.errors.length == 0){\r\n        let data = {}\r\n        let type = ''\r\n\r\n        if(this.auth == 'Зарегистрироваться'){\r\n          data = {\r\n          username: this.login,\r\n          email: this.mail,\r\n          password: this.password,\r\n            } \r\n          \r\n          type = 'registration'\r\n        }\r\n        else if (this.auth == 'Войти') {\r\n          data = {\r\n            email: this.mail,\r\n            password: this.password,\r\n          }\r\n\r\n          type = 'login'\r\n        }\r\n        axios.post(`http://localhost:5000/auth/${type}`, data)\r\n          .then((response) => {\r\n              this.login = ''\r\n              this.mail = '', \r\n              this.password = '', \r\n              this.confirm_password = ''\r\n\r\n              alert(\"Все прошло успешно, можете входить в систему\")\r\n              if(type == 'login'){\r\n                const token = response.data.AccessToken\r\n                localStorage.setItem('AccessToken', token); // write\r\n                // console.log(localStorage.getItem('AccessToken')); // read\r\n\r\n                window.location.href = \"http://localhost:8080/home\"\r\n              }\r\n              \r\n          })\r\n\r\n          .catch((error) => {\r\n            this.errors = [error.response.data?.errors]\r\n            this.errors = [error.response.data?.message]\r\n\r\n            if(error.response.data?.message == \"Почтовый адрес уже был зарегистрирован\"){\r\n              this.mail = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Пользователь с таким именем уже существует\"){\r\n              this.login = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Введен неверный пароль\"){\r\n              this.password = \"\"\r\n            }\r\n\r\n          })   \r\n      }\r\n      \r\n    },     \r\n    validForm(){\r\n      const regex = /^(?=.*[A-Za-z])([A-Za-z0-9]+)$/;\r\n      this.errors = []\r\n      if(this.title == 'Регистрация'){\r\n        if(this.password !== this.confirm_password){\r\n                this.errors.push(\"Пароли не совпадают\")\r\n                this.password = ''\r\n                this.confirm_password = ''\r\n              }\r\n      }\r\n      \r\n      if(!regex.test(this.password)){\r\n        this.errors.push(\"Пароль не прошел валидацию\")\r\n        this.password = ''\r\n        this.confirm_password = ''\r\n      }\r\n    },\r\n\r\n\r\n\r\n    AuthOrReg(){\r\n\r\n      this.errors = []\r\n      this.login = ''\r\n      this.mail = '', \r\n      this.password = '', \r\n      this.confirm_password = ''\r\n\r\n      if(this.subtitle == \"Вход\"){\r\n        this.title = \"Вход\"\r\n        this.subtitle = \"Регистрация\"\r\n        this.auth = \"Войти\"\r\n\r\n      }\r\n\r\n      else if(this.subtitle == \"Регистрация\"){\r\n        this.title = \"Регистрация\"\r\n        this.subtitle = \"Вход\"\r\n        this.auth = \"Зарегистрироваться\"\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}