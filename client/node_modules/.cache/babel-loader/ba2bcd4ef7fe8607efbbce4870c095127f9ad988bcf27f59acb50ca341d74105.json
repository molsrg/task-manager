{"ast":null,"code":"import axios from 'axios';\nimport { mapActions, mapMutations } from \"vuex\";\nexport default {\n  data() {\n    return {\n      taskName: '',\n      taskInfo: '',\n      taskType: '',\n      taskStartTime: '',\n      taskEndTime: ''\n    };\n  },\n  methods: {\n    ...mapActions(['ADD_TASK']),\n    ...mapMutations(['UPDATE_IS_ADDED_TASK']),\n    addTask(event) {\n      event.preventDefault();\n      const task = {\n        name: this.taskName,\n        info: this.taskInfo,\n        type: this.taskType,\n        startTime: this.taskStartTime,\n        endTime: this.taskEndTime\n      };\n      axios({\n        method: \"POST\",\n        url: \"http://localhost:5000/task/createTask\",\n        headers: {\n          authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`\n        },\n        data: {\n          name: task.name,\n          type: task.type,\n          text: task.info,\n          status: \"Done\",\n          startTime: task.startTime,\n          endTime: task.endTime\n        }\n      }).then(res => {\n        console.log(res);\n        this.UPDATE_IS_ADDED_TASK();\n      }).catch(err => {\n        console.log(err);\n        alert(\"Создание задачи не удалось\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","mapActions","mapMutations","data","taskName","taskInfo","taskType","taskStartTime","taskEndTime","methods","addTask","event","preventDefault","task","name","info","type","startTime","endTime","method","url","headers","authorization","localStorage","getItem","text","status","then","res","console","log","UPDATE_IS_ADDED_TASK","catch","err","alert"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AddTask.vue"],"sourcesContent":["<template>\r\n    <form action=\"\" type=\"post\" @submit=\"addTask\">\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"Название задачи\"\r\n        required\r\n        v-model=\"taskName\"\r\n        />\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"Описание задачи\"\r\n        required\r\n        v-model=\"taskInfo\"\r\n        />\r\n        <label>Выберите тип задачи</label>\r\n        <div>\r\n            \r\n        <input type=\"radio\" id=\"taskType1\" v-model=\"taskType\" value=\"Personal\" />\r\n        <label for=\"taskType1\">Личное</label>\r\n\r\n        <input type=\"radio\" id=\"taskType2\" v-model=\"taskType\" value=\"Working\" />\r\n        <label for=\"taskType2\">Рабочее</label>\r\n\r\n        <input type=\"radio\" id=\"taskType3\" v-model=\"taskType\" value=\"Optional\" />\r\n        <label for=\"taskType3\">Нераспределённый</label>\r\n        </div>\r\n\r\n        <label for=\"start-time\">Выберите время и дату начала задачи</label>\r\n        <input\r\n        id=\"start-time\"\r\n        type=\"datetime-local\"\r\n        placeholder=\"Начало задачи\"\r\n        required\r\n        v-model=\"taskStartTime\"\r\n        />\r\n        <label for=\"end-time\">Выберите время и дату окончания задачи</label>\r\n        <input\r\n        type=\"datetime-local\"\r\n        id=\"end-time\"\r\n        placeholder=\"Окончание задачи\"\r\n        required\r\n        v-model=\"taskEndTime\"\r\n        />\r\n\r\n        <button type=\"submit\">Добавить задачу</button>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { mapActions, mapMutations } from \"vuex\";\r\nexport default {\r\n    data(){\r\n        return {\r\n            taskName: '',\r\n            taskInfo: '', \r\n            taskType: '',\r\n            taskStartTime: '',\r\n            taskEndTime: ''\r\n        }\r\n    }, \r\n    methods: {\r\n        ...mapActions(['ADD_TASK']), \r\n        ...mapMutations(['UPDATE_IS_ADDED_TASK']),\r\n        addTask(event) {\r\n            event.preventDefault();\r\n            const task = {\r\n                name: this.taskName,\r\n                info: this.taskInfo,\r\n                type: this.taskType,\r\n                startTime: this.taskStartTime,\r\n                endTime: this.taskEndTime,\r\n            }\r\n\r\n            axios({\r\n                method: \"POST\",\r\n                url: \"http://localhost:5000/task/createTask\",\r\n                headers: {\r\n                    authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`,\r\n                },\r\n                data: {\r\n                    name: task.name,\r\n                    type: task.type,\r\n                    text: task.info,\r\n                    status: \"Done\",\r\n                    startTime: task.startTime,\r\n                    endTime: task.endTime,\r\n                },\r\n                })\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    this.UPDATE_IS_ADDED_TASK()\r\n\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    alert(\"Создание задачи не удалось\");\r\n                });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для модального окна */\r\n.modal {\r\n  position: fixed;\r\n  top: 25%;\r\n  left: 25%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5); /* Затемненный фон */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000; /* Выше других элементов на странице */\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  width: 400px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* Стили для формы и её элементов */\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"datetime-local\"] {\r\n  margin: 5px 0;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  font-size: 16px;\r\n}\r\n\r\ninput[type=\"radio\"] {\r\n  margin-right: 5px;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Стили для радиокнопок */\r\ninput[type=\"radio\"] + label {\r\n    font-weight: normal;\r\n    cursor: pointer;\r\n}\r\n\r\n/* Стили для кнопок и других элементов формы (если есть) */\r\nbutton {\r\n  margin-top: 10px;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 3px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"AAiDA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,UAAU,EAAEC,YAAW,QAAS,MAAM;AAC/C,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,GAAGR,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3B,GAAGC,YAAY,CAAC,CAAC,sBAAsB,CAAC,CAAC;IACzCQ,OAAOA,CAACC,KAAK,EAAE;MACXA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB,MAAMC,IAAG,GAAI;QACTC,IAAI,EAAE,IAAI,CAACV,QAAQ;QACnBW,IAAI,EAAE,IAAI,CAACV,QAAQ;QACnBW,IAAI,EAAE,IAAI,CAACV,QAAQ;QACnBW,SAAS,EAAE,IAAI,CAACV,aAAa;QAC7BW,OAAO,EAAE,IAAI,CAACV;MAClB;MAEAR,KAAK,CAAC;QACFmB,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,uCAAuC;QAC5CC,OAAO,EAAE;UACLC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QACjE,CAAC;QACDrB,IAAI,EAAE;UACFW,IAAI,EAAED,IAAI,CAACC,IAAI;UACfE,IAAI,EAAEH,IAAI,CAACG,IAAI;UACfS,IAAI,EAAEZ,IAAI,CAACE,IAAI;UACfW,MAAM,EAAE,MAAM;UACdT,SAAS,EAAEJ,IAAI,CAACI,SAAS;UACzBC,OAAO,EAAEL,IAAI,CAACK;QAClB;MACA,CAAC,EACAS,IAAI,CAAEC,GAAG,IAAK;QACXC,OAAO,CAACC,GAAG,CAACF,GAAG;QACf,IAAI,CAACG,oBAAoB,CAAC;MAE9B,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACZJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;QAChBC,KAAK,CAAC,4BAA4B,CAAC;MACvC,CAAC,CAAC;IACV;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}