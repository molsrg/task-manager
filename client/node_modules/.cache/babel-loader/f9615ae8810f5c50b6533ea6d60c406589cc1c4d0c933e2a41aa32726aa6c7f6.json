{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"taskboard\"\n};\nconst _hoisted_2 = {\n  class: \"time\"\n};\nconst _hoisted_3 = {\n  class: \"time_container\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"task_name\"\n};\nconst _hoisted_6 = {\n  class: \"task_time\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.CURRENT_HOURS, hour => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      class: \"time_name\",\n      key: hour\n    }, _toDisplayString(hour), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.USER_TASKS_IN_CALENDAR, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"task\",\n      key: task.id,\n      style: _normalizeStyle($options.taskStyle(task)),\n      onClick: $event => _ctx.showTask(task)\n    }, [_createElementVNode(\"h5\", _hoisted_5, _toDisplayString(task.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($options.formatTime(task.startTime)) + \" - \" + _toDisplayString($options.formatTime(task.endTime)), 1 /* TEXT */), _createCommentVNode(\" <button @click=\\\"isTaskOverflowed\\\">Выбрать</button> \")], 12 /* STYLE, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","_ctx","CURRENT_HOURS","hour","key","USER_TASKS_IN_CALENDAR","task","id","style","_normalizeStyle","$options","taskStyle","onClick","$event","showTask","_hoisted_5","_toDisplayString","name","_hoisted_6","formatTime","startTime","endTime","_createCommentVNode"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\CALENDAR\\CalendarApp.vue"],"sourcesContent":["<template>\r\n    <div class=\"taskboard\">\r\n        <div class=\"time\">\r\n            <div class=\"time_container\" >\r\n                <span class=\"time_name\" v-for=\"hour in CURRENT_HOURS\" :key=\"hour\" >{{ hour }}</span>\r\n                \r\n            </div>\r\n        </div>\r\n        <div class=\"task\" v-for=\"task in USER_TASKS_IN_CALENDAR\" :key=\"task.id\" :style=\"taskStyle(task)\" @click=\"showTask(task)\">  \r\n            <h5 class=\"task_name\">{{ task.name }}</h5>\r\n            <span class=\"task_time\">{{ formatTime(task.startTime) }} - {{ formatTime(task.endTime) }}</span>\r\n            <!-- <button @click=\"isTaskOverflowed\">Выбрать</button> -->\r\n        </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport Task from '../../../store/modules/Task/Task'\r\n\r\nimport { mapGetters} from 'vuex';\r\nmoment.locale(\"ru\");\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapGetters(['CURRENT_HOURS', 'USER_TASKS_IN_CALENDAR', 'CURRENT_WEEK']), \r\n        \r\n    },\r\n    methods: {\r\n        // Функция для вычисления стиля задачи \r\n        taskStyle(task) {\r\n            const heightInPixels = Task.calculateTaskLengthInPixels(task);\r\n            // console.log(`${task.name}, длина задачи - ${heightInPixels}`)\r\n            const colorTask = Task.calculateTaskColor(task)\r\n            const leftPosition = Task.calculateLeftPosition(task, this.CURRENT_WEEK)\r\n            const startPosition = Task.calculateTaskStartPosition(task)\r\n\r\n            return {\r\n                height: heightInPixels + 'px', \r\n                'background-color': colorTask, \r\n                top: startPosition + 'px',\r\n                left: leftPosition + 'px', \r\n            }\r\n        },\r\n\r\n        // приводит дату к нужному формату в отображении задачи на календаре\r\n        formatTime(dateTime){\r\n            console.log(dateTime)\r\n\r\n            \r\n            // const date = new Date(dateTime)\r\n            // const res = [date.getHours(), date.getMinutes()].map(function (x) {\r\n            //     return x < 10 ? \"0\" + x : x\r\n            // }).join(\":\")\r\n\r\n            // return res\r\n\r\n        },\r\n    }\r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n.taskboard {\r\n    overflow-y: auto;\r\n    max-height: calc(100vh - 280px);\r\n    width: 1340px;\r\n    position: relative; /* Добавьте это */\r\n}\r\n\r\n.time {\r\n    width: 38px;\r\n    margin-right: 30px;\r\n    margin-bottom: 65px;\r\n}\r\n\r\n.time_container{\r\n    display: flex;\r\n    gap: 65px;\r\n    flex-direction: column;\r\n}\r\n\r\n.time_container span{\r\n    position: relative;\r\n}\r\n\r\n.time_container span:after{\r\n    display: block;\r\n    width:1266px;\r\n    content: '';\r\n    position: absolute;\r\n    border-bottom: 1px solid #000;\r\n    top:1%;\r\n    left: 56px; \r\n}\r\n.time_name {\r\n    font-family: Poppins;\r\n    font-size: 16px;\r\n    font-weight: 300;\r\n    line-height: 24px;\r\n}\r\n\r\n\r\n.task{\r\n    font-family: Raleway;\r\n    font-size: 14px;\r\n\r\n    width: 173px;\r\n    border-radius: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    opacity: 1;\r\n    transform: translateY(20px); /* Сдвиг вниз на 20px, вы можете настроить его по своему усмотрению */\r\n    transition: opacity 0.5s ease, transform 0.5s ease;\r\n\r\n    overflow: hidden;\r\n    \r\n}\r\n\r\n.task_name {\r\n    font-weight: 600;\r\n    color:#0C3C44;\r\n    padding: 4px 6px;\r\n    word-wrap: break-word;\r\n}\r\n.task_time {\r\n    font-weight: 400;\r\n    color: #296B76;\r\n    padding: 0px 6px;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAM;;EACRA,KAAK,EAAC;AAAgB;;;EAMvBA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAW;;uBAT/BC,mBAAA,CAYE,OAZFC,UAYE,GAXEC,mBAAA,CAKM,OALNC,UAKM,GAJFD,mBAAA,CAGM,OAHNE,UAGM,I,kBAFFJ,mBAAA,CAAoFK,SAAA,QAAAC,WAAA,CAA7CC,IAAA,CAAAC,aAAa,EAArBC,IAAI;yBAAnCT,mBAAA,CAAoF;MAA9ED,KAAK,EAAC,WAAW;MAAgCW,GAAG,EAAED;wBAAUA,IAAI;yDAIlFT,mBAAA,CAIMK,SAAA,QAAAC,WAAA,CAJ2BC,IAAA,CAAAI,sBAAsB,EAA9BC,IAAI;yBAA7BZ,mBAAA,CAIM;MAJDD,KAAK,EAAC,MAAM;MAAyCW,GAAG,EAAEE,IAAI,CAACC,EAAE;MAAGC,KAAK,EAAAC,eAAA,CAAEC,QAAA,CAAAC,SAAS,CAACL,IAAI;MAAIM,OAAK,EAAAC,MAAA,IAAEZ,IAAA,CAAAa,QAAQ,CAACR,IAAI;QAClHV,mBAAA,CAA0C,MAA1CmB,UAA0C,EAAAC,gBAAA,CAAjBV,IAAI,CAACW,IAAI,kBAClCrB,mBAAA,CAAgG,QAAhGsB,UAAgG,EAAAF,gBAAA,CAArEN,QAAA,CAAAS,UAAU,CAACb,IAAI,CAACc,SAAS,KAAI,KAAG,GAAAJ,gBAAA,CAAGN,QAAA,CAAAS,UAAU,CAACb,IAAI,CAACe,OAAO,mBACrFC,mBAAA,0DAA2D,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}