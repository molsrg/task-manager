{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      login: '',\n      mail: '',\n      password: '',\n      confirm_password: '',\n      title: 'Регистрация',\n      subtitle: 'Вход',\n      auth: 'Зарегистрироваться',\n      errors: []\n    };\n  },\n  methods: {\n    async authFromGithub() {\n      console.log(window.location.href);\n      let promise = new Promise(resolve => {\n        window.location.href = `https://github.com/login/oauth/authorize?client_id=11408a517eebc5ff6eb3&redirect_uri=http://localhost:8080/code`;\n        resolve();\n      });\n      const currentUrl = document.location.search;\n      console.log(currentUrl);\n    },\n    authUser() {\n      if (this.password !== this.confirm_password) {\n        this.errors.push(\"Пароли не совпадают\");\n        return;\n      }\n      let data = {};\n      let type = '';\n      if (this.auth == 'Зарегистрироваться') {\n        data = {\n          username: this.login,\n          email: this.mail,\n          password: this.password\n        };\n        type = 'registration';\n      } else if (this.auth == 'Войти') {\n        data = {\n          email: this.mail,\n          password: this.password\n        };\n        type = 'login';\n      }\n      axios.post(`http://localhost:5000/auth/${type}`, data).then(response => {\n        this.login = '';\n        this.mail = '', this.password = '', this.confirm_password = '';\n        console.log(response);\n      }).catch(error => {\n        this.errors = error.response.data?.errors;\n        // this.errors = error.response.data?.message\n        // console.log(error)\n        // console.log(this.errors)\n      });\n    },\n\n    AuthOrReg() {\n      this.errors = [];\n      this.login = '';\n      this.mail = '', this.password = '', this.confirm_password = '';\n      if (this.subtitle == \"Вход\") {\n        this.title = \"Вход\";\n        this.subtitle = \"Регистрация\";\n        this.auth = \"Войти\";\n      } else if (this.subtitle == \"Регистрация\") {\n        this.title = \"Регистрация\";\n        this.subtitle = \"Вход\";\n        this.auth = \"Зарегистрироваться\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","login","mail","password","confirm_password","title","subtitle","auth","errors","methods","authFromGithub","console","log","window","location","href","promise","Promise","resolve","currentUrl","document","search","authUser","push","type","username","email","post","then","response","catch","error","AuthOrReg"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Auth\\AuthorizationClient.vue"],"sourcesContent":["<template>\r\n  <div class=\"section\">\r\n    <div class=\"section__item\">\r\n      <div class=\"section__logo\">\r\n        <img class=\"logo\" src=\"../../assets/images/auth/logo.svg\" alt=\"logo\">\r\n        <h3 class=\"section__text\">Task Unity Tech</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"section__item\">\r\n      <div class=\"section__auth\">\r\n        <h3 class=\"section__title\">{{ title }}</h3>\r\n        <button @click=\"AuthOrReg\" class=\"section__subtitle\">{{ subtitle }}</button>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"section__item\">\r\n      <form action=\"\" method=\"post\">\r\n        <transition name=\"input\">\r\n          <input v-if=\"this.title == 'Регистрация' \" class=\"section__input\" type=\"text\" placeholder=\"Имя пользователя\" v-model=\"login\">\r\n        </transition>  \r\n       \r\n        <input class=\"section__input\" type=\"email\" placeholder=\"E-mail\" v-model=\"mail\">\r\n        <input class=\"section__input\" type=\"password\" placeholder=\"Пароль\" v-model=\"password\">\r\n\r\n        <transition name=\"input\">\r\n          <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"password\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\">\r\n        </transition> \r\n        <div class=\"section__alert-forget\">\r\n          <span id=\"blink1\" class=\"section__alert\">{{this?.errors[0]}} </span>\r\n        <a v-if=\"this.title == 'Вход'\" class=\"section__forget\" href=\"#\">Забыли пароль?</a>\r\n        </div>  \r\n\r\n      </form>\r\n    </div>\r\n    <div class=\"section__item\">\r\n      <button type=\"submit\" class=\"section__button\" @click=\"authUser\">{{ auth }}</button>\r\n      <div class=\"section__text-or\">\r\n        <span>или</span>\r\n      </div>\r\n\r\n      <div class=\"section__bt-container\">\r\n        <a href=\"#\"><img src=\"../../assets/images/auth/google.svg\"></a>\r\n\r\n\r\n          <button @click=\"authFromGithub\"><img src=\"../../assets/images/auth/github.svg\"></button>\r\n\r\n\r\n        \r\n\r\n        <a href=\"#\"> <img src=\"../../assets/images/auth/facebook.svg\"></a>\r\n      </div>\r\n\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data(){\r\n    return { \r\n      login: '', \r\n      mail: '', \r\n      password: '', \r\n      confirm_password: '', \r\n\r\n\r\n      title: 'Регистрация', \r\n      subtitle: 'Вход', \r\n      auth: 'Зарегистрироваться',\r\n      errors: [],\r\n    }\r\n  }, \r\n\r\n  methods: {\r\n\r\n\r\n    async authFromGithub() {\r\n      \r\n\r\n\r\n      console.log(window.location.href)\r\n\r\n      let promise = new Promise((resolve) => {\r\n        window.location.href = `https://github.com/login/oauth/authorize?client_id=11408a517eebc5ff6eb3&redirect_uri=http://localhost:8080/code`\r\n\r\n        resolve();\r\n        })\r\n\r\n\r\n      \r\n      const currentUrl = document.location.search;\r\n      console.log(currentUrl);\r\n      },\r\n\r\n    authUser() {\r\n\r\n      if(this.password !== this.confirm_password){\r\n        this.errors.push(\"Пароли не совпадают\")\r\n        return \r\n      }\r\n\r\n      let data = {}\r\n      let type = ''\r\n      if(this.auth == 'Зарегистрироваться'){\r\n        data = {\r\n        username: this.login,\r\n        email: this.mail,\r\n        password: this.password,\r\n          } \r\n        \r\n        type = 'registration'\r\n      }\r\n      else if (this.auth == 'Войти') {\r\n        data = {\r\n          email: this.mail,\r\n          password: this.password,\r\n        }\r\n\r\n        type = 'login'\r\n      }\r\n\r\n\r\n      axios.post(`http://localhost:5000/auth/${type}`, data)\r\n        .then((response) => {\r\n            this.login = ''\r\n            this.mail = '', \r\n            this.password = '', \r\n            this.confirm_password = ''\r\n\r\n            \r\n            console.log(response)\r\n        })\r\n\r\n        .catch((error) => {\r\n          this.errors = error.response.data?.errors\r\n          // this.errors = error.response.data?.message\r\n          // console.log(error)\r\n          // console.log(this.errors)\r\n        })   \r\n    },     \r\n\r\n    AuthOrReg(){\r\n\r\n      this.errors = []\r\n      this.login = ''\r\n      this.mail = '', \r\n      this.password = '', \r\n      this.confirm_password = ''\r\n\r\n      if(this.subtitle == \"Вход\"){\r\n        this.title = \"Вход\"\r\n        this.subtitle = \"Регистрация\"\r\n        this.auth = \"Войти\"\r\n\r\n      }\r\n\r\n      else if(this.subtitle == \"Регистрация\"){\r\n        this.title = \"Регистрация\"\r\n        this.subtitle = \"Вход\"\r\n        this.auth = \"Зарегистрироваться\"\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n\r\n/* .input-enter-active, .input-leave-active {\r\n  transition: opacity 500ms;\r\n}\r\n\r\n.input-enter, .input-leave-to {\r\n  opacity: 0;\r\n} */\r\n\r\n\r\n\r\n/* .section__subtitle:active  .section__input{\r\n\r\n}\r\n */\r\n\r\n/* \r\n\r\n.section__auth:target  .section__title\r\n {     transform: translate(80px,0);\r\n\r\n\r\n }  \r\n\r\n .section__auth:active .section__subtitle {\r\n    transform: translate(-250px,0);\r\n}  \r\n */\r\n\r\n</style>"],"mappings":";AAyDA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,EAAE;MAGpBC,KAAK,EAAE,aAAa;MACpBC,QAAQ,EAAE,MAAM;MAChBC,IAAI,EAAE,oBAAoB;MAC1BC,MAAM,EAAE;IACV;EACF,CAAC;EAEDC,OAAO,EAAE;IAGP,MAAMC,cAAcA,CAAA,EAAG;MAIrBC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI;MAEhC,IAAIC,OAAM,GAAI,IAAIC,OAAO,CAAEC,OAAO,IAAK;QACrCL,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAK,iHAA+G;QAEvIG,OAAO,CAAC,CAAC;MACT,CAAC;MAIH,MAAMC,UAAS,GAAIC,QAAQ,CAACN,QAAQ,CAACO,MAAM;MAC3CV,OAAO,CAACC,GAAG,CAACO,UAAU,CAAC;IACvB,CAAC;IAEHG,QAAQA,CAAA,EAAG;MAET,IAAG,IAAI,CAACnB,QAAO,KAAM,IAAI,CAACC,gBAAgB,EAAC;QACzC,IAAI,CAACI,MAAM,CAACe,IAAI,CAAC,qBAAqB;QACtC;MACF;MAEA,IAAIvB,IAAG,GAAI,CAAC;MACZ,IAAIwB,IAAG,GAAI,EAAC;MACZ,IAAG,IAAI,CAACjB,IAAG,IAAK,oBAAoB,EAAC;QACnCP,IAAG,GAAI;UACPyB,QAAQ,EAAE,IAAI,CAACxB,KAAK;UACpByB,KAAK,EAAE,IAAI,CAACxB,IAAI;UAChBC,QAAQ,EAAE,IAAI,CAACA;QACb;QAEFqB,IAAG,GAAI,cAAa;MACtB,OACK,IAAI,IAAI,CAACjB,IAAG,IAAK,OAAO,EAAE;QAC7BP,IAAG,GAAI;UACL0B,KAAK,EAAE,IAAI,CAACxB,IAAI;UAChBC,QAAQ,EAAE,IAAI,CAACA;QACjB;QAEAqB,IAAG,GAAI,OAAM;MACf;MAGAzB,KAAK,CAAC4B,IAAI,CAAE,8BAA6BH,IAAK,EAAC,EAAExB,IAAI,EAClD4B,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAI,CAAC5B,KAAI,GAAI,EAAC;QACd,IAAI,CAACC,IAAG,GAAI,EAAE,EACd,IAAI,CAACC,QAAO,GAAI,EAAE,EAClB,IAAI,CAACC,gBAAe,GAAI,EAAC;QAGzBO,OAAO,CAACC,GAAG,CAACiB,QAAQ;MACxB,CAAC,EAEAC,KAAK,CAAEC,KAAK,IAAK;QAChB,IAAI,CAACvB,MAAK,GAAIuB,KAAK,CAACF,QAAQ,CAAC7B,IAAI,EAAEQ,MAAK;QACxC;QACA;QACA;MACF,CAAC;IACL,CAAC;;IAEDwB,SAASA,CAAA,EAAE;MAET,IAAI,CAACxB,MAAK,GAAI,EAAC;MACf,IAAI,CAACP,KAAI,GAAI,EAAC;MACd,IAAI,CAACC,IAAG,GAAI,EAAE,EACd,IAAI,CAACC,QAAO,GAAI,EAAE,EAClB,IAAI,CAACC,gBAAe,GAAI,EAAC;MAEzB,IAAG,IAAI,CAACE,QAAO,IAAK,MAAM,EAAC;QACzB,IAAI,CAACD,KAAI,GAAI,MAAK;QAClB,IAAI,CAACC,QAAO,GAAI,aAAY;QAC5B,IAAI,CAACC,IAAG,GAAI,OAAM;MAEpB,OAEK,IAAG,IAAI,CAACD,QAAO,IAAK,aAAa,EAAC;QACrC,IAAI,CAACD,KAAI,GAAI,aAAY;QACzB,IAAI,CAACC,QAAO,GAAI,MAAK;QACrB,IAAI,CAACC,IAAG,GAAI,oBAAmB;MACjC;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}