{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelRadio as _vModelRadio, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-109c22c0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"Выберите тип задачи\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"taskType1\"\n}, \"Личное\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"taskType2\"\n}, \"Рабочее\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"taskType3\"\n}, \"Нераспределённый\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"date\"\n}, \"Выберите дату задачи\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"start-time\"\n}, \"Выберите время начала задачи\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"end-time\"\n}, \"Выберите время окончания задачи\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Добавить задачу\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    action: \"\",\n    type: \"post\",\n    onSubmit: _cache[9] || (_cache[9] = (...args) => $options.addTask && $options.addTask(...args)),\n    class: \"form-task\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Название задачи\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.taskName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskName]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Описание задачи\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.taskInfo = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskInfo]]), _hoisted_1, _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"taskType1\",\n    name: \"taskType\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.taskType = $event),\n    value: \"Personal\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.taskType]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"taskType2\",\n    name: \"taskType\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.taskType = $event),\n    value: \"Working\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.taskType]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"taskType3\",\n    name: \"taskType\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.taskType = $event),\n    value: \"Optional\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, $data.taskType]]), _hoisted_4]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    id: \"date\",\n    type: \"text\",\n    placeholder: \"Начало задачи\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.taskStartDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskStartDate]]), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"start-time\",\n    placeholder: \"Начало задачи\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.taskStartTime = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskStartTime]]), _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"end-time\",\n    placeholder: \"Окончание задачи\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.taskEndTime = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskEndTime]]), $data.errors.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString($data.errors[0]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _hoisted_9, _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = $event => _ctx.UPDATE_IS_ADDED_TASK())\n  }, \"Выйти из создания\")], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createElementBlock","action","onSubmit","_cache","args","$options","addTask","class","placeholder","required","$data","taskName","$event","taskInfo","_hoisted_1","id","name","taskType","value","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","taskStartDate","_hoisted_6","taskStartTime","_hoisted_7","taskEndTime","errors","length","_hoisted_8","_toDisplayString","_hoisted_9","onClick","_ctx","UPDATE_IS_ADDED_TASK"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AddSomething\\AddTask.vue"],"sourcesContent":["<template>\r\n    <form action=\"\" type=\"post\" @submit=\"addTask\" class=\"form-task\">\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"Название задачи\"\r\n        required\r\n        v-model=\"taskName\"\r\n        />\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"Описание задачи\"\r\n        required\r\n        v-model=\"taskInfo\"\r\n        />\r\n        <label>Выберите тип задачи</label>\r\n            <div>\r\n                <input type=\"radio\" id=\"taskType1\" name=\"taskType\" v-model=\"taskType\" value=\"Personal\" required />\r\n                <label for=\"taskType1\">Личное</label>\r\n\r\n                <input type=\"radio\" id=\"taskType2\" name=\"taskType\" v-model=\"taskType\" value=\"Working\" required />\r\n                <label for=\"taskType2\">Рабочее</label>\r\n\r\n                <input type=\"radio\" id=\"taskType3\" name=\"taskType\" v-model=\"taskType\" value=\"Optional\" required />\r\n                <label for=\"taskType3\">Нераспределённый</label>\r\n            </div>\r\n\r\n\r\n        <label for=\"date\">Выберите дату задачи</label>\r\n        <input\r\n        id=\"date\"\r\n        type=\"text\"\r\n        placeholder=\"Начало задачи\"\r\n        required\r\n        v-model=\"taskStartDate\"\r\n        />\r\n\r\n        <label for=\"start-time\">Выберите время начала задачи</label>\r\n        <input\r\n        type=\"text\"\r\n        id=\"start-time\"\r\n        placeholder=\"Начало задачи\"\r\n        required\r\n        v-model=\"taskStartTime\"\r\n        />\r\n\r\n        <label for=\"end-time\">Выберите время окончания задачи</label>\r\n        <input\r\n        type=\"text\"\r\n        id=\"end-time\"\r\n        placeholder=\"Окончание задачи\"\r\n        required\r\n        v-model=\"taskEndTime\"\r\n        />\r\n            \r\n        <div v-if=\"errors.length > 0\">{{ errors[0] }}</div>\r\n        <button type=\"submit\">Добавить задачу</button>\r\n        <button @click=\"UPDATE_IS_ADDED_TASK()\">Выйти из создания</button>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { mapActions, mapMutations, mapGetters } from \"vuex\";\r\nimport 'air-datepicker/air-datepicker.css';\r\nimport AirDatepicker from 'air-datepicker';\r\nexport default {\r\n    mounted() {\r\n        this.formattedDate = this.USER_REGISTRATIONS.split('-').reverse().join('-') + 'T00:00'\r\n        new AirDatepicker('#date',{\r\n            position: 'right center', // позиционирование календаря\r\n            navTitles: { // стили для отображения шапки календаря\r\n                days: '<strong>yyyy</strong> <i>MMMM</i>',\r\n                months: 'Select month of <strong>yyyy</strong>'    \r\n            }, \r\n            buttons: ['clear'], // кнопки внизу календаря\r\n            minDate: this.formattedDate, // минимально возможный выбор даты \r\n            dateFormat: 'yyyy-MM-dd'\r\n        });\r\n        new AirDatepicker('#start-time', {\r\n            onlyTimepicker: true, \r\n            position: 'right center', // позиционирование календаря\r\n            timepicker: true, // показ выбора времени\r\n        });\r\n\r\n        new AirDatepicker('#end-time', {\r\n            onlyTimepicker: true, \r\n            position: 'right center', // позиционирование календаря\r\n            timepicker: true, // показ выбора времени\r\n        });\r\n        \r\n    },\r\n    data(){\r\n        return {\r\n            taskName: '',\r\n            taskInfo: '', \r\n            taskType: '',\r\n            taskStartDate: '',\r\n            taskStartTime: '',\r\n            taskEndTime: '',\r\n\r\n\r\n            formattedDate: '',\r\n            errors: []\r\n        }\r\n    }, \r\n    methods: {\r\n        ...mapActions(['ADD_TASK', 'GET_THIS_DAY_TASKS', 'GET_THIS_WEEK_TASKS', 'GET_TASKLIST']), \r\n        ...mapMutations(['UPDATE_IS_ADDED_TASK']),\r\n        addTask(event) {\r\n            event.preventDefault();\r\n            if(!this.validateTask()){\r\n                return \r\n            }\r\n            axios({\r\n                method: \"POST\",\r\n                url: \"http://localhost:5000/task/createTask\",\r\n                headers: {\r\n                    authorization: `Bearer ${localStorage.getItem(\"AccessToken\")}`,\r\n                },\r\n                data: {\r\n                    name: this.taskName,\r\n                    type: this.taskType,\r\n                    text: this.taskInfo,\r\n                    status: \"Done\",\r\n                    startTime: `${this.taskStartDate}T${this.taskStartTime}:00Z`, \r\n                    endTime: `${this.taskStartDate}T${this.taskEndTime}:00Z`,\r\n                },\r\n                })\r\n                .then(() => {\r\n                    this.UPDATE_IS_ADDED_TASK()\r\n                    this.GET_THIS_DAY_TASKS(this.PRESENT_DAY)\r\n                    this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK)\r\n                    this.GET_TASKLIST()\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    // alert(\"Создание задачи не удалось\");\r\n                });\r\n        },\r\n        validateTask() {\r\n            const startTime = new Date(this.taskStartTime)\r\n            const endTime = new Date(this.taskEndTime)\r\n\r\n            if (startTime.getTime() >= endTime.getTime()) {\r\n                this.errors.push('Дата окончания должна быть больше даты начала')\r\n                this.taskStartTime = ''\r\n                this.taskEndTime = ''\r\n                return false\r\n            }\r\n            if (startTime.getDate() !== endTime.getDate()) {\r\n                this.errors.push('Время окончания не может быть раньше времени с')\r\n                this.taskStartTime = ''\r\n                this.taskEndTime = ''\r\n                return false\r\n            }\r\n\r\n            return true\r\n        },\r\n    }, \r\n    computed: {\r\n    ...mapGetters(['USER_REGISTRATIONS', 'PRESENT_DAY', 'CURRENT_WEEK']),\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для модального окна */\r\n.form-task {\r\n    background-color: white;\r\n    padding: 30px;\r\n    max-width: 600px;\r\n}\r\n.modal {\r\n  position: fixed;\r\n  top: 25%;\r\n  left: 25%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5); /* Затемненный фон */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000; /* Выше других элементов на странице */\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  width: 400px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* Стили для формы и её элементов */\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"datetime-local\"] {\r\n  margin: 5px 0;\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  font-size: 16px;\r\n}\r\n\r\ninput[type=\"radio\"] {\r\n  margin-right: 5px;\r\n}\r\n\r\nlabel {\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Стили для радиокнопок */\r\ninput[type=\"radio\"] + label {\r\n    font-weight: normal;\r\n    cursor: pointer;\r\n}\r\n\r\n/* Стили для кнопок и других элементов формы (если есть) */\r\nbutton {\r\n  margin-top: 10px;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 3px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}