{"ast":null,"code":"// Файл с обработкой задач, которые находятся на главном календаре, высчисление стилей задачи\n\nexport default {\n  // Функция для вычисления фона задачи\n  calculateTaskColor(task) {\n    if (task.type == \"EveryDay\") {\n      return \"#C4D7DA\";\n    }\n    if (task.type == \"Working\") {\n      return \"#FFDEBF\";\n    }\n    if (task.type == \"Common\") {\n      return \"#DDC9C3\";\n    }\n  },\n  // Функция для вычисления длины задачи в пикселях\n  calculateTaskLengthInPixels(task) {\n    // Получаем время начала и времени окончания из задачи\n    const startTime = new Date(task.startTime);\n    const endTime = new Date(task.endTime);\n\n    // Вычисляем продолжительность задачи в минутах\n    const durationInMinutes = (endTime - startTime) / (1000 * 60);\n\n    // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\n    let lengthInPixels = durationInMinutes / 60 * 80;\n    // Добавляем 10px за каждый пройденный час\n    if (endTime.getHours() - startTime.getHours() > 1) {\n      const addedHours = endTime.getHours() - startTime.getHours() - 1;\n      let additionalPixels = addedHours * 10;\n      if (endTime.getMinutes() !== 0) {\n        lengthInPixels += 5;\n      }\n      return lengthInPixels + additionalPixels;\n    }\n    return lengthInPixels;\n  },\n  // Функция для вычисления левого позиционирования задачи в пикселях\n  calculateLeftPosition(task, currentWeek) {\n    const date = task.date.split(\"-\");\n    for (let i = 0; i < currentWeek.length; i++) {\n      if (currentWeek[i][1] == date[0] && currentWeek[i][4] == date[1]) {\n        return i * 180 + 65;\n      }\n    }\n  },\n  // Функция для вычисления верхнего позиционирования задачи в пикселях\n  calculateTaskStartPosition(task) {\n    const [startTime] = task.time.split(\" - \");\n    const [startHour, startMinute] = startTime.split(\":\").map(Number);\n    const totalMinutes = (startHour - 1) * 60 + startMinute;\n    const startPosition = totalMinutes / 60 * 89 - 20;\n    if (startMinute == 0) {\n      return startPosition + 5;\n    }\n    return startPosition;\n  }\n};","map":{"version":3,"names":["calculateTaskColor","task","type","calculateTaskLengthInPixels","startTime","Date","endTime","durationInMinutes","lengthInPixels","getHours","addedHours","additionalPixels","getMinutes","calculateLeftPosition","currentWeek","date","split","i","length","calculateTaskStartPosition","time","startHour","startMinute","map","Number","totalMinutes","startPosition"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/components/Task/Task.js"],"sourcesContent":["// Файл с обработкой задач, которые находятся на главном календаре, высчисление стилей задачи\r\n\r\nexport default {\r\n  // Функция для вычисления фона задачи\r\n  calculateTaskColor(task) {\r\n    if (task.type == \"EveryDay\") {\r\n      return \"#C4D7DA\";\r\n    }\r\n    if (task.type == \"Working\") {\r\n      return \"#FFDEBF\";\r\n    }\r\n    if (task.type == \"Common\") {\r\n      return \"#DDC9C3\";\r\n    }\r\n  },\r\n\r\n  // Функция для вычисления длины задачи в пикселях\r\n  calculateTaskLengthInPixels(task) {\r\n    // Получаем время начала и времени окончания из задачи\r\n    const startTime = new Date(task.startTime);\r\n    const endTime = new Date(task.endTime);\r\n\r\n    // Вычисляем продолжительность задачи в минутах\r\n    const durationInMinutes = (endTime - startTime) / (1000 * 60);\r\n\r\n    // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\r\n    let lengthInPixels = (durationInMinutes / 60) * 80;\r\n    // Добавляем 10px за каждый пройденный час\r\n    if (endTime.getHours() - startTime.getHours() > 1) {\r\n      const addedHours = endTime.getHours() - startTime.getHours() - 1;\r\n      let additionalPixels = addedHours * 10;\r\n      if (endTime.getMinutes() !== 0) {\r\n        lengthInPixels += 5;\r\n      }\r\n      return lengthInPixels + additionalPixels;\r\n    }\r\n\r\n    return lengthInPixels;\r\n  },\r\n\r\n  // Функция для вычисления левого позиционирования задачи в пикселях\r\n  calculateLeftPosition(task, currentWeek) {\r\n    const date = task.date.split(\"-\");\r\n    for (let i = 0; i < currentWeek.length; i++) {\r\n      if (currentWeek[i][1] == date[0] && currentWeek[i][4] == date[1]) {\r\n        return i * 180 + 65;\r\n      }\r\n    }\r\n  },\r\n\r\n  // Функция для вычисления верхнего позиционирования задачи в пикселях\r\n  calculateTaskStartPosition(task) {\r\n    const [startTime] = task.time.split(\" - \");\r\n    const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n    const totalMinutes = (startHour - 1) * 60 + startMinute;\r\n\r\n    const startPosition = (totalMinutes / 60) * 89 - 20;\r\n    if (startMinute == 0) {\r\n      return startPosition + 5;\r\n    }\r\n    return startPosition;\r\n  },\r\n};\r\n"],"mappings":"AAAA;;AAEA,eAAe;EACb;EACAA,kBAAkBA,CAACC,IAAI,EAAE;IACvB,IAAIA,IAAI,CAACC,IAAI,IAAI,UAAU,EAAE;MAC3B,OAAO,SAAS;IAClB;IACA,IAAID,IAAI,CAACC,IAAI,IAAI,SAAS,EAAE;MAC1B,OAAO,SAAS;IAClB;IACA,IAAID,IAAI,CAACC,IAAI,IAAI,QAAQ,EAAE;MACzB,OAAO,SAAS;IAClB;EACF,CAAC;EAED;EACAC,2BAA2BA,CAACF,IAAI,EAAE;IAChC;IACA,MAAMG,SAAS,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAACG,SAAS,CAAC;IAC1C,MAAME,OAAO,GAAG,IAAID,IAAI,CAACJ,IAAI,CAACK,OAAO,CAAC;;IAEtC;IACA,MAAMC,iBAAiB,GAAG,CAACD,OAAO,GAAGF,SAAS,KAAK,IAAI,GAAG,EAAE,CAAC;;IAE7D;IACA,IAAII,cAAc,GAAID,iBAAiB,GAAG,EAAE,GAAI,EAAE;IAClD;IACA,IAAID,OAAO,CAACG,QAAQ,CAAC,CAAC,GAAGL,SAAS,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;MACjD,MAAMC,UAAU,GAAGJ,OAAO,CAACG,QAAQ,CAAC,CAAC,GAAGL,SAAS,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;MAChE,IAAIE,gBAAgB,GAAGD,UAAU,GAAG,EAAE;MACtC,IAAIJ,OAAO,CAACM,UAAU,CAAC,CAAC,KAAK,CAAC,EAAE;QAC9BJ,cAAc,IAAI,CAAC;MACrB;MACA,OAAOA,cAAc,GAAGG,gBAAgB;IAC1C;IAEA,OAAOH,cAAc;EACvB,CAAC;EAED;EACAK,qBAAqBA,CAACZ,IAAI,EAAEa,WAAW,EAAE;IACvC,MAAMC,IAAI,GAAGd,IAAI,CAACc,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;IACjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MAC3C,IAAIH,WAAW,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIF,IAAI,CAAC,CAAC,CAAC,IAAID,WAAW,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAIF,IAAI,CAAC,CAAC,CAAC,EAAE;QAChE,OAAOE,CAAC,GAAG,GAAG,GAAG,EAAE;MACrB;IACF;EACF,CAAC;EAED;EACAE,0BAA0BA,CAAClB,IAAI,EAAE;IAC/B,MAAM,CAACG,SAAS,CAAC,GAAGH,IAAI,CAACmB,IAAI,CAACJ,KAAK,CAAC,KAAK,CAAC;IAC1C,MAAM,CAACK,SAAS,EAAEC,WAAW,CAAC,GAAGlB,SAAS,CAACY,KAAK,CAAC,GAAG,CAAC,CAACO,GAAG,CAACC,MAAM,CAAC;IACjE,MAAMC,YAAY,GAAG,CAACJ,SAAS,GAAG,CAAC,IAAI,EAAE,GAAGC,WAAW;IAEvD,MAAMI,aAAa,GAAID,YAAY,GAAG,EAAE,GAAI,EAAE,GAAG,EAAE;IACnD,IAAIH,WAAW,IAAI,CAAC,EAAE;MACpB,OAAOI,aAAa,GAAG,CAAC;IAC1B;IACA,OAAOA,aAAa;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}