{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"week\"\n};\nconst _hoisted_2 = {\n  class: \"day__number\"\n};\nconst _hoisted_3 = {\n  class: \"day__text\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"day__line\"\n}, \"―\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.CURRENT_WEEK, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass(day[1] == _ctx.PRESENT_DAY[0] && day[2] == _ctx.PRESENT_DAY[1] && day[3] == _ctx.PRESENT_DAY[2] ? 'present-day' : 'day'),\n      key: day\n    }, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(day[1]), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, _toDisplayString(day[0]), 1 /* TEXT */), _createCommentVNode(\" <div class=\\\"day__text\\\">{{ day[2] }}</div>\\r\\n        <div class=\\\"day__text\\\">{{ day[3] }}</div> \"), _hoisted_4], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","_ctx","CURRENT_WEEK","day","_normalizeClass","PRESENT_DAY","key","_hoisted_2","_toDisplayString","_hoisted_3","_createCommentVNode","_hoisted_4"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\CALENDAR\\CurrentWeek.vue"],"sourcesContent":["<template>\r\n    <div class=\"week\">\r\n        <div\r\n        :class=\"\r\n            day[1] == PRESENT_DAY[0] && day[2] == PRESENT_DAY[1] &&day[3] == PRESENT_DAY[2] \r\n            ? 'present-day'\r\n            : 'day'\r\n        \"\r\n        v-for=\"day in CURRENT_WEEK\"\r\n        :key=\"day\"\r\n        >\r\n        <div class=\"day__number\">{{ day[1] }}</div>\r\n        <div class=\"day__text\">{{ day[0] }}</div>\r\n        <!-- <div class=\"day__text\">{{ day[2] }}</div>\r\n        <div class=\"day__text\">{{ day[3] }}</div> -->\r\n\r\n        <div class=\"day__line\">―</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\r\n\r\nexport default {\r\n\r\n  },\r\n  computed: {\r\n    ...mapGetters(['USER_SELECT_TASKS', 'CURRENT_HOURS', 'CURRENT_MONTHS', 'USER_REGISTRATIONS', 'PRESENT_DAY', 'CURRENT_WEEK', 'FIRST_DAY',  'USER_TASKS_IN_CALENDAR', 'CHECKED_TASK']), \r\n    \r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.scrollToCurrentHour();\r\n    });\r\n\r\n    this.CHANGE_WEEK(moment())\r\n    this.GET_HOURS();\r\n    this.GET_PRESENT_DAY()\r\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\r\n\r\n\r\n    this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK)\r\n    this.GET_THIS_DAY_TASKS(this.PRESENT_DAY)\r\n    this.GET_TASKLIST() // other\r\n  \r\n  },\r\n\r\n  methods: {\r\n    ...mapActions(['GET_HOURS', 'GET_MONTHS', 'GET_PRESENT_DAY', 'CHANGE_WEEK', 'GET_THIS_WEEK_TASKS','GET_THIS_DAY_TASKS', 'GET_TASKLIST']), \r\n    ...mapMutations(['UPDATE_WEEK', 'UPDATE_FIRST_DAY_WEEK', 'UPDATE_CHECKED_TASK']),\r\n\r\n    isTaskOverflowed(task) {\r\n      const taskElement = this.$refs[`${task.id}`]; \r\n      console.log(taskElement)\r\n    },\r\n\r\n    // обновляет выбранную задачу \r\n    showTask(task){\r\n      this.UPDATE_CHECKED_TASK(task)\r\n    },\r\n\r\n    // приводит дату к нужному формату в отображении задачи на календаре\r\n    formatTime(dateTime){\r\n      const d = new Date(dateTime)\r\n\r\n      const res = [d.getHours(), d.getMinutes()].map(function (x) {\r\n        return x < 10 ? \"0\" + x : x\r\n      }).join(\":\")\r\n\r\n      return res\r\n\r\n    },\r\n    // автоматически скролит к нужному времени при открытии страницы\r\n    scrollToCurrentHour() { \r\n  const taskboardContainer = document.querySelector('.calendar__taskboard'); \r\n  if (taskboardContainer) {\r\n    const currentHour = `${Number(moment().format('HH'))}:00`; \r\n    const hourElements = taskboardContainer.querySelectorAll('.time__name');\r\n    \r\n    for (let i = 0; i < hourElements.length; i++) {\r\n      if (hourElements[i].textContent === currentHour) {\r\n        const containerRect = taskboardContainer.getBoundingClientRect();\r\n        const hourRect = hourElements[i].getBoundingClientRect();\r\n        const scrollTop = hourRect.top - containerRect.top;\r\n        taskboardContainer.scrollTop = scrollTop;\r\n        return; // Выходим из цикла, когда нашли нужный час\r\n      }\r\n    }\r\n    \r\n    console.error(\"Час не найден в .calendar__taskboard.\");\r\n  } else {\r\n    console.error(\"Элемент .calendar__taskboard не найден в DOM.\");\r\n  }\r\n},\r\n    // Функция для вычисления стиля задачи \r\n    taskStyle(task) {\r\n      const heightInPixels = Task.calculateTaskLengthInPixels(task);\r\n      // console.log(`${task.name}, длина задачи - ${heightInPixels}`)\r\n      const colorTask = Task.calculateTaskColor(task)\r\n      const leftPosition = Task.calculateLeftPosition(task, this.CURRENT_WEEK)\r\n      const startPosition = Task.calculateTaskStartPosition(task)\r\n\r\n      return {\r\n        height: heightInPixels + 'px', \r\n        'background-color': colorTask, \r\n        top: startPosition + 'px',\r\n        left: leftPosition + 'px', \r\n      }\r\n    },\r\n  \r\n    \r\n    // старт загрузки\r\n    startLoading() {\r\n      this.showLoader = true;\r\n      this.showCalendar = false;\r\n    },\r\n    // процесс загрузки\r\n    async loading() {\r\n  return new Promise((resolve) => {\r\n    // Здесь выполняются асинхронные действия, например, задержка в 1 секунду\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n      this.showCalendar = true;\r\n      resolve(); // Разрешить промис после выполнения\r\n    }, 1000);\r\n  });\r\n},\r\n    \r\n  },\r\n  \r\n\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EAURA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAW;gCAItBC,mBAAA,CAA8B;EAAzBD,KAAK,EAAC;AAAW,GAAC,GAAC;;;uBAf5BE,mBAAA,CAiBM,OAjBNC,UAiBM,I,kBAhBFD,mBAAA,CAeME,SAAA,QAAAC,WAAA,CATQC,IAAA,CAAAC,YAAY,EAAnBC,GAAG;yBANVN,mBAAA,CAeM;MAdLF,KAAK,EAAAS,eAAA,CAAgBD,GAAG,OAAOF,IAAA,CAAAI,WAAW,OAAOF,GAAG,OAAOF,IAAA,CAAAI,WAAW,OAAMF,GAAG,OAAOF,IAAA,CAAAI,WAAW,M;MAMjGC,GAAG,EAAEH;QAENP,mBAAA,CAA2C,OAA3CW,UAA2C,EAAAC,gBAAA,CAAfL,GAAG,qBAC/BP,mBAAA,CAAyC,OAAzCa,UAAyC,EAAAD,gBAAA,CAAfL,GAAG,qBAC7BO,mBAAA,wGAC6C,EAE7CC,UAA8B,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}