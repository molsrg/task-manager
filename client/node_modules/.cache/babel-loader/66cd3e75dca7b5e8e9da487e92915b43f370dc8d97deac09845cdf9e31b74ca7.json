{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios'\nimport moment from 'moment';\nmoment.locale('ru');\nexport default {\n  state() {\n    return {\n      hours: [],\n      days: []\n    };\n  },\n  getters: {\n    CURRENT_HOURS: state => {\n      return state.hours;\n    }\n  },\n  mutations: {\n    UPDATE_HOURS: (state, response) => {\n      state.hours = response;\n    }\n  },\n  actions: {\n    // загружаем часы с текущего на день вперед\n    GET_HOURS({\n      commit\n    }) {\n      const hours = [];\n      const currentHour = Number(moment().format('HH'));\n      for (let i = 0; i < 24; i++) {\n        let hour = currentHour + i;\n        if (hour > 23) {\n          hour -= 24;\n        }\n        hours.push(`${hour}:00`);\n      }\n      commit('UPDATE_HOURS', hours);\n    },\n    SHOW_WEEK({\n      commit\n    }) {\n      this.days = [];\n      const weekStart = currentDate.clone().startOf(\"week\");\n      this.currentWeek = weekStart;\n      this.days = this.fillDays(this.currentWeek);\n      this.firstDay = `${this.capitalizeFirstLetter(this.days[0][2])}  ${this.days[0][3]}`;\n    }\n  }\n};","map":{"version":3,"names":["moment","locale","state","hours","days","getters","CURRENT_HOURS","mutations","UPDATE_HOURS","response","actions","GET_HOURS","commit","currentHour","Number","format","i","hour","push","SHOW_WEEK","weekStart","currentDate","clone","startOf","currentWeek","fillDays","firstDay","capitalizeFirstLetter"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/Calendar.js"],"sourcesContent":["// import axios from 'axios'\r\nimport moment from 'moment'\r\nmoment.locale('ru')\r\n\r\nexport default {\r\n    state() {\r\n        return {\r\n            hours: [],\r\n            days: [],\r\n        }\r\n        \r\n    }, \r\n    getters: {\r\n        CURRENT_HOURS: state => {\r\n            return state.hours\r\n        }\r\n    }, \r\n    mutations: {\r\n        UPDATE_HOURS: (state, response) => {\r\n            state.hours = response\r\n        }, \r\n    }, \r\n    actions: {\r\n        // загружаем часы с текущего на день вперед\r\n        GET_HOURS ({ commit }) {\r\n            const hours = [];\r\n            const currentHour = Number(moment().format('HH'));\r\n            for (let i = 0; i < 24; i++) {\r\n            let hour = currentHour + i;\r\n            if (hour > 23) {\r\n                hour -= 24; \r\n            }\r\n            hours.push(`${hour}:00`);\r\n            }\r\n            commit('UPDATE_HOURS', hours);\r\n        },\r\n        \r\n        SHOW_WEEK ({commit}) {\r\n\r\n\r\n    this.days = [];\r\n    const weekStart = currentDate.clone().startOf(\"week\");\r\n    this.currentWeek = weekStart;\r\n    this.days = this.fillDays(this.currentWeek);\r\n    this.firstDay = `${this.capitalizeFirstLetter(this.days[0][2])}  ${this.days[0][3]}`\r\n\r\n        },\r\n\r\n    }\r\n}"],"mappings":";AAAA;AACA,OAAOA,MAAM,MAAM,QAAQ;AAC3BA,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;AAEnB,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE;IACV,CAAC;EAEL,CAAC;EACDC,OAAO,EAAE;IACLC,aAAa,EAAEJ,KAAK,IAAI;MACpB,OAAOA,KAAK,CAACC,KAAK;IACtB;EACJ,CAAC;EACDI,SAAS,EAAE;IACPC,YAAY,EAAEA,CAACN,KAAK,EAAEO,QAAQ,KAAK;MAC/BP,KAAK,CAACC,KAAK,GAAGM,QAAQ;IAC1B;EACJ,CAAC;EACDC,OAAO,EAAE;IACL;IACAC,SAASA,CAAE;MAAEC;IAAO,CAAC,EAAE;MACnB,MAAMT,KAAK,GAAG,EAAE;MAChB,MAAMU,WAAW,GAAGC,MAAM,CAACd,MAAM,CAAC,CAAC,CAACe,MAAM,CAAC,IAAI,CAAC,CAAC;MACjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;QAC7B,IAAIC,IAAI,GAAGJ,WAAW,GAAGG,CAAC;QAC1B,IAAIC,IAAI,GAAG,EAAE,EAAE;UACXA,IAAI,IAAI,EAAE;QACd;QACAd,KAAK,CAACe,IAAI,CAAE,GAAED,IAAK,KAAI,CAAC;MACxB;MACAL,MAAM,CAAC,cAAc,EAAET,KAAK,CAAC;IACjC,CAAC;IAEDgB,SAASA,CAAE;MAACP;IAAM,CAAC,EAAE;MAGzB,IAAI,CAACR,IAAI,GAAG,EAAE;MACd,MAAMgB,SAAS,GAAGC,WAAW,CAACC,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,CAAC;MACrD,IAAI,CAACC,WAAW,GAAGJ,SAAS;MAC5B,IAAI,CAAChB,IAAI,GAAG,IAAI,CAACqB,QAAQ,CAAC,IAAI,CAACD,WAAW,CAAC;MAC3C,IAAI,CAACE,QAAQ,GAAI,GAAE,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAACvB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,KAAI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,EAAC;IAEhF;EAEJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}