{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios'\n\nexport default {\n  state() {\n    return {\n      hours: [],\n      days: []\n    };\n  },\n  getters: {\n    // USER_TASKS: state => {\n    //     return state.tasks\n    // }\n  },\n  mutations: {\n    // SET_USERS_FROM_FIREBASE: (state, response) => {\n    //     state.users = response\n    // }, \n  },\n  actions: {\n    actions: {\n      getHours({\n        commit\n      }) {\n        const hours = [];\n        const currentHour = Number(moment().format('HH'));\n        for (let i = 0; i < 24; i++) {\n          let hour = currentHour + i;\n          if (hour > 23) {\n            hour -= 24;\n          }\n          hours.push(`${hour}:00`);\n        }\n        commit('updateHours', hours);\n      },\n      showWeek({\n        commit\n      }, currentDate) {\n        const days = [];\n        const weekStart = currentDate.clone().startOf(\"week\");\n        // Остальная логика метода\n        commit('updateDays', days);\n      }\n\n      // Остальные действия для других методов\n    }\n  }\n};","map":{"version":3,"names":["state","hours","days","getters","mutations","actions","getHours","commit","currentHour","Number","moment","format","i","hour","push","showWeek","currentDate","weekStart","clone","startOf"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/Calendar.js"],"sourcesContent":["// import axios from 'axios'\r\n\r\nexport default {\r\n    state() {\r\n        return {\r\n            hours: [],\r\n            days: [],\r\n        }\r\n        \r\n    }, \r\n    getters: {\r\n        // USER_TASKS: state => {\r\n        //     return state.tasks\r\n        // }\r\n    }, \r\n    mutations: {\r\n        // SET_USERS_FROM_FIREBASE: (state, response) => {\r\n        //     state.users = response\r\n        // }, \r\n    }, \r\n    actions: {\r\n        actions: {\r\n            getHours({ commit }) {\r\n              const hours = [];\r\n              const currentHour = Number(moment().format('HH'));\r\n              for (let i = 0; i < 24; i++) {\r\n                let hour = currentHour + i;\r\n                if (hour > 23) {\r\n                  hour -= 24; \r\n                }\r\n                hours.push(`${hour}:00`);\r\n              }\r\n              commit('updateHours', hours);\r\n            },\r\n            \r\n            showWeek({ commit }, currentDate) {\r\n              const days = [];\r\n              const weekStart = currentDate.clone().startOf(\"week\");\r\n              // Остальная логика метода\r\n              commit('updateDays', days);\r\n            },\r\n        \r\n            // Остальные действия для других методов\r\n          },\r\n\r\n}}"],"mappings":";AAAA;;AAEA,eAAe;EACXA,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE;IACV,CAAC;EAEL,CAAC;EACDC,OAAO,EAAE;IACL;IACA;IACA;EAAA,CACH;EACDC,SAAS,EAAE;IACP;IACA;IACA;EAAA,CACH;EACDC,OAAO,EAAE;IACLA,OAAO,EAAE;MACLC,QAAQA,CAAC;QAAEC;MAAO,CAAC,EAAE;QACnB,MAAMN,KAAK,GAAG,EAAE;QAChB,MAAMO,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;QACjD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;UAC3B,IAAIC,IAAI,GAAGL,WAAW,GAAGI,CAAC;UAC1B,IAAIC,IAAI,GAAG,EAAE,EAAE;YACbA,IAAI,IAAI,EAAE;UACZ;UACAZ,KAAK,CAACa,IAAI,CAAE,GAAED,IAAK,KAAI,CAAC;QAC1B;QACAN,MAAM,CAAC,aAAa,EAAEN,KAAK,CAAC;MAC9B,CAAC;MAEDc,QAAQA,CAAC;QAAER;MAAO,CAAC,EAAES,WAAW,EAAE;QAChC,MAAMd,IAAI,GAAG,EAAE;QACf,MAAMe,SAAS,GAAGD,WAAW,CAACE,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,CAAC;QACrD;QACAZ,MAAM,CAAC,YAAY,EAAEL,IAAI,CAAC;MAC5B;;MAEA;IACF;EAEV;AAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}