{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport moment from \"moment\";\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\nmoment.locale(\"ru\");\nexport default {\n  data() {\n    return {\n      currentWeek: moment().clone().startOf(\"week\"),\n      showSelect: false,\n      // меняет состоянике стрелки в списке месяцев\n      //   isFirstLoadSelect: false,\n      isArrowShow: true,\n      // убирает стрелку при достижении недели регистрации\n      isFirstWeekReg: false // тоже для первой регистрации\n    };\n  },\n\n  computed: {\n    ...mapGetters([\"CURRENT_MONTHS\", \"USER_REGISTRATIONS\", \"CURRENT_WEEK\", \"FIRST_DAY\"])\n  },\n  mounted() {\n    this.CHANGE_WEEK(moment());\n    this.GET_PRESENT_DAY();\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\n  },\n  methods: {\n    ...mapActions([\"GET_MONTHS\", \"GET_PRESENT_DAY\", \"CHANGE_WEEK\", 'GET_THIS_WEEK_TASKS']),\n    ...mapMutations([\"UPDATE_WEEK\", \"UPDATE_FIRST_DAY_WEEK\", \"UPDATE_SHOW_LOADER\"]),\n    // переключает неделю на предыдущую (стрелка)\n    async prevWeek(startDate) {\n      this.startLoading();\n      const previousWeek = this.currentWeek ? this.currentWeek.clone().subtract(1, \"week\") : moment().startOf(\"isoWeek\").subtract(1, \"week\");\n      const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\"month\");\n      if (previousWeek.isBefore(startDateNormalized)) {\n        if (!this.isFirstWeekReg) {\n          this.currentWeek = previousWeek;\n          this.isArrowShow = false;\n        }\n        this.isFirstWeekReg = true;\n      } else {\n        this.currentWeek.subtract(1, \"week\");\n      }\n      this.UPDATE_WEEK(this.fillDays(this.currentWeek));\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n      this.UPDATE_FIRST_DAY_WEEK(`${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${this.CURRENT_WEEK[0][3]}`);\n      await this.loading();\n    },\n    // переключает неделю на следующую (стрелка)\n    async nextWeek() {\n      this.startLoading();\n      this.isFirstWeekReg = false;\n      this.isArrowShow = true;\n      if (!this.currentWeek) {\n        // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\n        this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\n      } else {\n        // Иначе переключаемся на следующую неделю\n        this.currentWeek.add(1, \"week\");\n      }\n      this.UPDATE_WEEK(this.fillDays(this.currentWeek));\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n      this.UPDATE_FIRST_DAY_WEEK(`${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${this.CURRENT_WEEK[0][3]}`);\n      await this.loading();\n    },\n    // заполнение днями недели текущей\n    fillDays(startDate) {\n      const daysArray = [];\n      for (let i = 0; i <= 6; i++) {\n        const day = moment(startDate).add(i, \"days\").format(\"ddd-DD-MMMM-YYYY-MM\");\n        daysArray.push(day.split(\"-\"));\n      }\n      return daysArray;\n    },\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    // изменяет выбранный месяц в списке (визуально)\n    async changeCurrentMonth(value) {\n      this.startLoading();\n      this.UPDATE_FIRST_DAY_WEEK(`${value[0]} ${value[1]}`);\n      const newDate = moment(`${value[0]}-${value[1]}`, \"MMMM-YYYY\").startOf(\"month\");\n      this.CHANGE_WEEK(newDate);\n      this.showSelect = false;\n      this.currentWeek = newDate;\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n      await this.loading();\n      // this.scrollToCurrentHour();\n    },\n\n    // возвращается к текущей неделе\n    async goToCurrentWeek() {\n      this.startLoading();\n      this.CHANGE_WEEK(moment());\n      this.currentWeek = moment().clone().startOf(\"week\");\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n      await this.loading();\n    },\n    // старт загрузки\n    startLoading() {\n      this.UPDATE_SHOW_LOADER();\n    },\n    // процесс загрузки\n    async loading() {\n      return new Promise(resolve => {\n        // Здесь выполняются асинхронные действия, например, задержка в 1 секунду\n        setTimeout(() => {\n          this.startLoading();\n          resolve(); // Разрешить промис после выполнения\n        }, 1000);\n      });\n    }\n  }\n};","map":{"version":3,"names":["moment","mapGetters","mapActions","mapMutations","locale","data","currentWeek","clone","startOf","showSelect","isArrowShow","isFirstWeekReg","computed","mounted","CHANGE_WEEK","GET_PRESENT_DAY","GET_MONTHS","USER_REGISTRATIONS","methods","prevWeek","startDate","startLoading","previousWeek","subtract","startDateNormalized","isBefore","UPDATE_WEEK","fillDays","GET_THIS_WEEK_TASKS","CURRENT_WEEK","UPDATE_FIRST_DAY_WEEK","capitalizeFirstLetter","loading","nextWeek","add","daysArray","i","day","format","push","split","string","charAt","toUpperCase","slice","changeCurrentMonth","value","newDate","goToCurrentWeek","UPDATE_SHOW_LOADER","Promise","resolve","setTimeout"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\CALENDAR\\SelectArrow.vue"],"sourcesContent":["<template>\r\n    <div class=\"navigation\">\r\n        <div class=\"select-month\">\r\n            <div class=\"select-month_header\">\r\n                <div class=\"select-month_current\">{{ FIRST_DAY }}</div>\r\n                <img\r\n                @click=\"showSelect = !showSelect\"\r\n                :class=\"showSelect ? 'select-month_btn' : 'select-month_btn-isActive'\"\r\n                \r\n                src=\"../../../assets/images/home/select__btn.svg\"\r\n                alt=\"\"\r\n                />\r\n            </div>\r\n\r\n            <div\r\n            :class=\"showSelect ? 'select-month_body-show' : 'select-month_body'\"\r\n            \r\n            >\r\n                <div\r\n                @click=\"changeCurrentMonth(month)\"\r\n                class=\"select-month_body-item\"\r\n                v-for=\"month in CURRENT_MONTHS\"\r\n                :key=\"month\"\r\n                >\r\n                {{ month[0] }} {{ month[1] }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"arrows\">\r\n        <img\r\n            @click=\"prevWeek(this.USER_REGISTRATIONS)\"\r\n            src=\"../../../assets/images/home/left-arrow.svg\"\r\n            alt=\"\"\r\n            :class=\"isArrowShow ? '' : 'arrows-item-hidden'\"\r\n        />\r\n        <img\r\n            @click=\"nextWeek()\"\r\n            src=\"../../../assets/images/home/right-arrow.svg\"\r\n            alt=\"\"\r\n        />\r\n        <img\r\n            @click=\"goToCurrentWeek\"\r\n            src=\"../../../assets/images/home/home.svg\"\r\n            alt=\"\"\r\n        />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\r\nmoment.locale(\"ru\");\r\n\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      currentWeek: moment().clone().startOf(\"week\"),\r\n\r\n      showSelect: false, // меняет состоянике стрелки в списке месяцев\r\n    //   isFirstLoadSelect: false,\r\n      isArrowShow: true, // убирает стрелку при достижении недели регистрации\r\n      isFirstWeekReg: false, // тоже для первой регистрации\r\n\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      \"CURRENT_MONTHS\",\r\n      \"USER_REGISTRATIONS\",\r\n      \"CURRENT_WEEK\",\r\n      \"FIRST_DAY\",\r\n    ]),\r\n  },\r\n  mounted() {\r\n    this.CHANGE_WEEK(moment());\r\n    this.GET_PRESENT_DAY();\r\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\r\n      \"GET_MONTHS\",\r\n      \"GET_PRESENT_DAY\",\r\n      \"CHANGE_WEEK\",\r\n      'GET_THIS_WEEK_TASKS', \r\n    ]),\r\n    ...mapMutations([\r\n      \"UPDATE_WEEK\",\r\n      \"UPDATE_FIRST_DAY_WEEK\",\r\n      \"UPDATE_SHOW_LOADER\"\r\n    ]),\r\n    // переключает неделю на предыдущую (стрелка)\r\n    async prevWeek(startDate) {\r\n        this.startLoading();\r\n        const previousWeek = this.currentWeek\r\n        ? this.currentWeek.clone().subtract(1, \"week\")\r\n        : moment().startOf(\"isoWeek\").subtract(1, \"week\");\r\n\r\n        const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\r\n        \"month\"\r\n        );\r\n\r\n        if (previousWeek.isBefore(startDateNormalized)) {\r\n        if (!this.isFirstWeekReg) {\r\n            this.currentWeek = previousWeek;\r\n            this.isArrowShow = false;\r\n        }\r\n        this.isFirstWeekReg = true;\r\n        } else {\r\n        this.currentWeek.subtract(1, \"week\");\r\n        }\r\n\r\n        this.UPDATE_WEEK(this.fillDays(this.currentWeek));\r\n        this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n        this.UPDATE_FIRST_DAY_WEEK(\r\n        `${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${\r\n            this.CURRENT_WEEK[0][3]\r\n        }`\r\n        );\r\n\r\n        await this.loading();\r\n    },\r\n\r\n    // переключает неделю на следующую (стрелка)\r\n    async nextWeek() {\r\n        this.startLoading();\r\n        this.isFirstWeekReg = false;\r\n        this.isArrowShow = true;\r\n        if (!this.currentWeek) {\r\n            // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\r\n            this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\r\n        } else {\r\n            // Иначе переключаемся на следующую неделю\r\n            this.currentWeek.add(1, \"week\");\r\n        }\r\n\r\n        this.UPDATE_WEEK(this.fillDays(this.currentWeek));\r\n        this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n        this.UPDATE_FIRST_DAY_WEEK(\r\n            `${this.capitalizeFirstLetter(this.CURRENT_WEEK[0][2])}  ${\r\n            this.CURRENT_WEEK[0][3]\r\n            }`\r\n        );\r\n\r\n        await this.loading();\r\n    },\r\n\r\n    // заполнение днями недели текущей\r\n    fillDays(startDate) {\r\n        const daysArray = [];\r\n        for (let i = 0; i <= 6; i++) {\r\n            const day = moment(startDate)\r\n            .add(i, \"days\")\r\n            .format(\"ddd-DD-MMMM-YYYY-MM\");\r\n            daysArray.push(day.split(\"-\"));\r\n        }\r\n        return daysArray;\r\n    },\r\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\r\n    capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    },\r\n    // изменяет выбранный месяц в списке (визуально)\r\n    async changeCurrentMonth(value) {\r\n        this.startLoading();\r\n        this.UPDATE_FIRST_DAY_WEEK(`${value[0]} ${value[1]}`);\r\n        const newDate = moment(`${value[0]}-${value[1]}`, \"MMMM-YYYY\").startOf(\r\n            \"month\"\r\n        );\r\n        this.CHANGE_WEEK(newDate);\r\n        this.showSelect = false;\r\n        this.currentWeek = newDate;\r\n\r\n        this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n        await this.loading();\r\n        // this.scrollToCurrentHour();\r\n    },\r\n    // возвращается к текущей неделе\r\n    async goToCurrentWeek() {\r\n        this.startLoading();\r\n        this.CHANGE_WEEK(moment());\r\n        this.currentWeek = moment().clone().startOf(\"week\");\r\n        this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\r\n        await this.loading();\r\n\r\n    },\r\n\r\n        \r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    // старт загрузки\r\n    startLoading() {\r\n        this.UPDATE_SHOW_LOADER()\r\n    },\r\n    // процесс загрузки\r\n    async loading() {\r\n        return new Promise((resolve) => {\r\n            // Здесь выполняются асинхронные действия, например, задержка в 1 секунду\r\n            setTimeout(() => {\r\n                this.startLoading()\r\n            resolve(); // Разрешить промис после выполнения\r\n            }, 1000);\r\n        });\r\n    },\r\n}\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.navigation {\r\n    margin-top: 24px;\r\n    margin-left: 70px;\r\n    max-width: 400px;\r\n    display: flex;\r\n    gap: 10px;\r\n    font-family: Raleway;\r\n\r\n}\r\n\r\n.select-month{\r\n    \r\n}\r\n.select-month_header{\r\n    display: flex;\r\n    /* align-items: center; */\r\n}\r\n\r\n.select-month_current{\r\n    font-size: 28px;\r\n    font-weight: 700;\r\n}\r\n\r\n.select-month_btn {\r\n    margin-left: 5px;\r\n    transition: 1s;\r\n    transform: rotate(180deg);\r\n}\r\n\r\n.select-month_btn-isActive {\r\n    transition: 1s;\r\n    margin-left: 5px;\r\n\r\n}\r\n\r\n.select-month_body-show {\r\n    background-color: white;\r\n    position: fixed;\r\n    display: flex;\r\n    gap: 10px;\r\n    flex-direction: column;\r\n    border-radius: 10px;\r\n    z-index: 1;\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n    opacity: 0;\r\n    animation: show 2s forwards;\r\n}\r\n    @keyframes show {\r\n        0% {opacity: 0;}\r\n        100% {opacity: 1;}\r\n    }\r\n\r\n.select-month_body {\r\n\r\n    z-index: 1;\r\n    position: fixed;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 10px;\r\n    opacity: 0;\r\n    animation: ANTIshow 2s forwards;\r\n    background-color: white;    \r\n    gap: 10px;   \r\n\r\n    display: none;\r\n}\r\n    /* @keyframes ANTIshow {\r\n            0% {opacity: 1;}\r\n            100% {opacity: 0; display: none;}\r\n        } */\r\n\r\n.select-month_body-item {\r\n    font-size: 26px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    display: inline-block; \r\n}\r\n\r\n.select-month_body-item:after {\r\n    display: block; /*превращаем его в блочный элемент*/\r\n    content: \"\"; /*контента в данном блоке не будет поэтому в кавычках ничего не ставим*/\r\n    height: 3px; /*задаём высоту линии*/\r\n    width: 0%; /*задаём начальную ширину элемента (линии)*/\r\n    background-color: #225384; /*цвет фона элемента*/\r\n    transition: width 0.4s ease-in-out; /*данное свойство отвечает за плавное изменение ширины. Здесь можно задать время анимации в секундах (в данном случае задано 0.4 секунды)*/\r\n}\r\n\r\n.select-month_body-item:hover {\r\n    color:#225384;\r\n}\r\n\r\n.select-month_body-item:hover::after, .select-month_body-item:focus::after  {\r\n    width: 100%;\r\n}\r\n\r\n\r\n.arrows{\r\n    /* background-color: #225384; */\r\n    display: flex;\r\n    cursor: pointer;\r\n    gap: 30px;\r\n    margin-left: 10px;;\r\n}\r\n\r\n.arrows-item-hidden{\r\n    visibility: hidden;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}