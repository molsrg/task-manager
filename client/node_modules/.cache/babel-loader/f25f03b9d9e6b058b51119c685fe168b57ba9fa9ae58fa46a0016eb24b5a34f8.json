{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-cd254678\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"accordeon__wrapper\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  href: \"#\",\n  class: \"accordeon__link\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.sections, (section, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"accordeon__section\", {\n        opened: section.opened\n      }])\n    }, [_createElementVNode(\"div\", {\n      class: \"accordeon__header\",\n      onClick: $event => $options.toggleSection(index)\n    }, [_createElementVNode(\"a\", _hoisted_3, _toDisplayString(section.header), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", {\n      class: \"accordeon__body\",\n      style: _normalizeStyle({\n        maxHeight: section.opened ? $options.accContentHeight(section) + 'px' : '0'\n      })\n    }, [_createElementVNode(\"p\", null, _toDisplayString(section.content), 1 /* TEXT */)], 4 /* STYLE */)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","href","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","sections","section","index","key","_normalizeClass","opened","_createElementVNode","onClick","$event","$options","toggleSection","_hoisted_3","_toDisplayString","header","style","_normalizeStyle","maxHeight","accContentHeight","content"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\WaitingApp.vue"],"sourcesContent":["<template>\r\n  <div class=\"accordeon__wrapper\">\r\n    <div v-for=\"(section, index) in sections\" :key=\"index\" class=\"accordeon__section\" :class=\"{ opened: section.opened }\">\r\n      <div class=\"accordeon__header\" @click=\"toggleSection(index)\">\r\n        <a href=\"#\" class=\"accordeon__link\">{{ section.header }}</a>\r\n      </div>\r\n      <div class=\"accordeon__body\" :style=\"{ maxHeight: section.opened ? accContentHeight(section) + 'px' : '0' }\">\r\n        <p>{{ section.content }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      sections: [\r\n        {\r\n          header: \"Header 1\",\r\n          content: `Lorem ipsum, dolor sit amet consectetur adipisicing elit...`,\r\n          opened: false,\r\n        },\r\n        {\r\n          header: \"Header 2\",\r\n          content: `Lorem ipsum, dolor sit amet consectetur adipisicing elit...`,\r\n          opened: false,\r\n        },\r\n        {\r\n          header: \"Header 3\",\r\n          content: `Lorem ipsum, dolor sit amet consectetur adipisicing elit...`,\r\n          opened: false,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    toggleSection(index) {\r\n      this.sections[index].opened = !this.sections[index].opened;\r\n    },\r\n    accContentHeight(section) {\r\n      const accContent = this.$refs[section.header];\r\n      if (accContent) {\r\n        this.$nextTick(() => {\r\n          // Вызываем после отрисовки компонента\r\n          return accContent.clientHeight;\r\n        });\r\n      }\r\n      return 0; // Возвращаем 0 по умолчанию\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n.accordeon__wrapper {\r\n  max-width: 600px;\r\n  font-family: sans-serif;\r\n}\r\n.accordeon__section {\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n}\r\n.accordeon__header {\r\n  background-color: grey;\r\n  padding: 20px;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n.accordeon__link {\r\n  color: white;\r\n  text-decoration: none;\r\n}\r\n.accordeon__body {\r\n  overflow: hidden;\r\n  transition: max-height 0.5s ease;\r\n}\r\n.opened .accordeon__body {\r\n  max-height: 100%;\r\n}\r\n.accordeon__body p {\r\n  padding: 20px;\r\n  margin: 0;\r\n  display: block;\r\n}\r\n\r\n\r\n.opened .accordeon__body {\r\n  max-height: *.clientHeight;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAoB;;;EAGtBC,IAAI,EAAC,GAAG;EAACD,KAAK,EAAC;;;uBAHxBE,mBAAA,CASM,OATNC,UASM,I,kBARJD,mBAAA,CAOME,SAAA,QAAAC,WAAA,CAP0BC,KAAA,CAAAC,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBAA3BP,mBAAA,CAOM;MAPqCQ,GAAG,EAAED,KAAK;MAAET,KAAK,EAAAW,eAAA,EAAC,oBAAoB;QAAAC,MAAA,EAAmBJ,OAAO,CAACI;MAAM;QAChHC,mBAAA,CAEM;MAFDb,KAAK,EAAC,mBAAmB;MAAEc,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa,CAACR,KAAK;QACxDI,mBAAA,CAA4D,KAA5DK,UAA4D,EAAAC,gBAAA,CAArBX,OAAO,CAACY,MAAM,iB,8BAEvDP,mBAAA,CAEM;MAFDb,KAAK,EAAC,iBAAiB;MAAEqB,KAAK,EAAAC,eAAA;QAAAC,SAAA,EAAef,OAAO,CAACI,MAAM,GAAGI,QAAA,CAAAQ,gBAAgB,CAAChB,OAAO;MAAA;QACzFK,mBAAA,CAA4B,WAAAM,gBAAA,CAAtBX,OAAO,CAACiB,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}