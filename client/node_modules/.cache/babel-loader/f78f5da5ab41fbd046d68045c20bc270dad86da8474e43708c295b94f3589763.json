{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nmoment.locale(\"ru\");\nexport default {\n  data() {\n    return {\n      currentDate: null,\n      presentDay: \"\",\n      currentWeek: \"\",\n      currentMonth: \"\",\n      days: [],\n      months: [],\n      showCalendar: false,\n      isFirstUpdate: true,\n      registrationMonth: \"01-04-2023\" // user\n    };\n  },\n\n  mounted() {\n    this.currentDate = moment();\n    this.currentMonth = this.capitalizeFirstLetter(this.currentDate.format(\"MMMM YYYY\")); // установка текущего месяца\n    this.presentDay = this.currentDate.format(\"DD MMMM\").split(\" \"); // установка текущего дня\n    // this.OAuth();\n    this.getMonths(this.registrationMonth); // загрузка в  select всех месяцев с даты регистрации по текущий + следующие\n    this.showWeek(this.currentDate);\n  },\n  methods: {\n    // показывает текущую неделю на календаре (выбранную)\n    showWeek(currentDate) {\n      this.days = [];\n      const weekStart = currentDate.clone().startOf(\"week\");\n      this.currentWeek = weekStart;\n      for (let i = 0; i <= 6; i++) {\n        const day = moment(weekStart).add(i, \"days\").format(\"dddd DD MMMM\");\n        this.days.push(day.split(\" \"));\n      }\n    },\n    // загружает месяца пользователя, с регистарации по текущий + 3 вперёд (настраиваемо)\n    getMonths(startDate, monthAfter = 3) {\n      const nowNormalized = moment().locale(\"ru\").startOf(\"month\"); // Первое число текущего месяца\n      const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\"month\");\n      while (startDateNormalized.isBefore(nowNormalized)) {\n        this.months.push(this.capitalizeFirstLetter(startDateNormalized.format(\"MMMM YYYY MM\")).split(\" \"));\n        startDateNormalized.add(1, \"M\");\n      }\n\n      // Добавляем месяцы после текущего\n      for (let i = 0; i < monthAfter; i++) {\n        const monthslater = nowNormalized.clone().add(i, \"M\");\n        this.months.push(this.capitalizeFirstLetter(monthslater.format(\"MMMM YYYY MM\")).split(\" \"));\n      }\n    },\n    // изменяет выбранный месяц в списке\n    changeCurrentMonth(value) {\n      this.currentMonth = `${value[0]} ${value[1]}`;\n    },\n    // переключает неделю на предыдущую (стрелка)\n    prevWeek() {\n      if (!this.currentWeek) {\n        this.currentWeek = moment().startOf(\"isoWeek\").subtract(1, \"week\");\n      } else {\n        this.currentWeek.subtract(1, \"week\");\n      }\n      this.days = [];\n      for (let i = 0; i <= 6; i++) {\n        const day = moment(this.currentWeek).add(i, \"days\").format(\"dddd DD MMMM\");\n        this.days.push(day.split(\" \"));\n      }\n    },\n    // переключает неделю на следующую (стрелка)\n    nextWeek() {\n      if (!this.currentWeek) {\n        // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\n        this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\n      } else {\n        // Иначе переключаемся на следующую неделю\n        this.currentWeek.add(1, \"week\");\n      }\n      this.days = [];\n      for (let i = 0; i <= 6; i++) {\n        const day = moment(this.currentWeek).add(i, \"days\").format(\"dddd DD MMMM\");\n        this.days.push(day.split(\" \"));\n      }\n    },\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    // изменяет месяц, выбранный в списке \n    changeMonth() {\n      let date = null;\n      for (let i = 0; i < this.months.length; i++) {\n        if (`${this.months[i][0]} ${this.months[i][1]}` == this.currentMonth) {\n          date = `${this.months[i][2]}-${this.months[i][1]}-01`;\n        }\n      }\n      const newWeek = moment(date, \"MM-YYYY-DD\");\n      this.showWeek(newWeek);\n    },\n    // получает информацию о code пользователя из адреса \n    OAuth() {\n      const string = window.location.search;\n      const code = string.split(\"?code=\")[1];\n      console.log(code); // выводит код доступа гитхаба\n\n      axios.post(`localhost:5000/auth/gh_oauth`, code).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    ё\n  },\n  watch: {\n    // следит за отслеживанием выбранного месяца в списке и вызывает функцию при изменении значения \n    currentMonth() {\n      if (this.isFirstUpdate) {\n        this.isFirstUpdate = false; // Устанавливаем флаг false при первом обновлении\n      } else {\n        this.changeMonth();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","moment","locale","data","currentDate","presentDay","currentWeek","currentMonth","days","months","showCalendar","isFirstUpdate","registrationMonth","mounted","capitalizeFirstLetter","format","split","getMonths","showWeek","methods","weekStart","clone","startOf","i","day","add","push","startDate","monthAfter","nowNormalized","startDateNormalized","isBefore","monthslater","changeCurrentMonth","value","prevWeek","subtract","nextWeek","string","charAt","toUpperCase","slice","changeMonth","date","length","newWeek","OAuth","window","location","search","code","console","log","post","then","response","catch","error","ё","watch"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Auth\\AuthorizationFromService.vue"],"sourcesContent":["<template>\r\n  <!-- <div class=\"wrapper\">\r\n    <span class=\"loader\"></span>\r\n  </div> -->\r\n\r\n  <div class=\"select__arrow\">\r\n    <div class=\"select\">\r\n      <div class=\"select__header\">\r\n        <div class=\"select__current\">{{ currentMonth }}</div>\r\n        <img\r\n          @click=\"showCalendar = !showCalendar\"\r\n          :class=\"showCalendar ? 'select__btn' : 'select__btn-isActive'\"\r\n          src=\"../../assets/images/main/select__btn.svg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div :class=\"showCalendar ? 'select__body-show' : 'select__body'\">\r\n        <div\r\n          @click=\"changeCurrentMonth(month)\"\r\n          class=\"select__item\"\r\n          v-for=\"month in months\"\r\n          :key=\"month\"\r\n        >\r\n          {{ month[0] }} {{ month[1] }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"arrows\">\r\n      <img\r\n        @click=\"prevWeek()\"\r\n        src=\"../../assets/images/main/left-arrow.svg\"\r\n        alt=\"\"\r\n        class=\"arrows__item\"\r\n      />\r\n      <img\r\n        @click=\"nextWeek()\"\r\n        src=\"../../assets/images/main/right-arrow.svg\"\r\n        alt=\"\"\r\n        class=\"arrows__item\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"calendar\">\r\n    <div class=\"week\">\r\n      <div\r\n        :class=\"\r\n          day[1] == presentDay[0] && day[2] == presentDay[1]\r\n            ? 'present-day'\r\n            : 'day'\r\n        \"\r\n        v-for=\"day in days\"\r\n        :key=\"day\"\r\n      >\r\n        <div class=\"day__number\">{{ day[1] }}</div>\r\n        <div class=\"day__text\">{{ day[0] }}</div>\r\n        <div class=\"day__text\">{{ day[2] }}</div>\r\n        <div class=\"day__line\">―</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"taskboard\">\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n      <div class=\"task\">\r\n        <h5 class=\"task__name\">Утренняя рутина</h5>\r\n        <span class=\"task__time\">7:00 - 8:00</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nmoment.locale(\"ru\");\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      currentDate: null,\r\n      presentDay: \"\",\r\n\r\n      currentWeek: \"\",\r\n      currentMonth: \"\",\r\n\r\n      days: [],\r\n      months: [],\r\n\r\n      showCalendar: false,\r\n      isFirstUpdate: true,\r\n\r\n      registrationMonth: \"01-04-2023\", // user\r\n    };\r\n  },\r\n  mounted() {\r\n    this.currentDate = moment();\r\n    this.currentMonth = this.capitalizeFirstLetter(\r\n      this.currentDate.format(\"MMMM YYYY\")\r\n    ); // установка текущего месяца\r\n    this.presentDay = this.currentDate.format(\"DD MMMM\").split(\" \"); // установка текущего дня\r\n    // this.OAuth();\r\n    this.getMonths(this.registrationMonth); // загрузка в  select всех месяцев с даты регистрации по текущий + следующие\r\n    this.showWeek(this.currentDate);\r\n  },\r\n\r\n  methods: {\r\n    // показывает текущую неделю на календаре (выбранную)\r\n    showWeek(currentDate) {\r\n      this.days = [];\r\n      const weekStart = currentDate.clone().startOf(\"week\");\r\n      this.currentWeek = weekStart;\r\n      for (let i = 0; i <= 6; i++) {\r\n        const day = moment(weekStart).add(i, \"days\").format(\"dddd DD MMMM\");\r\n        this.days.push(day.split(\" \"));\r\n      }\r\n    },\r\n\r\n    // загружает месяца пользователя, с регистарации по текущий + 3 вперёд (настраиваемо)\r\n    getMonths(startDate, monthAfter = 3) {\r\n      const nowNormalized = moment().locale(\"ru\").startOf(\"month\"); // Первое число текущего месяца\r\n      const startDateNormalized = moment(startDate, \"DD-MM-YYYY\").startOf(\r\n        \"month\"\r\n      );\r\n\r\n      while (startDateNormalized.isBefore(nowNormalized)) {\r\n        this.months.push(\r\n          this.capitalizeFirstLetter(\r\n            startDateNormalized.format(\"MMMM YYYY MM\")\r\n          ).split(\" \")\r\n        );\r\n        startDateNormalized.add(1, \"M\");\r\n      }\r\n\r\n      // Добавляем месяцы после текущего\r\n      for (let i = 0; i < monthAfter; i++) {\r\n        const monthslater = nowNormalized.clone().add(i, \"M\");\r\n        this.months.push(\r\n          this.capitalizeFirstLetter(monthslater.format(\"MMMM YYYY MM\")).split(\r\n            \" \"\r\n          )\r\n        );\r\n      }\r\n    },\r\n\r\n    // изменяет выбранный месяц в списке\r\n    changeCurrentMonth(value) {\r\n      this.currentMonth = `${value[0]} ${value[1]}`;\r\n    },\r\n\r\n    // переключает неделю на предыдущую (стрелка)\r\n    prevWeek() {\r\n      if (!this.currentWeek) {\r\n        this.currentWeek = moment().startOf(\"isoWeek\").subtract(1, \"week\");\r\n      } else {\r\n        this.currentWeek.subtract(1, \"week\");\r\n      }\r\n\r\n      this.days = [];\r\n\r\n      for (let i = 0; i <= 6; i++) {\r\n        const day = moment(this.currentWeek)\r\n          .add(i, \"days\")\r\n          .format(\"dddd DD MMMM\");\r\n        this.days.push(day.split(\" \"));\r\n      }\r\n    },\r\n\r\n    // переключает неделю на следующую (стрелка)\r\n    nextWeek() {\r\n      if (!this.currentWeek) {\r\n        // Если текущая неделя не определена, создаем ее и устанавливаем в текущую неделю\r\n        this.currentWeek = moment().add(1, \"week\").startOf(\"isoWeek\");\r\n      } else {\r\n        // Иначе переключаемся на следующую неделю\r\n        this.currentWeek.add(1, \"week\");\r\n      }\r\n      this.days = [];\r\n\r\n      for (let i = 0; i <= 6; i++) {\r\n        const day = moment(this.currentWeek)\r\n          .add(i, \"days\")\r\n          .format(\"dddd DD MMMM\");\r\n        this.days.push(day.split(\" \"));\r\n      }\r\n    },\r\n\r\n    // делает заглавным первые буквы месяцев в списке (мб костыль)\r\n    capitalizeFirstLetter(string) {\r\n      return string.charAt(0).toUpperCase() + string.slice(1);\r\n    },\r\n\r\n    // изменяет месяц, выбранный в списке \r\n    changeMonth() {\r\n      let date = null;\r\n      for (let i = 0; i < this.months.length; i++) {\r\n        if (`${this.months[i][0]} ${this.months[i][1]}` == this.currentMonth) {\r\n          date = `${this.months[i][2]}-${this.months[i][1]}-01`;\r\n        }\r\n      }\r\n      const newWeek = moment(date, \"MM-YYYY-DD\");\r\n      this.showWeek(newWeek);\r\n    },\r\n\r\n    // получает информацию о code пользователя из адреса \r\n    OAuth() {\r\n      const string = window.location.search;\r\n      const code = string.split(\"?code=\")[1];\r\n\r\n      console.log(code); // выводит код доступа гитхаба\r\n\r\n      axios\r\n        .post(`localhost:5000/auth/gh_oauth`, code)\r\n        .then((response) => {\r\n          console.log(response);\r\n        })\r\n\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    ё\r\n  },\r\n  watch: {\r\n    // следит за отслеживанием выбранного месяца в списке и вызывает функцию при изменении значения \r\n    currentMonth() {\r\n      if (this.isFirstUpdate) {\r\n        this.isFirstUpdate = false; // Устанавливаем флаг false при первом обновлении\r\n      } else {\r\n        this.changeMonth();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.wrapper {\r\n  margin: 100px auto;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.loader {\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 5px solid black;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}