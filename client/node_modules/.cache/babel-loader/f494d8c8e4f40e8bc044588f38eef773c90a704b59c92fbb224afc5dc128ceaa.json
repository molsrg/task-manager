{"ast":null,"code":"// import axios from 'axios'\nexport default {\n  state() {\n    return {\n      heightInPixels: null\n    };\n  },\n  getters: {\n    HEIGHT_TASK: state => {}\n  },\n  mutations: {\n    SET_TASK_LENGTH_IN_PIXELS: (state, response) => {\n      state.heightInPixels = response;\n    }\n  },\n  actions: {\n    CALCULATE_TASK_LENGTH_IN_PIXELS({\n      commit\n    }, task) {\n      const [startTime, endTime] = task.time.split(\" - \");\n\n      // Разбиваем время начала и времени окончания на часы и минуты\n      const [startHour, startMinute] = startTime.split(\":\").map(Number);\n      const [endHour, endMinute] = endTime.split(\":\").map(Number);\n\n      // Вычисляем продолжительность задачи в минутах\n      const durationInMinutes = (endHour - startHour) * 60 + (endMinute - startMinute);\n\n      // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\n      const heightInPixels = durationInMinutes / 60 * 80;\n\n      // Добавляем 10px за каждый пройденный час\n      if (endHour - startHour > 1) {\n        const addedHours = endHour - startHour;\n        let additionalPixels = addedHours * 6;\n        return heightInPixels + additionalPixels;\n      }\n      commit('SET_TASK_LENGTH_IN_PIXELS', heightInPixels);\n    }\n  }\n};","map":{"version":3,"names":["state","heightInPixels","getters","HEIGHT_TASK","mutations","SET_TASK_LENGTH_IN_PIXELS","response","actions","CALCULATE_TASK_LENGTH_IN_PIXELS","commit","task","startTime","endTime","time","split","startHour","startMinute","map","Number","endHour","endMinute","durationInMinutes","addedHours","additionalPixels"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/User/Task.js"],"sourcesContent":["// import axios from 'axios'\r\nexport default {\r\n    state() {\r\n        return {\r\n            heightInPixels: null,\r\n        };\r\n    },\r\n    getters: {\r\n        HEIGHT_TASK: state => {\r\n\r\n        }\r\n    },\r\n    mutations: {\r\n    SET_TASK_LENGTH_IN_PIXELS: (state, response) => {\r\n      state.heightInPixels = response;\r\n    },\r\n  },\r\n  actions: {\r\n    CALCULATE_TASK_LENGTH_IN_PIXELS({ commit }, task) {\r\n      const [startTime, endTime] = task.time.split(\" - \");\r\n\r\n      // Разбиваем время начала и времени окончания на часы и минуты\r\n      const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n      const [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n      // Вычисляем продолжительность задачи в минутах\r\n      const durationInMinutes =\r\n        (endHour - startHour) * 60 + (endMinute - startMinute);\r\n\r\n      // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\r\n      const heightInPixels = (durationInMinutes / 60) * 80;\r\n\r\n      // Добавляем 10px за каждый пройденный час\r\n      if (endHour - startHour > 1) {\r\n        const addedHours = endHour - startHour;\r\n        let additionalPixels = addedHours * 6;\r\n        return heightInPixels + additionalPixels;\r\n      }\r\n\r\n    commit('SET_TASK_LENGTH_IN_PIXELS', heightInPixels)\r\n    },\r\n  },\r\n};\r\n"],"mappings":"AAAA;AACA,eAAe;EACXA,KAAKA,CAAA,EAAG;IACJ,OAAO;MACHC,cAAc,EAAE;IACpB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,WAAW,EAAEH,KAAK,IAAI,CAEtB;EACJ,CAAC;EACDI,SAAS,EAAE;IACXC,yBAAyB,EAAEA,CAACL,KAAK,EAAEM,QAAQ,KAAK;MAC9CN,KAAK,CAACC,cAAc,GAAGK,QAAQ;IACjC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,+BAA+BA,CAAC;MAAEC;IAAO,CAAC,EAAEC,IAAI,EAAE;MAChD,MAAM,CAACC,SAAS,EAAEC,OAAO,CAAC,GAAGF,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,KAAK,CAAC;;MAEnD;MACA,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGL,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAACC,MAAM,CAAC;MACjE,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGR,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAACC,MAAM,CAAC;;MAE3D;MACA,MAAMG,iBAAiB,GACrB,CAACF,OAAO,GAAGJ,SAAS,IAAI,EAAE,IAAIK,SAAS,GAAGJ,WAAW,CAAC;;MAExD;MACA,MAAMf,cAAc,GAAIoB,iBAAiB,GAAG,EAAE,GAAI,EAAE;;MAEpD;MACA,IAAIF,OAAO,GAAGJ,SAAS,GAAG,CAAC,EAAE;QAC3B,MAAMO,UAAU,GAAGH,OAAO,GAAGJ,SAAS;QACtC,IAAIQ,gBAAgB,GAAGD,UAAU,GAAG,CAAC;QACrC,OAAOrB,cAAc,GAAGsB,gBAAgB;MAC1C;MAEFd,MAAM,CAAC,2BAA2B,EAAER,cAAc,CAAC;IACnD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}