{"ast":null,"code":"import axios from 'axios';\nimport { useVuelidate } from '@vuelidate/core';\nimport { required, minLength, email } from '@vuelidate/validators';\nexport default {\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      login: '',\n      mail: '',\n      password: '',\n      confirm_password: '',\n      auth: 'Зарегестрироваться',\n      isReg: false,\n      errors: [],\n      isInvalidEmail: false,\n      isInvalidLogin: false,\n      isInvalidPassword_incorrect: false,\n      isInvalidPassword_valid: false,\n      isInvalidPassword_dsntmatch: false\n    };\n  },\n  validations: {\n    login: {\n      required,\n      minLength: minLength(6)\n    },\n    mail: {\n      required,\n      email\n    },\n    password: {\n      required,\n      minLength: minLength(8)\n    },\n    confirm_password: {\n      required,\n      minLength: minLength(8)\n    }\n  },\n  mounted() {\n    if (localStorage.getItem('AccessToken')) {\n      window.location.href = \"http://localhost:8080/home\";\n    }\n  },\n  methods: {\n    changeReg() {\n      this.isReg = !this.isReg;\n      this.auth = this.auth == 'Войти' ? 'Зарегестрироваться' : 'Войти';\n    },\n    async authUser(event) {\n      event.preventDefault();\n      this.isInvalidEmail = false;\n      this.isInvalidLogin = false;\n      this.isInvalidPassword_valid = false;\n      this.isInvalidPassword_incorrect = false;\n      const isFormCorrect = await this.v$.$validate();\n      if (!isFormCorrect && this.auth == 'Зарегестрироваться') {\n        console.log('Валидация формы не прошла');\n        return;\n      }\n      if (this.errors.length == 0) {\n        let data = {};\n        let type = '';\n        if (this.auth == 'Зарегестрироваться') {\n          data = {\n            username: this.login,\n            email: this.mail,\n            password: this.password\n          };\n          type = 'registration';\n        } else if (this.auth == 'Войти') {\n          data = {\n            email: this.mail,\n            password: this.password\n          };\n          type = 'login';\n        }\n        axios.post(`http://localhost:5000/auth/${type}`, data).then(response => {\n          this.login = '';\n          this.mail = '', this.password = '', this.confirm_password = '';\n          const token = response.data.AccessToken;\n          localStorage.setItem('AccessToken', token); // write\n          // console.log(localStorage.getItem('AccessToken')); // read\n          window.location.href = \"http://localhost:8080/home\";\n        }).catch(error => {\n          // console.log(error)\n          // this.errors = [error.response.data?.errors]\n          // this.errors = [error.response.data?.message]\n\n          if (error.response.data?.message == \"Почтовый адрес уже был зарегистрирован\") {\n            this.isInvalidEmail = true;\n            this.mail = \"\";\n          }\n          if (error.response.data?.message == \"Пользователь с таким именем уже существует\") {\n            this.isInvalidLogin = true;\n            this.login = \"\";\n          }\n          if (error.response.data?.message == \"Введен неверный пароль\") {\n            this.isInvalidPassword_incorrect = true;\n            this.password = \"\";\n          }\n        });\n      }\n    },\n    validForm() {\n      const regex = /^(?=.*[A-Za-z])([A-Za-z0-9]+)$/;\n      this.errors = [];\n      if (this.title == 'Регистрация') {\n        if (this.password !== this.confirm_password) {\n          this.isInvalidPassword_dsntmatch = true;\n          return false;\n        }\n      }\n      if (!regex.test(this.password)) {\n        this.isInvalidPassword_valid = true;\n        this.password = '';\n        this.confirm_password = '';\n        return false;\n      }\n      return true;\n    },\n    AuthOrReg() {\n      this.errors = [];\n      this.login = '';\n      this.mail = '', this.password = '', this.confirm_password = '';\n      if (this.subtitle == \"Вход\") {\n        this.title = \"Вход\";\n        this.subtitle = \"Регистрация\";\n        this.auth = \"Войти\";\n      } else if (this.subtitle == \"Регистрация\") {\n        this.title = \"Регистрация\";\n        this.subtitle = \"Вход\";\n        this.auth = \"Зарегистрироваться\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","useVuelidate","required","minLength","email","setup","v$","data","login","mail","password","confirm_password","auth","isReg","errors","isInvalidEmail","isInvalidLogin","isInvalidPassword_incorrect","isInvalidPassword_valid","isInvalidPassword_dsntmatch","validations","mounted","localStorage","getItem","window","location","href","methods","changeReg","authUser","event","preventDefault","isFormCorrect","$validate","console","log","length","type","username","post","then","response","token","AccessToken","setItem","catch","error","message","validForm","regex","title","test","AuthOrReg","subtitle"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AuthorizationClient.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth\">\r\n    <div class=\"auth-info\" style=\"display: flex;\">\r\n    <div class=\"auth-form\">\r\n      <div>\r\n        Братаны и сестрички, я вам расскажу про это офигенное веб-приложение, называется оно \"Таск-Батя\"! Это жирный инструмент для тех, кто хочет хавать задачи на лету. \r\n      </div>\r\n      <div>\r\n        \r\nСуть его проста как берёзка: ты создаёшь свои задачи, какие хочешь, когда хочешь. И делишься ими с друзьями или коллегами. Вот чёрт, как это работает:\r\n\r\n<li>Cоздавай задачи: Быстро добавляй задачи, которые надо выполнить. Можно указать описание, сроки и приоритет.</li>\r\n<li>Делегируй: Нет времени? Не проблема! Делегируй задачу своему бро или систрёнке, и пусть они крутят!</li>\r\n<li>Отслеживай: Смотри статус каждой задачи, чтоб знать, что уже сделано, а что ещё в процессе.</li>\r\n<li>Хавай задачи вместе: Если у вас команда, то здесь можно учесть все ваши задачи. Как батя, назначай ответственных за каждую задачу, и у нас всё будет под контролем.</li>\r\n<li>Комментируй и обсуждай: Ну, и, конечно, общайтесь. Оставляйте комментарии, обсуждайте детали и держитесь в курсе всех движений.</li>\r\n\r\n      </div>\r\n      <div>И не забудьте, \"Таск-Батя\" работает в браузере, так что ты и твои друзья сможете пользоваться им откуда угодно, в любое время. Пусть никакие задачи не останутся невыполненными, а все они будут прямо в твоём контроле! Чётко, правда?</div>\r\n    </div>\r\n    <img style=\"width:50%\" class=\"auth-info-img\" src=\"../assets/images/auth/1647438350_34-kartinkin-net-p-kartinki-gopnikov-36.jpg\" alt=\"\">\r\n  </div>\r\n  <div class=\"auth-container\">\r\n    <div :class=\"isReg ? 'auth-form auth-form-short' : 'auth-form '\">\r\n      <div class=\"auth-form__section\">\r\n        <img\r\n          src=\"../assets/images/logo/logo.svg\"\r\n          alt=\"logo\"\r\n        />\r\n        <h3 class=\"auth-form__section_text\">Task Unity Tech</h3>\r\n      </div>\r\n      <div class=\"auth-form__section\">\r\n        <button @click=\"changeReg\" :class=\"isReg ? 'auth-form__section_button-inactive' : 'auth-form__section_button'\">Регистрация</button>\r\n        <button @click=\"changeReg\" :class=\"isReg ? 'auth-form__section_button' : 'auth-form__section_button-inactive'\">Вход</button>\r\n      </div>\r\n      <div style=\"overflow: hidden; max-height: 410px;\"  >\r\n        <form @submit=\"authUser\"\r\n          :class=\"isReg ? 'form-signin ' : 'form-signin form-signin-left'\"\r\n          action=\"\"\r\n          method=\"post\"\r\n          name=\"form\"\r\n        >\r\n        <input class=\"auth-form-input\"  type=\"email\" placeholder=\"E-mail\" v-model=\"mail\">\r\n        <input class=\"auth-form-input\"  type=\"password\" placeholder=\"Пароль\" v-model=\"password\">\r\n\r\n        <a class=\"auth-form-input_forget\">Забыли пароль?</a>\r\n\r\n        <button type=\"submit\" class=\"auth-form-button\">{{ auth }}</button>\r\n\r\n        </form>\r\n\r\n        <form @submit=\"authUser\"\r\n          :class=\"isReg ? 'form-signup' : 'form-signup form-signup-left'\"\r\n          action=\"\"\r\n          method=\"post\"\r\n          name=\"form\"\r\n          \r\n        >\r\n        <div>\r\n          <input class=\"auth-form-input\" type=\"text\" placeholder=\"Имя пользователя\" v-model=\"login\" >\r\n          <span class=\"invalid-span\" v-if=\"v$.login.$invalid && !v$.login.$dirty\">Минимальная длина 6 символов</span>\r\n          <!-- <span class=\"invalid-span\" v-if=\"v$.login.$invalid && v$.login.$dirty\">Проверьте правильность введённых данных</span> -->\r\n          <span class=\"invalid-span\" v-if=\"isInvalidLogin\">Пользователь с таким именем уже существует</span>\r\n          \r\n        </div>\r\n\r\n        <div>\r\n          <input class=\"auth-form-input\"  type=\"text\" placeholder=\"E-mail\" v-model=\"mail\" readonly\r\n    onfocus=\"this.removeAttribute('readonly')\" >\r\n          <span class=\"invalid-span\" v-if=\"v$.mail.$invalid && !v$.login.$dirty\">Некорректный email</span>          \r\n          <span class=\"invalid-span\" v-if=\"isInvalidEmail\">Эта почта уже была зерегестрирована</span>\r\n        </div>\r\n\r\n        <div>\r\n          <input class=\"auth-form-input\"  type=\"text\" placeholder=\"Пароль\" v-model=\"password\" onfocus=\"this.removeAttribute('readonly')\" readonly>\r\n          <span class=\"invalid-span\" v-if=\"v$.password.$invalid && !v$.password.$dirty\">Минимальная длина 8 символов. Допускаются только буквы латинницы и цифры. Обязательно наличие 1 буквы.</span>\r\n          <span class=\"invalid-span\" v-if=\"isInvalidPassword_valid\">Пароль не прошел валидацию</span>\r\n        </div>\r\n        <div>\r\n          <input class=\"auth-form-input\"  type=\"text\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\" autocomplete=\"off\">\r\n          <!-- <span class=\"invalid-span\" v-if=\"v$.confirm_password.$invalid\">Минимальная длина 8 символов</span> -->\r\n          <!-- {{ v$.confirm_password.sameAsPassword }} -->\r\n          <span class=\"invalid-span\" v-if=\"this.password !== this.confirm_password && !v$.confirm_password.$dirty || this.isInvalidPassword_dsntmatch\">Пароли не совпадают</span>\r\n        </div>\r\n          \r\n          <button type=\"submit\" class=\"auth-form-button\">{{ auth }}</button>\r\n      </form>\r\n      \r\n      </div> \r\n\r\n      <div class=\"auth-form-or\">\r\n          <div class=\"auth-form-or__text\">\r\n              <span>или</span>\r\n            </div>\r\n          <div class=\"auth-form-container\">\r\n            <a href=\"https://accounts.google.com/o/oauth2/auth?client_id=429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1&redirect_uri=http://localhost:8080/waiting&response_type=code&scope=https://www.googleapis.com/auth/userinfo.profile&state=123\"><img src=\"../assets/images/auth/google.svg\"></a>\r\n\r\n            <a href=\"https://github.com/login/oauth/authorize?scope=user:email&client_id=db3492f883c60a412c39&redirect_uri=http://localhost:8080/waiting\"> <img src=\"../assets/images/auth/github.svg\"></a>\r\n\r\n            <a href=\"https://oauth.yandex.ru/authorize?client_id=5b1b15fa24b542948bbd72ac320d6b9f&redirect_uri=http://localhost:8080/waiting&response_type=code\"> <img src=\"../assets/images/auth/facebook.svg\"></a>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required, minLength, email } from '@vuelidate/validators'\r\n\r\nexport default {\r\n  setup () {\r\n        return {\r\n            v$: useVuelidate()\r\n        }\r\n    },\r\n  data(){\r\n    return { \r\n      login: '', \r\n      mail: '', \r\n      password: '', \r\n      confirm_password: '', \r\n      auth: 'Зарегестрироваться',\r\n\r\n    isReg: false,\r\n      errors: [],\r\n\r\n\r\n      isInvalidEmail: false, \r\n      isInvalidLogin: false, \r\n      isInvalidPassword_incorrect: false,\r\n      isInvalidPassword_valid: false, \r\n      isInvalidPassword_dsntmatch: false\r\n    }\r\n  }, \r\n  validations: {\r\n    login: { required, minLength: minLength(6) },\r\n    mail: { required, email },\r\n    password: { required,  minLength: minLength(8)},\r\n    confirm_password: { required,  minLength: minLength(8)},\r\n    },\r\n\r\n  mounted(){\r\n    if(localStorage.getItem('AccessToken')){\r\n      window.location.href = \"http://localhost:8080/home\"\r\n    }\r\n  },\r\n  methods: {\r\n    changeReg(){\r\n      this.isReg = !this.isReg\r\n      this.auth = this.auth == 'Войти' ?  'Зарегестрироваться' : 'Войти'\r\n    },\r\n\r\n    async authUser(event) {\r\n      event.preventDefault();\r\n      this.isInvalidEmail = false\r\n      this.isInvalidLogin = false\r\n      this.isInvalidPassword_valid = false\r\n      this.isInvalidPassword_incorrect = false\r\n    \r\n      const isFormCorrect = await this.v$.$validate()\r\n            if (!isFormCorrect &&  this.auth == 'Зарегестрироваться') {\r\n              \r\n              console.log('Валидация формы не прошла')\r\n              return\r\n            }\r\n      \r\n      if(this.errors.length == 0){\r\n        let data = {}\r\n        let type = ''\r\n\r\n        if(this.auth == 'Зарегестрироваться'){\r\n          data = {\r\n          username: this.login,\r\n          email: this.mail,\r\n          password: this.password,\r\n            } \r\n          \r\n          type = 'registration'\r\n        }\r\n        else if (this.auth == 'Войти') {\r\n          data = {\r\n            email: this.mail,\r\n            password: this.password,\r\n          }\r\n\r\n          type = 'login'\r\n        }\r\n        axios.post(`http://localhost:5000/auth/${type}`, data)\r\n          .then((response) => {\r\n              this.login = ''\r\n              this.mail = '', \r\n              this.password = '', \r\n              this.confirm_password = ''\r\n\r\n              const token = response.data.AccessToken\r\n              localStorage.setItem('AccessToken', token); // write\r\n              // console.log(localStorage.getItem('AccessToken')); // read\r\n              window.location.href = \"http://localhost:8080/home\"\r\n\r\n              \r\n      \r\n                \r\n          }\r\n          )\r\n\r\n          .catch((error) => {\r\n            // console.log(error)\r\n            // this.errors = [error.response.data?.errors]\r\n            // this.errors = [error.response.data?.message]\r\n\r\n            if(error.response.data?.message == \"Почтовый адрес уже был зарегистрирован\"){\r\n              this.isInvalidEmail = true\r\n              this.mail = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Пользователь с таким именем уже существует\"){\r\n              this.isInvalidLogin = true\r\n              this.login = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Введен неверный пароль\"){\r\n              this.isInvalidPassword_incorrect = true\r\n              this.password = \"\"\r\n            }\r\n\r\n          })   \r\n      }\r\n      \r\n    },     \r\n    validForm(){\r\n      const regex = /^(?=.*[A-Za-z])([A-Za-z0-9]+)$/;\r\n      this.errors = []\r\n      if(this.title == 'Регистрация'){\r\n        if(this.password !== this.confirm_password){\r\n                this.isInvalidPassword_dsntmatch = true\r\n                return false\r\n          }\r\n      }\r\n      \r\n      if(!regex.test(this.password)){\r\n        this.isInvalidPassword_valid = true\r\n        this.password = ''\r\n        this.confirm_password = ''\r\n        return false\r\n      }\r\n\r\n      return true\r\n    },\r\n    AuthOrReg(){\r\n\r\n      this.errors = []\r\n      this.login = ''\r\n      this.mail = '', \r\n      this.password = '', \r\n      this.confirm_password = ''\r\n\r\n      if(this.subtitle == \"Вход\"){\r\n        this.title = \"Вход\"\r\n        this.subtitle = \"Регистрация\"\r\n        this.auth = \"Войти\"\r\n\r\n      }\r\n\r\n      else if(this.subtitle == \"Регистрация\"){\r\n        this.title = \"Регистрация\"\r\n        this.subtitle = \"Вход\"\r\n        this.auth = \"Зарегистрироваться\"\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.auth {\r\n  display: flex;\r\n  gap: 10px;\r\n  background-color: #cacdd3;\r\n  margin: 0 auto;\r\n  margin-top: 100px;\r\n\r\n  max-height: 60vh;\r\n  max-width: 80vw;\r\n  padding: 50px;\r\n}\r\n\r\n@media only screen and (max-width: 1585px) {\r\n  .auth-info-img {\r\n    display: none;\r\n  }\r\n  \r\n}\r\n\r\n\r\n.auth-form{\r\n  background-color: #cacdd3;\r\n  max-height: 660px;\r\n  width: 400px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  transition: all 0.5s ease;\r\n\r\n  font-family: Raleway;\r\n  padding:20px 10px ;\r\n}\r\n\r\n.auth-form-short{\r\n  max-height: 500px;\r\n}\r\n\r\n.auth-form__section {\r\n  display: flex;\r\n  gap: 11px;\r\n  align-items: center;\r\n}\r\n\r\n.auth-form__section h3{\r\n  font-size: 20px;\r\n  font-weight: 200;\r\n}\r\n\r\n\r\n.auth-form__section_button {\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n\r\n  padding-bottom: 10px;\r\n  color: #15616D;\r\n\r\n  border-bottom: solid 2px #15616D;\r\n  transition: all 0.25s ease;\r\n  cursor: pointer;\r\n}\r\n\r\n.auth-form__section_button-inactive {\r\n\r\n  font-family: Raleway;\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n\r\n  color: #001524;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n.form-signin {\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* background-color: red; */\r\n  gap: 41px;\r\n  padding-top:10px;\r\n  width: 100%;\r\n  height: 375px;\r\n\r\n  transition: opacity 0.5s ease, transform 0.5s ease;\r\n}\r\n\r\n.form-signin-left {\r\n  transform: translateX(-400px);\r\n}\r\n\r\n.form-signup {\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 41px;\r\n  padding-top:10px;\r\n  /* background-color: blue; */\r\n  width: 100%;\r\n  height: 375px;\r\n\r\n  position: relative;\r\n  top: -375px;\r\n  left: 400px;\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.form-signup-left {\r\n  transform: translateX(-400px);\r\n}\r\n\r\n\r\n.auth-form-input{\r\n  margin: 0 auto;\r\n  width:95%;\r\n  margin-bottom: 3px;\r\n  outline: none;\r\n  border: 0px solid white;\r\n  border-bottom: 1px solid rgba(0, 21, 36, 0.5);\r\n  background: transparent;\r\n\r\n  font-family: Raleway;\r\n  font-size: 16px;\r\n}\r\n\r\n.auth-form-input_forget {\r\n  color: #15616D;\r\n  border-bottom: 1px solid #15616D;\r\n  cursor: pointer;\r\n\r\n  font-family: Raleway;\r\n  font-size: 16px;\r\n\r\n  max-width: 123px;\r\n  margin-left: 2%;\r\n\r\n}\r\n\r\n\r\n.auth-form-button{\r\n  width: 95%;\r\n  margin: 0 auto;\r\n  padding: 16px 53px;\r\n  border-radius: 10px;\r\n\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n\r\n\r\n  color: rgba(255, 236, 209, 1);\r\n  background:rgba(135, 151, 154, 1);\r\n\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n.auth-form-or{\r\n  width: 95%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  min-height: 100px;\r\n}\r\n\r\n.auth-form-or__text{\r\n  text-align: center;\r\n  padding-bottom: 15px;\r\n  position: relative;\r\n}\r\n\r\n.auth-form-or__text:before,\r\n.auth-form-or__text:after {\r\n\r\n    content: \"\";\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n\r\n    width: 100%;\r\n    height: 1px;\r\n\r\n    background-color: rgba(0, 21, 36, 0.5);\r\n\r\n    position: relative;\r\n}\r\n.auth-form-or__text:before {\r\n\r\n    margin-left: -100%;\r\n\r\n    left: -14px;\r\n}\r\n.auth-form-or__text:after {\r\n\r\n    margin-right: -100%;\r\n\r\n    right: -14px;\r\n}\r\n\r\n.auth-form-container{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n\r\n\r\n\r\n</style>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}