{"ast":null,"code":"import axios from \"axios\";\nimport { mapGetters, mapMutations } from \"vuex\";\n// eslint-disable-next-line no-unused-vars\nimport Task from \"./../Task/Task\";\nexport default {\n  data() {\n    return {\n      checkedTasks: []\n    };\n  },\n  computed: {\n    ...mapGetters([\"USER_TASKLISTS\"])\n  },\n  methods: {\n    ...mapMutations([\"UPDATE_VISIBLE_TASKLIST\", \"UPDATE_SELECT_TASKS\"]),\n    changeToggle(index) {\n      this.UPDATE_VISIBLE_TASKLIST(index);\n    },\n    selectTasks() {\n      this.UPDATE_SELECT_TASKS(this.checkedTasks);\n    },\n    tasklistLabel() {\n      // const colorTask = Task.calculateTaskColor(task)\n      // return {\n      //   background: colorTask,\n      //   border: `1px solid ${colorTask}`\n      // }\n    },\n    addedTask() {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/task/get',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        params: {\n          \"name\": \"XER\",\n          \"type\": \"Personal\",\n          //enum\n          \"text\": \"XERX2\",\n          \"status\": \"Done\",\n          \"startTime\": \"2023-09-30T10:30:00Z\",\n          \"endTime\": \"2023-09-27T10:31:00Z\"\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(err => {\n        console.log(err);\n        alert(\"Создание задачи не удалось\");\n      });\n    },\n    // заготовка под добавление людей\n    addPeople() {}\n  }\n};","map":{"version":3,"names":["axios","mapGetters","mapMutations","Task","data","checkedTasks","computed","methods","changeToggle","index","UPDATE_VISIBLE_TASKLIST","selectTasks","UPDATE_SELECT_TASKS","tasklistLabel","addedTask","method","url","headers","localStorage","getItem","params","then","response","console","log","catch","err","alert","addPeople"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\LeftNavbar.vue"],"sourcesContent":["<template>\r\n  <div class=\"leftnavbar\">\r\n    <div class=\"people-container\">\r\n      <img\r\n        class=\"logo__img people-container__logo\"\r\n        src=\"../../assets/images/auth/logo.svg\"\r\n        alt=\"logo\"\r\n      />\r\n\r\n      <div class=\"people-container__user-container user-container\">\r\n        <h3 class=\"user-container__user-count\">3</h3>\r\n        <img src=\"../../assets/images/home/line__horizont.svg\" alt=\"\" />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <button class=\"user-container__add-user\" @click=\"addPeople()\">\r\n          <img src=\"../../assets/images/home/addpeople.svg\" alt=\"\" />\r\n        </button>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n\r\n    <div class=\"task-container\">\r\n      <h3 class=\"logo__text task-container__logo-text\">Task Unity Tech</h3>\r\n      <div\r\n        v-for=\"(tasklist, index) in USER_TASKLISTS\"\r\n        :key=\"index\"\r\n        class=\"task-container__tasklist tasklist\"\r\n      >\r\n        <div class=\"tasklist__title\">\r\n          <h4 class=\"tasklist__text\">{{ tasklist.title }}</h4>\r\n          <div\r\n            :class=\"\r\n              tasklist.toggleCircle\r\n                ? 'circle-plus opened'\r\n                : 'circle-plus closed'\r\n            \"\r\n            @click=\"changeToggle(index)\"\r\n          >\r\n            <div class=\"circle\" v-if=\"tasklist.tasks.length > 0\">\r\n              <div class=\"horizontal\"></div>\r\n              <div class=\"vertical\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          :class=\"{\r\n            visible: tasklist.isTasklistVisible && tasklist.tasks.length > 0,\r\n          }\"\r\n          class=\"tasklist__tasks\"\r\n        >\r\n          <label\r\n            v-for=\"(task, taskIndex) in tasklist.tasks\"\r\n            :key=\"taskIndex\"\r\n            class=\"tasklist__label\"\r\n          >\r\n            <input\r\n              class=\"real-checkbox\"\r\n              :value=\"task\"\r\n              type=\"checkbox\"\r\n              @change=\"selectTasks()\"\r\n              v-model=\"checkedTasks\"\r\n            />\r\n            <span class=\"custom-checkbox\" :style=\"tasklistLabel(task)\"></span>\r\n            {{ task.name }}\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <button class=\"task-container__tasklist tasklist\" @click=\"addedTask\">Добавить задачу</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n\r\n<script>\r\nimport axios from \"axios\"\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport Task from \"./../Task/Task\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkedTasks: [],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"USER_TASKLISTS\"]),\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"UPDATE_VISIBLE_TASKLIST\", \"UPDATE_SELECT_TASKS\"]),\r\n    changeToggle(index) {\r\n      this.UPDATE_VISIBLE_TASKLIST(index);\r\n    },\r\n    selectTasks() {\r\n      this.UPDATE_SELECT_TASKS(this.checkedTasks);\r\n    },\r\n    tasklistLabel() {\r\n      // const colorTask = Task.calculateTaskColor(task)\r\n      // return {\r\n      //   background: colorTask,\r\n      //   border: `1px solid ${colorTask}`\r\n      // }\r\n    },\r\n\r\n    addedTask(){\r\n      axios({\r\n                method: 'POST', \r\n                url: 'http://localhost:5000/task/get',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                params: {\r\n                  \"name\": \"XER\",\r\n                  \"type\": \"Personal\", //enum\r\n                  \"text\": \"XERX2\",\r\n                  \"status\": \"Done\",\r\n                  \"startTime\":\"2023-09-30T10:30:00Z\",\r\n                  \"endTime\": \"2023-09-27T10:31:00Z\"\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n            })\r\n            .catch((err) => {\r\n              console.log(err)\r\n                alert(\"Создание задачи не удалось\")\r\n            })   \r\n    },\r\n\r\n    // заготовка под добавление людей\r\n    addPeople() {},\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAuFA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,UAAU,EAAEC,YAAW,QAAS,MAAM;AAC/C;AACA,OAAOC,IAAG,MAAO,gBAAgB;AACjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGL,UAAU,CAAC,CAAC,gBAAgB,CAAC;EAClC,CAAC;EACDM,OAAO,EAAE;IACP,GAAGL,YAAY,CAAC,CAAC,yBAAyB,EAAE,qBAAqB,CAAC,CAAC;IACnEM,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACC,uBAAuB,CAACD,KAAK,CAAC;IACrC,CAAC;IACDE,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACP,YAAY,CAAC;IAC7C,CAAC;IACDQ,aAAaA,CAAA,EAAG;MACd;MACA;MACA;MACA;MACA;IAAA,CACD;IAEDC,SAASA,CAAA,EAAE;MACTd,KAAK,CAAC;QACIe,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,gCAAgC;QACrCC,OAAO,EAAE;UAAC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QAAC,CAAC;QAC3EC,MAAM,EAAE;UACN,MAAM,EAAE,KAAK;UACb,MAAM,EAAE,UAAU;UAAE;UACpB,MAAM,EAAE,OAAO;UACf,QAAQ,EAAE,MAAM;UAChB,WAAW,EAAC,sBAAsB;UAClC,SAAS,EAAE;QACb;MACJ,CAAC,EACAC,IAAI,CAAEC,QAAQ,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ;MACxB,CAAC,EACAG,KAAK,CAAEC,GAAG,IAAK;QACdH,OAAO,CAACC,GAAG,CAACE,GAAG;QACbC,KAAK,CAAC,4BAA4B;MACtC,CAAC;IACT,CAAC;IAED;IACAC,SAASA,CAAA,EAAG,CAAC;EACf;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}