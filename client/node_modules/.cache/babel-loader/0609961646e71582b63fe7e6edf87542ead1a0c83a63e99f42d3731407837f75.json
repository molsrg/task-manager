{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"calendar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SelectArrow = _resolveComponent(\"SelectArrow\");\n  const _component_CurrentWeek = _resolveComponent(\"CurrentWeek\");\n  const _component_CalendarApp = _resolveComponent(\"CalendarApp\");\n  const _component_LoaderApp = _resolveComponent(\"LoaderApp\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_SelectArrow), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_CurrentWeek), !_ctx.SHOW_LOADER ? (_openBlock(), _createBlock(_component_CalendarApp, {\n    key: 0\n  })) : (_openBlock(), _createBlock(_component_LoaderApp, {\n    key: 1\n  }))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_SelectArrow","_createElementVNode","_hoisted_1","_component_CurrentWeek","_ctx","SHOW_LOADER","_createBlock","_component_CalendarApp","key","_component_LoaderApp"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\CalendarComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n        <SelectArrow></SelectArrow>\r\n\r\n\r\n    <div class=\"calendar\">\r\n      <CurrentWeek></CurrentWeek>\r\n      <CalendarApp v-if=\"!SHOW_LOADER\"></CalendarApp>\r\n      <LoaderApp v-else></LoaderApp>\r\n  </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nimport SelectArrow from './CALENDAR/SelectArrow.vue'\r\nimport CurrentWeek from './CALENDAR/CurrentWeek.vue'\r\nimport CalendarApp from './CALENDAR/CalendarApp.vue'\r\nimport LoaderApp from './CALENDAR/LoaderApp.vue';\r\nimport { mapGetters, mapActions} from 'vuex';\r\n\r\nmoment.locale(\"ru\");\r\n\r\nexport default {\r\n  components: {\r\n    SelectArrow, \r\n    CurrentWeek,\r\n    CalendarApp, \r\n    LoaderApp\r\n  },\r\n  data() {\r\n    return {\r\n      // загрузка данных с сервера\r\n      showLoader: false,\r\n\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['USER_REGISTRATIONS', 'CURRENT_WEEK', 'PRESENT_DAY', 'SHOW_LOADER']), \r\n    \r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.scrollToCurrentHour();\r\n    });\r\n\r\n    this.CHANGE_WEEK(moment())\r\n    this.GET_HOURS();\r\n    this.GET_PRESENT_DAY()\r\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\r\n\r\n\r\n    this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK)\r\n    this.GET_THIS_DAY_TASKS(this.PRESENT_DAY)\r\n    this.GET_TASKLIST() // other\r\n  \r\n  },\r\n\r\n  methods: {\r\n    ...mapActions(['GET_HOURS', 'GET_MONTHS', 'GET_PRESENT_DAY', 'CHANGE_WEEK', 'GET_THIS_WEEK_TASKS','GET_THIS_DAY_TASKS', 'GET_TASKLIST']), \r\n    \r\n\r\n    isTaskOverflowed(task) {\r\n      const taskElement = this.$refs[`${task.id}`]; \r\n      console.log(taskElement)\r\n    },\r\n\r\n\r\n    // автоматически скролит к нужному времени при открытии страницы\r\n    scrollToCurrentHour() { \r\n  //     const taskboardContainer = document.querySelector('.calendar__taskboard'); \r\n  //     if (taskboardContainer) {\r\n  //       const currentHour = `${Number(moment().format('HH'))}:00`; \r\n  //       const hourElements = taskboardContainer.querySelectorAll('.time__name');\r\n        \r\n  //       for (let i = 0; i < hourElements.length; i++) {\r\n  //         if (hourElements[i].textContent === currentHour) {\r\n  //           const containerRect = taskboardContainer.getBoundingClientRect();\r\n  //           const hourRect = hourElements[i].getBoundingClientRect();\r\n  //           const scrollTop = hourRect.top - containerRect.top;\r\n  //           taskboardContainer.scrollTop = scrollTop;\r\n  //           return; // Выходим из цикла, когда нашли нужный час\r\n  //         }\r\n  //   }\r\n    \r\n  //   console.error(\"Час не найден в .calendar__taskboard.\");\r\n  // } else {\r\n  //   console.error(\"Элемент .calendar__taskboard не найден в DOM.\");\r\n  // }\r\n    },\r\n    \r\n  },\r\n  \r\n\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n.calendar {\r\n  display: flex;\r\n    flex-direction: column;\r\n    place-items: center;\r\n\r\n    margin-left: 100px;\r\n    margin-top: 30px;\r\n}\r\n</style>"],"mappings":";;EAKSA,KAAK,EAAC;AAAU;;;;;;uBAJvBC,mBAAA,CASM,cARAC,YAAA,CAA2BC,sBAAA,GAG/BC,mBAAA,CAII,OAJJC,UAII,GAHFH,YAAA,CAA2BI,sBAAA,G,CACPC,IAAA,CAAAC,WAAW,I,cAA/BC,YAAA,CAA+CC,sBAAA;IAAAC,GAAA;EAAA,O,cAC/CF,YAAA,CAA8BG,oBAAA;IAAAD,GAAA;EAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}