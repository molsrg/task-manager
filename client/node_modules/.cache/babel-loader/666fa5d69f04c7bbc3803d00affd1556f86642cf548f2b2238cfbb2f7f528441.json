{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      login: '',\n      mail: '',\n      password: '',\n      confirm_password: '',\n      title: 'Регистрация',\n      subtitle: 'Вход',\n      auth: 'Зарегистрироваться',\n      errors: []\n\n      // Тимур это токены приложений, на них можно пока что забить хуй  \n      // const google_token = \"429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1\"\n      // const gitHub_token = \"11408a517eebc5ff6eb3\"\n    };\n  },\n\n  methods: {\n    authUser(event) {\n      event.preventDefault();\n      this.validForm();\n      if (this.errors.length == 0) {\n        let data = {};\n        let type = '';\n        if (this.auth == 'Зарегистрироваться') {\n          data = {\n            username: this.login,\n            email: this.mail,\n            password: this.password\n          };\n          type = 'registration';\n        } else if (this.auth == 'Войти') {\n          data = {\n            email: this.mail,\n            password: this.password\n          };\n          type = 'login';\n        }\n        axios.post(`http://localhost:5000/auth/${type}`, data).then(response => {\n          this.login = '';\n          this.mail = '', this.password = '', this.confirm_password = '';\n          localStorage.setItem('token', 'asY-x34SfYPk'); // write\n          console.log(localStorage.getItem('token')); // read\n          console.log(response);\n        }).catch(error => {\n          this.errors = [error.response.data?.errors];\n          this.errors = [error.response.data?.message];\n          console.log(error.response.data);\n          if (error.response.data?.message == \"Почтовый адрес уже был зарегистрирован\") {\n            this.mail = \"\";\n          }\n          if (error.response.data?.message == \"Пользователь с таким именем уже существует\") {\n            this.login = \"\";\n          }\n          if (error.response.data?.message == \"Введен неверный пароль\") {\n            this.pa = \"\";\n          }\n        });\n      }\n    },\n    validForm() {\n      const regex = /^(?=.*[A-Za-z])([A-Za-z0-9]+)$/;\n      this.errors = [];\n      // if(this.password !== this.confirm_password){\n      //   this.errors.push(\"Пароли не совпадают\")\n      //   this.password = ''\n      //   this.confirm_password = ''\n      // }\n      if (!regex.test(this.password)) {\n        this.errors.push(\"Пароль не прошел валидацию\");\n        this.password = '';\n        this.confirm_password = '';\n      }\n    },\n    AuthOrReg() {\n      this.errors = [];\n      this.login = '';\n      this.mail = '', this.password = '', this.confirm_password = '';\n      if (this.subtitle == \"Вход\") {\n        this.title = \"Вход\";\n        this.subtitle = \"Регистрация\";\n        this.auth = \"Войти\";\n      } else if (this.subtitle == \"Регистрация\") {\n        this.title = \"Регистрация\";\n        this.subtitle = \"Вход\";\n        this.auth = \"Зарегистрироваться\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","login","mail","password","confirm_password","title","subtitle","auth","errors","methods","authUser","event","preventDefault","validForm","length","type","username","email","post","then","response","localStorage","setItem","console","log","getItem","catch","error","message","pa","regex","test","push","AuthOrReg"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AuthorizationClient.vue"],"sourcesContent":["<template>\r\n  <div class=\"section\">\r\n    <div class=\"section__item\">\r\n      <div class=\"section__logo\">\r\n        <img class=\"logo\" src=\"../assets/images/auth/logo.svg\" alt=\"logo\">\r\n        <h3 class=\"section__text logo__text\">Task Unity Tech</h3>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"section__item\">\r\n      <div class=\"section__auth\">\r\n        <h3 class=\"section__title\">{{ title }}</h3>\r\n        <button @click=\"AuthOrReg\" class=\"section__subtitle\">{{ subtitle }}</button>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n    <!-- <div class=\"section__item\">\r\n      <form action=\"\" method=\"post\">\r\n\r\n        <transition name=\"input\">\r\n          <input v-if=\"this.title == 'Регистрация' \" class=\"section__input\" type=\"text\" placeholder=\"Имя пользователя\"  v-model=\"login\">\r\n        </transition>  \r\n      \r\n        <input class=\"section__input\" type=\"email\" placeholder=\"E-mail\" v-model=\"mail\" >\r\n        <input class=\"section__input\" type=\"password\" placeholder=\"Пароль\" v-model=\"password\" >\r\n\r\n        <transition name=\"input\">\r\n          <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"password\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\" >\r\n        </transition> \r\n\r\n        <div class=\"section__alert-forget\">\r\n          <span id=\"blink1\" class=\"section__alert\">{{this?.errors[0]}} </span>\r\n        <a v-if=\"this.title == 'Вход'\" class=\"section__forget\" href=\"#\">Забыли пароль?</a>\r\n        </div>  \r\n      </form>\r\n    </div> -->\r\n\r\n\r\n    <div class=\"section__item\">\r\n      <form action=\"\" method=\"post\" @submit=\"authUser\">\r\n\r\n          <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"text\" placeholder=\"Имя пользователя\" required v-model=\"login\">\r\n          <input class=\"section__input\" type=\"email\" placeholder=\"E-mail\" v-model=\"mail\" required>\r\n          <input class=\"section__input\" type=\"password\" placeholder=\"Пароль\" v-model=\"password\" required minlength=\"8\" maxlength=\"128\" pattern=\"[0-9A-Za-z]+\" title=\"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\">\r\n          <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"password\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\" required minlength=\"8\" maxlength=\"128\" pattern=\"[0-9A-Za-z]+\" title=\"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\">\r\n\r\n          <div class=\"section__alert-forget\">\r\n            <span id=\"blink1\" class=\"section__alert\">{{this?.errors[0]}} </span>\r\n            <a v-if=\"this.title == 'Вход'\" class=\"section__forget\" href=\"#\">Забыли пароль?</a>\r\n          </div>  \r\n\r\n          <button type=\"submit\" class=\"section__button\">{{ auth }}</button>\r\n          <div class=\"section__text-or\">\r\n            <span>или</span>\r\n          </div>\r\n\r\n          \r\n          <div class=\"section__bt-container\">\r\n            <!-- с регистарцией на гугле пока что проблемы -->\r\n            <a href=\"https://accounts.google.com/o/oauth2/auth?client_id=29829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1А&redirect_uri=http://localhost:8080/code&response_type=code&scope=https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile&state=123\"><img src=\"../assets/images/auth/google.svg\"></a>\r\n\r\n            <!-- с регистрацией на гитхаб все ок, я создал компонент куда перенаправляется после запроса, лежит в этой же папке -->\r\n            <a href=\"https://github.com/login/oauth/authorize?client_id=11408a517eebc5ff6eb3&redirect_uri=http://localhost:8080/code\"> <img src=\"../assets/images/auth/github.svg\"></a>\r\n\r\n            <!-- здесь я сделал регистрацию при помощи Яндекс ID, нужно будет только иконку заменить, результат возвращается как и в гите -->\r\n            <a href=\"https://oauth.yandex.ru/authorize?client_id=a346729c2c2e4bd482fcb0cb3ddcd9e8&redirect_uri=http://localhost:8080/code&response_type=code\"> <img src=\"../assets/images/auth/facebook.svg\"></a>\r\n          </div>\r\n      </form>\r\n    </div>\r\n    \r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data(){\r\n    return { \r\n      login: '', \r\n      mail: '', \r\n      password: '', \r\n      confirm_password: '', \r\n\r\n\r\n      title: 'Регистрация', \r\n      subtitle: 'Вход', \r\n      auth: 'Зарегистрироваться',\r\n      errors: [],\r\n\r\n\r\n      \r\n      // Тимур это токены приложений, на них можно пока что забить хуй  \r\n      // const google_token = \"429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1\"\r\n      // const gitHub_token = \"11408a517eebc5ff6eb3\"\r\n\r\n    }\r\n  }, \r\n\r\n  methods: {\r\n\r\n    authUser(event) {\r\n      event.preventDefault();\r\n      this.validForm()\r\n\r\n      if(this.errors.length == 0){\r\n        let data = {}\r\n        let type = ''\r\n\r\n        if(this.auth == 'Зарегистрироваться'){\r\n          data = {\r\n          username: this.login,\r\n          email: this.mail,\r\n          password: this.password,\r\n            } \r\n          \r\n          type = 'registration'\r\n        }\r\n        else if (this.auth == 'Войти') {\r\n          data = {\r\n            email: this.mail,\r\n            password: this.password,\r\n          }\r\n\r\n          type = 'login'\r\n        }\r\n        axios.post(`http://localhost:5000/auth/${type}`, data)\r\n          .then((response) => {\r\n              this.login = ''\r\n              this.mail = '', \r\n              this.password = '', \r\n              this.confirm_password = ''\r\n\r\n              localStorage.setItem('token', 'asY-x34SfYPk'); // write\r\n              console.log(localStorage.getItem('token')); // read\r\n              console.log(response)\r\n          })\r\n\r\n          .catch((error) => {\r\n            this.errors = [error.response.data?.errors]\r\n            this.errors = [error.response.data?.message]\r\n\r\n            console.log(error.response.data)\r\n            if(error.response.data?.message == \"Почтовый адрес уже был зарегистрирован\"){\r\n              this.mail = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Пользователь с таким именем уже существует\"){\r\n              this.login = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Введен неверный пароль\"){\r\n              this.pa = \"\"\r\n            }\r\n\r\n          })   \r\n      }\r\n      \r\n    },     \r\n    validForm(){\r\n      const regex = /^(?=.*[A-Za-z])([A-Za-z0-9]+)$/;\r\n      this.errors = []\r\n      // if(this.password !== this.confirm_password){\r\n      //   this.errors.push(\"Пароли не совпадают\")\r\n      //   this.password = ''\r\n      //   this.confirm_password = ''\r\n      // }\r\n      if(!regex.test(this.password)){\r\n        this.errors.push(\"Пароль не прошел валидацию\")\r\n        this.password = ''\r\n        this.confirm_password = ''\r\n      }\r\n    },\r\n\r\n\r\n\r\n    AuthOrReg(){\r\n\r\n      this.errors = []\r\n      this.login = ''\r\n      this.mail = '', \r\n      this.password = '', \r\n      this.confirm_password = ''\r\n\r\n      if(this.subtitle == \"Вход\"){\r\n        this.title = \"Вход\"\r\n        this.subtitle = \"Регистрация\"\r\n        this.auth = \"Войти\"\r\n\r\n      }\r\n\r\n      else if(this.subtitle == \"Регистрация\"){\r\n        this.title = \"Регистрация\"\r\n        this.subtitle = \"Вход\"\r\n        this.auth = \"Зарегистрироваться\"\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n\r\n/* .input-enter-active, .input-leave-active {\r\n  transition: opacity 500ms;\r\n}\r\n\r\n.input-enter, .input-leave-to {\r\n  opacity: 0;\r\n} */\r\n\r\n\r\n\r\n/* .section__subtitle:active  .section__input{\r\n\r\n}\r\n */\r\n\r\n/* \r\n\r\n.section__auth:target  .section__title\r\n {     transform: translate(80px,0);\r\n\r\n\r\n }  \r\n\r\n .section__auth:active .section__subtitle {\r\n    transform: translate(-250px,0);\r\n}  \r\n */\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}