{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      login: '',\n      mail: '',\n      password: '',\n      confirm_password: '',\n      title: 'Регистрация',\n      subtitle: 'Вход',\n      auth: 'Зарегистрироваться',\n      errors: []\n    };\n  },\n  mounted() {\n    if (localStorage.getItem('AccessToken')) {\n      window.location.href = \"http://localhost:8080/home\";\n    }\n  },\n  methods: {\n    authUser(event) {\n      event.preventDefault();\n      this.validForm();\n      if (this.errors.length == 0) {\n        let data = {};\n        let type = '';\n        if (this.auth == 'Зарегистрироваться') {\n          data = {\n            username: this.login,\n            email: this.mail,\n            password: this.password\n          };\n          type = 'registration';\n        } else if (this.auth == 'Войти') {\n          data = {\n            email: this.mail,\n            password: this.password\n          };\n          type = 'login';\n        }\n        axios.post(`http://localhost:5000/auth/${type}`, data).then(response => {\n          this.login = '';\n          this.mail = '', this.password = '', this.confirm_password = '';\n          const token = response.data?.AccessToken;\n          localStorage.setItem('AccessToken', token); // write\n          // console.log(localStorage.getItem('AccessToken')); // read\n          if (localStorage.getItem('AccessToken')) {\n            window.location.href = \"http://localhost:8080/home\";\n          }\n        }).catch(error => {\n          this.errors = [error.response.data?.errors];\n          this.errors = [error.response.data?.message];\n          if (error.response.data?.message == \"Почтовый адрес уже был зарегистрирован\") {\n            this.mail = \"\";\n          }\n          if (error.response.data?.message == \"Пользователь с таким именем уже существует\") {\n            this.login = \"\";\n          }\n          if (error.response.data?.message == \"Введен неверный пароль\") {\n            this.password = \"\";\n          }\n        });\n      }\n    },\n    validForm() {\n      const regex = /^(?=.*[A-Za-z])([A-Za-z0-9]+)$/;\n      this.errors = [];\n      if (this.title == 'Регистрация') {\n        if (this.password !== this.confirm_password) {\n          this.errors.push(\"Пароли не совпадают\");\n          this.password = '';\n          this.confirm_password = '';\n        }\n      }\n      if (!regex.test(this.password)) {\n        this.errors.push(\"Пароль не прошел валидацию\");\n        this.password = '';\n        this.confirm_password = '';\n      }\n    },\n    AuthOrReg() {\n      this.errors = [];\n      this.login = '';\n      this.mail = '', this.password = '', this.confirm_password = '';\n      if (this.subtitle == \"Вход\") {\n        this.title = \"Вход\";\n        this.subtitle = \"Регистрация\";\n        this.auth = \"Войти\";\n      } else if (this.subtitle == \"Регистрация\") {\n        this.title = \"Регистрация\";\n        this.subtitle = \"Вход\";\n        this.auth = \"Зарегистрироваться\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","login","mail","password","confirm_password","title","subtitle","auth","errors","mounted","localStorage","getItem","window","location","href","methods","authUser","event","preventDefault","validForm","length","type","username","email","post","then","response","token","AccessToken","setItem","catch","error","message","regex","push","test","AuthOrReg"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AuthorizationClient.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth\">\r\n    <div class=\"section\">\r\n    <div class=\"section__item\">\r\n      <div class=\"section__logo\">\r\n        <img class=\"logo__img\" src=\"../assets/images/auth/logo.svg\" alt=\"logo\">\r\n        <h3 class=\"section__text logo__text\">Task Unity Tech</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"section__item\">\r\n      <div class=\"section__auth\">\r\n        <h3 class=\"section__title\">{{ title }}</h3>\r\n        <button @click=\"AuthOrReg\" class=\"section__subtitle\">{{ subtitle }}</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"section__item\">\r\n\r\n      <form action=\"\" method=\"post\" @submit=\"authUser\">\r\n          <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"text\" placeholder=\"Имя пользователя\" required v-model=\"login\">\r\n          <input class=\"section__input\" type=\"email\" placeholder=\"E-mail\" v-model=\"mail\" required>\r\n          <input class=\"section__input\" type=\"password\" placeholder=\"Пароль\" v-model=\"password\" required minlength=\"8\" maxlength=\"128\" pattern=\"[0-9A-Za-z]+\" title=\"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\">\r\n          <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"password\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\" required minlength=\"8\" maxlength=\"128\" pattern=\"[0-9A-Za-z]+\" title=\"Пароль может содержать латинские буквы и цифры. Обязательно наличие 1 буквы.\">\r\n\r\n          <div class=\"section__alert-forget\">\r\n            <span id=\"blink1\" class=\"section__alert\">{{this?.errors[0]}} </span>\r\n            <a v-if=\"this.title == 'Вход'\" class=\"section__forget\" href=\"#\">Забыли пароль?</a>\r\n          </div>  \r\n          <button type=\"submit\" class=\"section__button\">{{ auth }}</button>\r\n      </form>\r\n\r\n      <div class=\"section__item\">\r\n          <div class=\"section__text-or\">\r\n              <span>или</span>\r\n            </div>\r\n\r\n          <div class=\"section__bt-container\">\r\n            <a href=\"https://accounts.google.com/o/oauth2/auth?client_id=429829081659-l7g63tlu2g45o46vkf54l5sk8i2rqjq1&redirect_uri=http://localhost:8080/waiting&response_type=code&scope=https://www.googleapis.com/auth/userinfo.profile&state=123\"><img src=\"../assets/images/auth/google.svg\"></a>\r\n\r\n            <a href=\"https://github.com/login/oauth/authorize?client_id=47940374a073fa8e62aa&redirect_uri=http://localhost:8080/waiting\"> <img src=\"../assets/images/auth/github.svg\"></a>\r\n\r\n            <a href=\"https://oauth.yandex.ru/authorize?client_id=5b1b15fa24b542948bbd72ac320d6b9f&redirect_uri=http://localhost:8080/waiting&response_type=code\"> <img src=\"../assets/images/auth/facebook.svg\"></a>\r\n          </div>\r\n      </div>\r\n      \r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  data(){\r\n    return { \r\n      login: '', \r\n      mail: '', \r\n      password: '', \r\n      confirm_password: '', \r\n\r\n\r\n      title: 'Регистрация', \r\n      subtitle: 'Вход', \r\n      auth: 'Зарегистрироваться',\r\n      errors: [],\r\n\r\n    }\r\n  }, \r\n\r\n  mounted(){\r\n    if(localStorage.getItem('AccessToken')){\r\n      window.location.href = \"http://localhost:8080/home\"\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    authUser(event) {\r\n      event.preventDefault();\r\n      this.validForm()\r\n\r\n      if(this.errors.length == 0){\r\n        let data = {}\r\n        let type = ''\r\n\r\n        if(this.auth == 'Зарегистрироваться'){\r\n          data = {\r\n          username: this.login,\r\n          email: this.mail,\r\n          password: this.password,\r\n            } \r\n          \r\n          type = 'registration'\r\n        }\r\n        else if (this.auth == 'Войти') {\r\n          data = {\r\n            email: this.mail,\r\n            password: this.password,\r\n          }\r\n\r\n          type = 'login'\r\n        }\r\n        axios.post(`http://localhost:5000/auth/${type}`, data)\r\n          .then((response) => {\r\n              this.login = ''\r\n              this.mail = '', \r\n              this.password = '', \r\n              this.confirm_password = ''\r\n\r\n            \r\n                const token = response.data?.AccessToken\r\n                localStorage.setItem('AccessToken', token); // write\r\n                // console.log(localStorage.getItem('AccessToken')); // read\r\n                if(localStorage.getItem('AccessToken')){\r\n                  window.location.href = \"http://localhost:8080/home\"\r\n                }\r\n                \r\n          }\r\n          )\r\n\r\n          .catch((error) => {\r\n            this.errors = [error.response.data?.errors]\r\n            this.errors = [error.response.data?.message]\r\n\r\n            if(error.response.data?.message == \"Почтовый адрес уже был зарегистрирован\"){\r\n              this.mail = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Пользователь с таким именем уже существует\"){\r\n              this.login = \"\"\r\n            }\r\n            if(error.response.data?.message == \"Введен неверный пароль\"){\r\n              this.password = \"\"\r\n            }\r\n\r\n          })   \r\n      }\r\n      \r\n    },     \r\n    validForm(){\r\n      const regex = /^(?=.*[A-Za-z])([A-Za-z0-9]+)$/;\r\n      this.errors = []\r\n      if(this.title == 'Регистрация'){\r\n        if(this.password !== this.confirm_password){\r\n                this.errors.push(\"Пароли не совпадают\")\r\n                this.password = ''\r\n                this.confirm_password = ''\r\n              }\r\n      }\r\n      \r\n      if(!regex.test(this.password)){\r\n        this.errors.push(\"Пароль не прошел валидацию\")\r\n        this.password = ''\r\n        this.confirm_password = ''\r\n      }\r\n    },\r\n    AuthOrReg(){\r\n\r\n      this.errors = []\r\n      this.login = ''\r\n      this.mail = '', \r\n      this.password = '', \r\n      this.confirm_password = ''\r\n\r\n      if(this.subtitle == \"Вход\"){\r\n        this.title = \"Вход\"\r\n        this.subtitle = \"Регистрация\"\r\n        this.auth = \"Войти\"\r\n\r\n      }\r\n\r\n      else if(this.subtitle == \"Регистрация\"){\r\n        this.title = \"Регистрация\"\r\n        this.subtitle = \"Вход\"\r\n        this.auth = \"Зарегистрироваться\"\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}