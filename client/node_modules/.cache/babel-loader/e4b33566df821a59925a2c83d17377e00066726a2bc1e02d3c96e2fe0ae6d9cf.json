{"ast":null,"code":"import { mapGetters, mapMutations } from 'vuex';\nimport Task from './../Task/Task';\nexport default {\n  data() {\n    return {\n      checkedTasks: []\n    };\n  },\n  computed: {\n    ...mapGetters(['USER_TASKLISTS'])\n  },\n  methods: {\n    Task,\n    ...mapMutations(['UPDATE_VISIBLE_TASKLIST', 'UPDATE_SELECT_TASKS']),\n    changeToggle(index) {\n      this.UPDATE_VISIBLE_TASKLIST(index);\n    },\n    selectTasks() {\n      this.UPDATE_SELECT_TASKS(this.checkedTasks);\n    },\n    tasklistLabel(task) {\n      console.log(task);\n      // const colorTask = Task.calculateTaskColor(task)\n      // return {\n      //   background: colorTask,\n      //   border: `1px solid ${colorTask}`\n      // }\n    },\n\n    // заготовка под добавление людей\n    addPeople() {}\n  }\n  // watch: {\n  //   checkedTasks(newCheckedTasks) {\n  //     // Этот код будет выполнен, когда свойство checkedTasks изменится\n  //     this.UPDATE_VISIBLE_TASKLIST(newCheckedTasks);\n  //   }\n};","map":{"version":3,"names":["mapGetters","mapMutations","Task","data","checkedTasks","computed","methods","changeToggle","index","UPDATE_VISIBLE_TASKLIST","selectTasks","UPDATE_SELECT_TASKS","tasklistLabel","task","console","log","addPeople"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\LeftNavbar.vue"],"sourcesContent":["<template>\r\n  <div class=\"leftnavbar\">\r\n    <div class=\"people-container\">\r\n      <img\r\n        class=\"logo__img people-container__logo\"\r\n        src=\"../../assets/images/auth/logo.svg\"\r\n        alt=\"logo\"\r\n      />\r\n\r\n      <div class=\"people-container__user-container user-container\">\r\n        <h3 class=\"user-container__user-count\">3</h3>\r\n        <img src=\"../../assets/images/home/line__horizont.svg\" alt=\"\" />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <button class=\"user-container__add-user\" @click=\"addPeople()\">\r\n          <img src=\"../../assets/images/home/addpeople.svg\" alt=\"\" />\r\n        </button>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n\r\n    <div class=\"task-container\">\r\n      <h3 class=\"logo__text task-container__logo-text\">Task Unity Tech</h3>\r\n      <div\r\n      v-for=\"(tasklist, index) in USER_TASKLISTS\"\r\n      :key=\"index\"\r\n      class=\"task-container__tasklist tasklist\"\r\n      >\r\n        <div class=\"tasklist__title\">\r\n          <h4 class=\"tasklist__text\">{{ tasklist.title }}</h4>\r\n          <div\r\n            :class=\"tasklist.toggleCircle ? 'circle-plus opened' : 'circle-plus closed'\"\r\n            @click=\"changeToggle(index)\"\r\n          >\r\n            <div class=\"circle\">\r\n              <div class=\"horizontal\"></div>\r\n              <div class=\"vertical\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div :class=\"{'visible' : tasklist.isTasklistVisible}\" class=\"tasklist__tasks\">\r\n          <label v-for=\"(task, taskIndex) in tasklist.tasks\" :key=\"taskIndex\" class=\"tasklist__label\" >\r\n            <input class=\"real-checkbox\" :value=\"task\" type=\"checkbox\" @change=\"selectTasks()\"  v-model=\"checkedTasks\"/>\r\n            <span class=\"custom-checkbox\" :style=\"tasklistLabel(task)\"></span>\r\n            {{ task.name }}\r\n          </label>\r\n        </div>\r\n    </div>\r\n\r\n      \r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n\r\n<script>\r\nimport { mapGetters, mapMutations } from 'vuex';\r\nimport Task from './../Task/Task'\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkedTasks: [],\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['USER_TASKLISTS']), \r\n  },\r\n  methods: {\r\n    Task,\r\n    ...mapMutations(['UPDATE_VISIBLE_TASKLIST', 'UPDATE_SELECT_TASKS']),\r\n    changeToggle(index) {\r\n      this.UPDATE_VISIBLE_TASKLIST(index)\r\n    },\r\n    selectTasks(){\r\n      this.UPDATE_SELECT_TASKS(this.checkedTasks)\r\n    },\r\n    tasklistLabel(task){\r\n      console.log(task)\r\n      // const colorTask = Task.calculateTaskColor(task)\r\n      // return {\r\n      //   background: colorTask,\r\n      //   border: `1px solid ${colorTask}`\r\n      // }\r\n    },\r\n\r\n    // заготовка под добавление людей\r\n    addPeople() {\r\n\r\n    }\r\n  },\r\n  // watch: {\r\n  //   checkedTasks(newCheckedTasks) {\r\n  //     // Этот код будет выполнен, когда свойство checkedTasks изменится\r\n  //     this.UPDATE_VISIBLE_TASKLIST(newCheckedTasks);\r\n  //   }\r\n}\r\n\r\n</script>\r\n  \r\n  <style >\r\n\r\n/* height: 300px; \r\n  overflow: auto;\r\n  transition: height 3s linear;  */\r\n</style>"],"mappings":"AAsEA,SAASA,UAAU,EAAEC,YAAW,QAAS,MAAM;AAC/C,OAAOC,IAAG,MAAO,gBAAe;AAChC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAEhB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGL,UAAU,CAAC,CAAC,gBAAgB,CAAC;EAClC,CAAC;EACDM,OAAO,EAAE;IACPJ,IAAI;IACJ,GAAGD,YAAY,CAAC,CAAC,yBAAyB,EAAE,qBAAqB,CAAC,CAAC;IACnEM,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACC,uBAAuB,CAACD,KAAK;IACpC,CAAC;IACDE,WAAWA,CAAA,EAAE;MACX,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACP,YAAY;IAC5C,CAAC;IACDQ,aAAaA,CAACC,IAAI,EAAC;MACjBC,OAAO,CAACC,GAAG,CAACF,IAAI;MAChB;MACA;MACA;MACA;MACA;IACF,CAAC;;IAED;IACAG,SAASA,CAAA,EAAG,CAEZ;EACF;EACA;EACA;EACA;EACA;EACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}