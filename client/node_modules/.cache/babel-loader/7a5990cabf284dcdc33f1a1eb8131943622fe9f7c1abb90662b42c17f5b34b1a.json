{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelRadio as _vModelRadio, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from './../assets/images/home/edited_task.svg';\nimport _imports_1 from './../assets/images/home/tasklist-more.svg';\nconst _hoisted_1 = {\n  class: \"form-task form-tasklist\"\n};\nconst _hoisted_2 = {\n  class: \"form-title-container\"\n};\nconst _hoisted_3 = {\n  class: \"form-title\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"form-text\"\n}, \" Тип задачи \", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"form-button-container\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"type-task-1\",\n  class: \"form-button\"\n}, \"Личное\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"type-task-2\",\n  class: \"form-button\"\n}, \"Рабочее\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1,\n  alt: \"\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_12 = [_hoisted_11];\nconst _hoisted_13 = {\n  class: \"form-color-select\"\n};\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"form-title\"\n}, \"Цвет\", -1 /* HOISTED */);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"form-submit\",\n  type: \"submit\"\n}, \"Создать\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ColorPicker = _resolveComponent(\"ColorPicker\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", _hoisted_3, _toDisplayString(_ctx.CHECKED_TASK.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = $event => this.editedTask = !this.editedTask)\n  }, _hoisted_5)]), _createElementVNode(\"form\", {\n    action: \"\",\n    type: \"post\",\n    onSubmit: _cache[9] || (_cache[9] = (...args) => _ctx.editTask && _ctx.editTask(...args)),\n    style: {\n      \"display\": \"flex\",\n      \"flex-direction\": \"column\",\n      \"row-gap\": \"20px\"\n    }\n  }, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-input\",\n    type: \"text\",\n    placeholder: \"Описание задачи\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.taskInfo = $event),\n    disabled: !$data.editedTask\n  }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, $data.taskInfo]])]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"type-task-1\",\n    name: \"radio-group\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.taskType = $event),\n    value: \"Personal\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, _ctx.taskType]]), _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"radio\",\n    id: \"type-task-2\",\n    name: \"radio-group\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.taskType = $event),\n    value: \"Working\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelRadio, _ctx.taskType]]), _hoisted_10, _createElementVNode(\"div\", {\n    class: \"form-button_add\",\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.addListType())\n  }, _hoisted_12)]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-input\",\n    type: \"text\",\n    placeholder: \"Дата начала\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.taskStartTime = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskStartTime]])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"taskListDate\",\n    ref: \"taskListDate\",\n    class: \"form-input\",\n    type: \"text\",\n    placeholder: \"Дата выполнения\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.taskListDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskListDate]])]), _createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createCommentVNode(\" <div class=\\\"form-color-button\\\" @click=\\\"selectColor()\\\"><ColorPicker v-model=\\\"color\\\" /></div> \"), _createVNode(_component_ColorPicker, {\n    modelValue: $data.taskListColor,\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.taskListColor = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _hoisted_15, _createElementVNode(\"button\", {\n    class: \"form-submit_exit\",\n    onClick: _cache[8] || (_cache[8] = $event => $options.closeTask())\n  }, \" Отмена \")], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","class","_createElementVNode","src","alt","_hoisted_4","for","_hoisted_11","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","CHECKED_TASK","name","onClick","_cache","$event","editedTask","action","onSubmit","args","editTask","style","placeholder","$data","taskInfo","disabled","_hoisted_7","_hoisted_8","id","taskType","value","_hoisted_9","_hoisted_10","addListType","taskStartTime","ref","taskListDate","_hoisted_13","_hoisted_14","_createCommentVNode","_createVNode","_component_ColorPicker","taskListColor","_hoisted_15","$options","closeTask"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\TaskApp.vue"],"sourcesContent":["<template>\r\n    <div class=\"form-task form-tasklist\">\r\n        <div class=\"form-title-container\">\r\n            <h3 class=\"form-title\">\r\n                {{ CHECKED_TASK.name }}\r\n            </h3>\r\n            <button type=\"button\" @click=\"this.editedTask = !this.editedTask\">\r\n                <img src=\"./../assets/images/home/edited_task.svg\" alt=\"\" />\r\n            </button>\r\n        </div>\r\n\r\n        <form\r\n            action=\"\"\r\n            type=\"post\"\r\n            @submit=\"editTask\"\r\n            style=\"display: flex; flex-direction: column; row-gap: 20px\"\r\n        >\r\n            <div>\r\n                <input\r\n                    class=\"form-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Описание задачи\"\r\n                    v-model=\"taskInfo\"\r\n                    :disabled=\"!editedTask\"\r\n                />\r\n            </div>\r\n            <h4 class=\"form-text\">\r\n                Тип задачи\r\n            </h4>\r\n\r\n            <div class=\"form-button-container\">\r\n                <input\r\n                    type=\"radio\"\r\n                    id=\"type-task-1\"\r\n                    name=\"radio-group\"\r\n                    v-model=\"taskType\"\r\n                    value=\"Personal\"\r\n                />\r\n                <label for=\"type-task-1\" class=\"form-button\">Личное</label>\r\n\r\n                <input\r\n                    type=\"radio\"\r\n                    id=\"type-task-2\"\r\n                    name=\"radio-group\"\r\n                    v-model=\"taskType\"\r\n                    value=\"Working\"\r\n                />\r\n                <label for=\"type-task-2\" class=\"form-button\">Рабочее</label>\r\n\r\n                <div class=\"form-button_add\" @click=\"addListType()\">\r\n                    <img\r\n                        src=\"./../assets/images/home/tasklist-more.svg\"\r\n                        alt=\"\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div>\r\n                <input\r\n                    class=\"form-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Дата начала\"\r\n                    v-model=\"taskStartTime\"\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <input\r\n                    id=\"taskListDate\"\r\n                    ref=\"taskListDate\"\r\n                    class=\"form-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Дата выполнения\"\r\n                    v-model=\"taskListDate\"\r\n                />\r\n            </div>\r\n\r\n            <div class=\"form-color-select\">\r\n                <h4 class=\"form-title\">Цвет</h4>\r\n                <!-- <div class=\"form-color-button\" @click=\"selectColor()\"><ColorPicker v-model=\"color\" /></div> -->\r\n                <ColorPicker v-model=\"taskListColor\" />\r\n            </div>\r\n\r\n            <button class=\"form-submit\" type=\"submit\">Создать</button>\r\n            <button class=\"form-submit_exit\" @click=\"closeTask()\">\r\n                Отмена\r\n            </button>\r\n        </form>\r\n    </div>\r\n\r\n   \r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\nexport default {\r\n    computed: {\r\n        ...mapGetters([\"CHECKED_TASK\"]),\r\n    },\r\n    data() {\r\n        return {\r\n            taskInfo: \"\",\r\n            taskStartTime: \"\", \r\n\r\n\r\n\r\n            taskListDate: \"\",\r\n\r\n            taskListColor: \"\",\r\n            taskListStartTime: \"\",\r\n            taskListEndTime: \"\",\r\n\r\n            editedTask: false,\r\n        };\r\n    },\r\n    methods: {\r\n        ...mapMutations([\"UPDATE_CHECKED_TASK\"]),\r\n        closeTask() {\r\n            this.UPDATE_CHECKED_TASK(undefined);\r\n        },\r\n    },\r\n    created() {\r\n        const checkedTask = this.CHECKED_TASK;\r\n        if (checkedTask) {\r\n            this.taskInfo = checkedTask.text || \"\";\r\n            this.taskStartTime = checkedTask.startTime || \"\";\r\n            this.taskEndTime = checkedTask.endTime || \"\";\r\n        }\r\n\r\n\r\n    // <li>ID - {{ CHECKED_TASK._id }}</li>\r\n    // <li>NAME - {{ CHECKED_TASK.name }}</li>\r\n    // <li>INFO - {{ CHECKED_TASK.text}}</li>\r\n    // <li>TYPE - {{ CHECKED_TASK.type }}</li>\r\n    // <li>START TIME - {{ CHECKED_TASK.startTime }}</li>\r\n    // <li>END TIME - {{ CHECKED_TASK.endTime }}</li>\r\n    // <li>OWNER ? - {{ CHECKED_TASK.owner }}</li> \r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.form-title-container {\r\n    display: flex;\r\n    column-gap: 5px;\r\n    justify-content: center;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}