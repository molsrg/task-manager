{"ast":null,"code":"import { mapGetters, mapMutations, mapActions } from \"vuex\";\n// eslint-disable-next-line no-unused-vars\nimport Task from '../../store/modules/Task/Task';\nexport default {\n  data() {\n    return {\n      checkedTasks: [],\n      taskName: '',\n      taskInfo: '',\n      taskTime: '',\n      taskType: '',\n      taskDate: ''\n    };\n  },\n  computed: {\n    ...mapGetters([\"USER_TASKLISTS\", 'CURRENT_WEEK', 'PRESENT_DAY'])\n  },\n  methods: {\n    ...mapMutations([\"UPDATE_VISIBLE_TASKLIST\", \"UPDATE_SELECT_TASKS\"]),\n    ...mapActions(['GET_THIS_WEEK_TASKS', 'GET_THIS_DAY_TASKS', 'ADDED_TASKLIST', 'ADD_TASK']),\n    changeToggle(index) {\n      this.UPDATE_VISIBLE_TASKLIST(index);\n    },\n    selectTasks() {\n      this.UPDATE_SELECT_TASKS(this.checkedTasks);\n    },\n    tasklistLabel() {\n      // const colorTask = Task.calculateTaskColor(task)\n      // return {\n      //   background: colorTask,\n      //   border: `1px solid ${colorTask}`\n      // }\n    },\n    addedTask() {\n      this.ADD_TASK();\n      location.reload();\n    },\n    addedTasklist() {\n      this.ADDED_TASKLIST();\n    },\n    // заготовка под добавление людей\n    addPeople() {},\n    goOut() {\n      localStorage.removeItem('AccessToken');\n      window.location.href = \"http://localhost:8080/\";\n    },\n    updateTaskList() {\n      console.log(1);\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK);\n      this.GET_THIS_DAY_TASKS(this.PRESENT_DAY);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","mapActions","Task","data","checkedTasks","taskName","taskInfo","taskTime","taskType","taskDate","computed","methods","changeToggle","index","UPDATE_VISIBLE_TASKLIST","selectTasks","UPDATE_SELECT_TASKS","tasklistLabel","addedTask","ADD_TASK","location","reload","addedTasklist","ADDED_TASKLIST","addPeople","goOut","localStorage","removeItem","window","href","updateTaskList","console","log","GET_THIS_WEEK_TASKS","CURRENT_WEEK","GET_THIS_DAY_TASKS","PRESENT_DAY"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\LeftNavbar.vue"],"sourcesContent":["<template>\r\n  <div class=\"leftnavbar\">\r\n    <div class=\"people-container\">\r\n      <img\r\n        class=\"logo__img people-container__logo\"\r\n        src=\"../../assets/images/auth/logo.svg\"\r\n        alt=\"logo\"\r\n      />\r\n\r\n      <div class=\"people-container__user-container user-container\">\r\n        <h3 class=\"user-container__user-count\">3</h3>\r\n        <img src=\"../../assets/images/home/line__horizont.svg\" alt=\"\" />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <img\r\n          src=\"../../assets/images/home/zaxar.png\"\r\n          alt=\"\"\r\n          class=\"user-container__user\"\r\n        />\r\n        <button class=\"user-container__add-user\" @click=\"addPeople()\">\r\n          <img src=\"../../assets/images/home/addpeople.svg\" alt=\"\" />\r\n        </button>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n\r\n    <div class=\"task-container\">\r\n      <h3 class=\"logo__text task-container__logo-text\">Task Unity Tech</h3>\r\n      <div\r\n        v-for=\"(tasklist, index) in USER_TASKLISTS\"\r\n        :key=\"index\"\r\n        class=\"task-container__tasklist tasklist\"\r\n      >\r\n        <div class=\"tasklist__title\">\r\n          <h4 class=\"tasklist__text\">{{ tasklist.title }}</h4>\r\n          <div\r\n            :class=\"\r\n              tasklist.toggleCircle\r\n                ? 'circle-plus opened'\r\n                : 'circle-plus closed'\r\n            \"\r\n            @click=\"changeToggle(index)\"\r\n          >\r\n            <div class=\"circle\" v-if=\"tasklist.tasks.length > 0\">\r\n              <div class=\"horizontal\"></div>\r\n              <div class=\"vertical\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          :class=\"{ visible: tasklist.isTasklistVisible && tasklist.tasks.length > 0}\"\r\n          class=\"tasklist__tasks\"\r\n        >\r\n          <label\r\n            v-for=\"task in tasklist.tasks\"\r\n            :key=\"task.id\"\r\n            class=\"tasklist__label\"\r\n          >\r\n            <input\r\n              class=\"real-checkbox\"\r\n              :value=\"task\"\r\n              type=\"checkbox\"\r\n              @change=\"selectTasks()\"\r\n              v-model=\"checkedTasks\"\r\n            />\r\n            <span class=\"custom-checkbox\" :style=\"tasklistLabel(task)\"></span>\r\n            {{ task.name }}\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <button class=\"task-container__tasklist tasklist\" @click=\"addedTask\">\r\n        Добавить задачу (заглушка)\r\n      </button>\r\n\r\n\r\n      <button class=\"task-container__tasklist tasklist\" @click=\"addedTasklist\">\r\n        Добавить лист (заглушка)\r\n      </button>\r\n      <form action=\"\" type=\"POST\">\r\n        <input type=\"text\" placeholder=\"Название задачи\" required v-model=\"taskName\">\r\n        <input type=\"text\" placeholder=\"Описание задачи\" required v-model=\"taskInfo\">\r\n        <div>\r\n          <input type=\"radio\" id=\"taskType1\" v-model=\"taskType\" value=\"Personal\" />\r\n          <label for=\"taskType1\">Личное</label>\r\n\r\n          <input type=\"radio\" id=\"taskType2\" v-model=\"taskType\" value=\"Working\" />\r\n          <label for=\"taskType2\">Рабочее</label>\r\n\r\n          <input type=\"radio\" id=\"taskType3\" v-model=\"taskType\" value=\"Optional\" />\r\n          <label for=\"taskType3\">Нераспределённый</label>\r\n          </div>\r\n\r\n          <label for=\"start-time\">Выберите время и дату начала задачи</label>\r\n          <input id=\"start-time\" type=\"datetime-local\" placeholder=\"Начало задачи\" required v-model=\"taskStartTime\">\r\n          <label for=\"end-time\">Choose a time for your appointment:</label>\r\n          <input type=\"datetime-local\" id=\"end-time\" placeholder=\"Окончание задачи\" required v-model=\"taskEndTime\">\r\n      </form>\r\n\r\n\r\n      <button class=\"task-container__tasklist tasklist\" @click=\"goOut\">\r\n        Выйти с кабинета\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n\r\n<script>\r\n\r\nimport { mapGetters, mapMutations, mapActions } from \"vuex\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport Task from '../../store/modules/Task/Task'\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkedTasks: [],\r\n      taskName: '',\r\n      taskInfo: '',\r\n      taskTime: '', \r\n      taskType: '',\r\n      taskDate: ''\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"USER_TASKLISTS\", 'CURRENT_WEEK', 'PRESENT_DAY', ]),\r\n  },\r\n  methods: {\r\n    ...mapMutations([\"UPDATE_VISIBLE_TASKLIST\", \"UPDATE_SELECT_TASKS\"]),\r\n    ...mapActions(['GET_THIS_WEEK_TASKS','GET_THIS_DAY_TASKS', 'ADDED_TASKLIST', 'ADD_TASK']), \r\n\r\n    changeToggle(index) {\r\n      this.UPDATE_VISIBLE_TASKLIST(index);\r\n    },\r\n    selectTasks() {\r\n      this.UPDATE_SELECT_TASKS(this.checkedTasks);\r\n    },\r\n    tasklistLabel() {\r\n      // const colorTask = Task.calculateTaskColor(task)\r\n      // return {\r\n      //   background: colorTask,\r\n      //   border: `1px solid ${colorTask}`\r\n      // }\r\n    },\r\n    addedTask() {\r\n        this.ADD_TASK();\r\n        location.reload();\r\n    },\r\n\r\n    \r\n    addedTasklist(){\r\n      this.ADDED_TASKLIST()\r\n    },\r\n\r\n    // заготовка под добавление людей\r\n    addPeople() {},\r\n\r\n    goOut(){\r\n      localStorage.removeItem('AccessToken')\r\n      window.location.href = \"http://localhost:8080/\"\r\n    },\r\n\r\n    updateTaskList(){\r\n      console.log(1)\r\n      this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK)\r\n      this.GET_THIS_DAY_TASKS(this.PRESENT_DAY)\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAqHA,SAASA,UAAU,EAAEC,YAAY,EAAEC,UAAS,QAAS,MAAM;AAC3D;AACA,OAAOC,IAAG,MAAO,+BAA8B;AAC/C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGX,UAAU,CAAC,CAAC,gBAAgB,EAAE,cAAc,EAAE,aAAa,CAAG;EACnE,CAAC;EACDY,OAAO,EAAE;IACP,GAAGX,YAAY,CAAC,CAAC,yBAAyB,EAAE,qBAAqB,CAAC,CAAC;IACnE,GAAGC,UAAU,CAAC,CAAC,qBAAqB,EAAC,oBAAoB,EAAE,gBAAgB,EAAE,UAAU,CAAC,CAAC;IAEzFW,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACC,uBAAuB,CAACD,KAAK,CAAC;IACrC,CAAC;IACDE,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACZ,YAAY,CAAC;IAC7C,CAAC;IACDa,aAAaA,CAAA,EAAG;MACd;MACA;MACA;MACA;MACA;IAAA,CACD;IACDC,SAASA,CAAA,EAAG;MACR,IAAI,CAACC,QAAQ,CAAC,CAAC;MACfC,QAAQ,CAACC,MAAM,CAAC,CAAC;IACrB,CAAC;IAGDC,aAAaA,CAAA,EAAE;MACb,IAAI,CAACC,cAAc,CAAC;IACtB,CAAC;IAED;IACAC,SAASA,CAAA,EAAG,CAAC,CAAC;IAEdC,KAAKA,CAAA,EAAE;MACLC,YAAY,CAACC,UAAU,CAAC,aAAa;MACrCC,MAAM,CAACR,QAAQ,CAACS,IAAG,GAAI,wBAAuB;IAChD,CAAC;IAEDC,cAAcA,CAAA,EAAE;MACdC,OAAO,CAACC,GAAG,CAAC,CAAC;MACb,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACC,YAAY;MAC1C,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACC,WAAW;IAC1C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}