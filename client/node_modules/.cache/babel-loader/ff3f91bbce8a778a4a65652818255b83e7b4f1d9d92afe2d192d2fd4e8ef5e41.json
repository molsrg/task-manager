{"ast":null,"code":"export default {\n  data() {\n    return {\n      login: '',\n      mail: '',\n      password: '',\n      confirm_password: '',\n      title: 'Регистрация',\n      subtitle: 'Вход'\n    };\n  },\n  methods: {\n    authUser() {\n      console.log(\"Hello!\");\n    },\n    AuthOrReg() {\n      if (this.subtitle == \"Вход\") {\n        this.title = \"Вход\";\n        this.subtitle = \"Регистрация\";\n      } else if (this.subtitle == \"Регистрация\") {\n        this.title = \"Регистрация\";\n        this.subtitle = \"Вход\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","login","mail","password","confirm_password","title","subtitle","methods","authUser","console","log","AuthOrReg"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Auth\\AuthorizationClient.vue"],"sourcesContent":["<template>\r\n  <div class=\"section\">\r\n    <div class=\"section__item\">\r\n      <div class=\"section__logo\">\r\n        <img class=\"logo\" src=\"../../assets/images/auth/logo.svg\" alt=\"logo\">\r\n        <h3 class=\"section__text\">Task Unity Tech</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"section__item\">\r\n      <div class=\"section__auth\">\r\n        <h3 class=\"section__title\">{{ title }}</h3>\r\n        <button @click=\"AuthOrReg\" class=\"section__subtitle\">{{ subtitle }}</button>\r\n      </div>\r\n      \r\n    </div>\r\n    <div class=\"section__item\">\r\n      <form action=\"\" method=\"post\">\r\n        <input v-if=\"this.title == 'Регистрация' \" class=\"section__input\" type=\"text\" placeholder=\"Имя пользователя\" v-model=\"login\">\r\n        <input class=\"section__input\" type=\"email\" placeholder=\"E-mail\" v-model=\"mail\">\r\n        <input class=\"section__input\" type=\"password\" placeholder=\"Пароль\" v-model=\"password\">\r\n        <input v-if=\"this.title == 'Регистрация'\" class=\"section__input\" type=\"password\" placeholder=\"Подтверждение пароля\" v-model=\"confirm_password\">\r\n        <a v-if=\"this.title == 'Вход'\" class=\"section__forget\" href=\"#\">Забыли пароль?</a>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"section__item\">\r\n      <button type=\"submit\" class=\"section__button\" @click=\"authUser\">Зарегистрироваться</button>\r\n      <div class=\"title\">\r\n        <span>или</span>\r\n      </div>\r\n\r\n      <div class=\"section__bt-container\">\r\n        <a href=\"#\"><img src=\"../../assets/images/auth/google.svg\"></a>\r\n        <a href=\"#\"><img src=\"../../assets/images/auth/github.svg\"></a>\r\n        <a href=\"#\"> <img src=\"../../assets/images/auth/facebook.svg\"></a>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"title\">\r\n    <span>\r\n        Наш заголовок\r\n    </span>\r\n</div>\r\n  </div>\r\n\r\n  <!-- <img :src=\"flag == true ? require('../../assets/images/auth/ile.png') : require('../../assets/images/auth/ile2.png')\"> -->\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data(){\r\n    return { \r\n      login: '', \r\n      mail: '', \r\n      password: '', \r\n      confirm_password: '', \r\n\r\n      title: 'Регистрация', \r\n      subtitle: 'Вход'\r\n\r\n    }\r\n  }, \r\n  methods: {\r\n    authUser(){\r\n      console.log(\"Hello!\")\r\n    }, \r\n    AuthOrReg(){\r\n      if(this.subtitle == \"Вход\"){\r\n        this.title = \"Вход\"\r\n        this.subtitle = \"Регистрация\"\r\n      }\r\n\r\n      else if(this.subtitle == \"Регистрация\"){\r\n        this.title = \"Регистрация\"\r\n        this.subtitle = \"Вход\"\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.title {\r\n    overflow: hidden;\r\n}\r\n.title span {\r\n\r\n}\r\n.title:before,\r\n.title:after {\r\n    /* Обязательно указываем пустое свойство content, \r\n    ** иначе псевдоэлементы не появятся на сайте */\r\n    content: \"\";\r\n    /* Указываем что наши линии будут строчно-блочные и \r\n    ** выравнивание по высоте - по центру */\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    /* Задаем ширину 100% и выбираем высоту линии, \r\n    ** в нашем примере она равна 4 пикселям */\r\n    width: 100%;\r\n    height: 4px;\r\n    /* Добавляем цвет для линии */\r\n    background-color: #00cf00;\r\n    /* Добавляем пседоэлемантам возможность изменить \r\n    ** позицию линии, для создания отступов от текста */\r\n    position: relative;\r\n}\r\n.title:before {\r\n    /* Смещаем левую линию на 100% влево, чтобы линия \r\n    ** встала рядом с текстом слева */\r\n    margin-left: -100%;\r\n    /* Указываем в пикселях отступ линии от текста заголовка */\r\n    left: -14px;\r\n}\r\n.title:after {\r\n    /* Смещаем правую линию на 100% вправо, чтобы \r\n    ** линия встала рядом с текстом справа */\r\n    margin-right: -100%;\r\n    /* Указываем в пикселях отступ линии от текста заголовка */\r\n    right: -14px;\r\n}\r\n</style>"],"mappings":"AAoDA,eAAe;EACbA,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,gBAAgB,EAAE,EAAE;MAEpBC,KAAK,EAAE,aAAa;MACpBC,QAAQ,EAAE;IAEZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAE;MACRC,OAAO,CAACC,GAAG,CAAC,QAAQ;IACtB,CAAC;IACDC,SAASA,CAAA,EAAE;MACT,IAAG,IAAI,CAACL,QAAO,IAAK,MAAM,EAAC;QACzB,IAAI,CAACD,KAAI,GAAI,MAAK;QAClB,IAAI,CAACC,QAAO,GAAI,aAAY;MAC9B,OAEK,IAAG,IAAI,CAACA,QAAO,IAAK,aAAa,EAAC;QACrC,IAAI,CAACD,KAAI,GAAI,aAAY;QACzB,IAAI,CAACC,QAAO,GAAI,MAAK;MACvB;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}