{"ast":null,"code":"export default {\n  // Функция для вычисления фона задачи\n  calculateTaskColor(task) {\n    if (task.type == \"EveryDay\") {\n      return \"#C4D7DA\";\n    }\n    if (task.type == \"Working\") {\n      return \"#FFDEBF\";\n    }\n    if (task.type == \"Common\") {\n      return \"#DDC9C3\";\n    }\n  },\n  // Функция для вычисления длины задачи в пикселях\n  calculateTaskLengthInPixels(task) {\n    const [startTime, endTime] = task.time.split(\" - \");\n\n    // Разбиваем время начала и времени окончания на часы и минуты\n    const [startHour, startMinute] = startTime.split(\":\").map(Number);\n    const [endHour, endMinute] = endTime.split(\":\").map(Number);\n\n    // Вычисляем продолжительность задачи в минутах\n    const durationInMinutes = (endHour - startHour) * 60 + (endMinute - startMinute);\n\n    // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\n    const lengthInPixels = durationInMinutes / 60 * 80;\n    // Добавляем 10px за каждый пройденный час\n    if (endHour - startHour > 1) {\n      const addedHours = endHour - startHour - 1;\n      let additionalPixels = addedHours * 9;\n      return lengthInPixels + additionalPixels;\n    }\n    return lengthInPixels;\n  },\n  calculateLeftPosition(task, currentWeek) {\n    if (task && task.date) {\n      const date = task.date.split(\"-\");\n      for (let i = 0; i < currentWeek.length; i++) {\n        if (currentWeek[i][1] == date[0]) {\n          return i * 180 + 65;\n        }\n      }\n    } else {\n      // Обработка случая, когда task или task.date не существует\n      console.error(\"Invalid task object:\", task);\n    }\n  },\n  calculateTaskStartPosition(task) {\n    const [startTime] = task.time.split(' - ');\n    const [startHour, startMinute] = startTime.split(':').map(Number);\n    const totalMinutes = (startHour - 1) * 60 + startMinute;\n    const startPosition = totalMinutes / 60 * 87;\n    if (startMinute == 0) {\n      console.log(startPosition);\n      return startPosition + 5 - 20;\n    }\n    console.log(startPosition);\n    return startPosition;\n  }\n};","map":{"version":3,"names":["calculateTaskColor","task","type","calculateTaskLengthInPixels","startTime","endTime","time","split","startHour","startMinute","map","Number","endHour","endMinute","durationInMinutes","lengthInPixels","addedHours","additionalPixels","calculateLeftPosition","currentWeek","date","i","length","console","error","calculateTaskStartPosition","totalMinutes","startPosition","log"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/components/Task/Task.js"],"sourcesContent":["export default {\r\n        \r\n    // Функция для вычисления фона задачи\r\n    calculateTaskColor(task) {\r\n        if (task.type == \"EveryDay\") {\r\n        return \"#C4D7DA\";\r\n        }\r\n        if (task.type == \"Working\") {\r\n        return \"#FFDEBF\";\r\n        }\r\n        if (task.type == \"Common\") {\r\n        return \"#DDC9C3\";\r\n        }\r\n    },\r\n\r\n    // Функция для вычисления длины задачи в пикселях\r\n    calculateTaskLengthInPixels(task) {\r\n        const [startTime, endTime] = task.time.split(\" - \");\r\n\r\n        // Разбиваем время начала и времени окончания на часы и минуты\r\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n        // Вычисляем продолжительность задачи в минутах\r\n        const durationInMinutes =\r\n        (endHour - startHour) * 60 + (endMinute - startMinute);\r\n        \r\n        // Вычисляем длину задачи в пикселях (1 час = 80 пикселей)\r\n        const lengthInPixels = (durationInMinutes / 60) * 80;\r\n        // Добавляем 10px за каждый пройденный час\r\n        if (endHour - startHour > 1) {\r\n        const addedHours = endHour - startHour - 1;\r\n        let additionalPixels = addedHours * 9;\r\n        return lengthInPixels + additionalPixels;\r\n        }\r\n\r\n        return lengthInPixels;\r\n    },\r\n\r\n    calculateLeftPosition(task, currentWeek) {\r\n        if (task && task.date) {\r\n            const date = task.date.split(\"-\");\r\n            for (let i = 0; i < currentWeek.length; i++) {\r\n                if (currentWeek[i][1] == date[0]) {\r\n                    return i * 180 + 65;\r\n                }\r\n            }\r\n        } else {\r\n            // Обработка случая, когда task или task.date не существует\r\n            console.error(\"Invalid task object:\", task);\r\n        }\r\n    },\r\n    \r\n    calculateTaskStartPosition(task) {\r\n        const [startTime] = task.time.split(' - ');\r\n        const [startHour, startMinute] = startTime.split(':').map(Number);\r\n        const totalMinutes = (startHour - 1)  * 60 + startMinute;\r\n\r\n        const startPosition = totalMinutes / 60 * 87\r\n        if (startMinute == 0){ \r\n            console.log(startPosition)\r\n            return startPosition + 5 - 20\r\n        }\r\n        console.log(startPosition)\r\n        return startPosition;\r\n    },\r\n};\r\n"],"mappings":"AAAA,eAAe;EAEX;EACAA,kBAAkBA,CAACC,IAAI,EAAE;IACrB,IAAIA,IAAI,CAACC,IAAI,IAAI,UAAU,EAAE;MAC7B,OAAO,SAAS;IAChB;IACA,IAAID,IAAI,CAACC,IAAI,IAAI,SAAS,EAAE;MAC5B,OAAO,SAAS;IAChB;IACA,IAAID,IAAI,CAACC,IAAI,IAAI,QAAQ,EAAE;MAC3B,OAAO,SAAS;IAChB;EACJ,CAAC;EAED;EACAC,2BAA2BA,CAACF,IAAI,EAAE;IAC9B,MAAM,CAACG,SAAS,EAAEC,OAAO,CAAC,GAAGJ,IAAI,CAACK,IAAI,CAACC,KAAK,CAAC,KAAK,CAAC;;IAEnD;IACA,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGL,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAACC,MAAM,CAAC;IACjE,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGR,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAACC,MAAM,CAAC;;IAE3D;IACA,MAAMG,iBAAiB,GACvB,CAACF,OAAO,GAAGJ,SAAS,IAAI,EAAE,IAAIK,SAAS,GAAGJ,WAAW,CAAC;;IAEtD;IACA,MAAMM,cAAc,GAAID,iBAAiB,GAAG,EAAE,GAAI,EAAE;IACpD;IACA,IAAIF,OAAO,GAAGJ,SAAS,GAAG,CAAC,EAAE;MAC7B,MAAMQ,UAAU,GAAGJ,OAAO,GAAGJ,SAAS,GAAG,CAAC;MAC1C,IAAIS,gBAAgB,GAAGD,UAAU,GAAG,CAAC;MACrC,OAAOD,cAAc,GAAGE,gBAAgB;IACxC;IAEA,OAAOF,cAAc;EACzB,CAAC;EAEDG,qBAAqBA,CAACjB,IAAI,EAAEkB,WAAW,EAAE;IACrC,IAAIlB,IAAI,IAAIA,IAAI,CAACmB,IAAI,EAAE;MACnB,MAAMA,IAAI,GAAGnB,IAAI,CAACmB,IAAI,CAACb,KAAK,CAAC,GAAG,CAAC;MACjC,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QACzC,IAAIF,WAAW,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAID,IAAI,CAAC,CAAC,CAAC,EAAE;UAC9B,OAAOC,CAAC,GAAG,GAAG,GAAG,EAAE;QACvB;MACJ;IACJ,CAAC,MAAM;MACH;MACAE,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEvB,IAAI,CAAC;IAC/C;EACJ,CAAC;EAEDwB,0BAA0BA,CAACxB,IAAI,EAAE;IAC7B,MAAM,CAACG,SAAS,CAAC,GAAGH,IAAI,CAACK,IAAI,CAACC,KAAK,CAAC,KAAK,CAAC;IAC1C,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGL,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAACG,GAAG,CAACC,MAAM,CAAC;IACjE,MAAMe,YAAY,GAAG,CAAClB,SAAS,GAAG,CAAC,IAAK,EAAE,GAAGC,WAAW;IAExD,MAAMkB,aAAa,GAAGD,YAAY,GAAG,EAAE,GAAG,EAAE;IAC5C,IAAIjB,WAAW,IAAI,CAAC,EAAC;MACjBc,OAAO,CAACK,GAAG,CAACD,aAAa,CAAC;MAC1B,OAAOA,aAAa,GAAG,CAAC,GAAG,EAAE;IACjC;IACAJ,OAAO,CAACK,GAAG,CAACD,aAAa,CAAC;IAC1B,OAAOA,aAAa;EACxB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}