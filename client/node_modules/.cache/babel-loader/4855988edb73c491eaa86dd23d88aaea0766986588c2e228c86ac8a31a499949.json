{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-76d28682\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"calendar__component\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"margin-top\": \"24px\",\n    \"margin-left\": \"79px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"calendar\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"wrapper\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"loader\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_6 = [_hoisted_5];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SelectArrow = _resolveComponent(\"SelectArrow\");\n  const _component_CurrentWeek = _resolveComponent(\"CurrentWeek\");\n  const _component_CalendarApp = _resolveComponent(\"CalendarApp\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_SelectArrow)]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_CurrentWeek), _createCommentVNode(\" заглушка \"), $data.showLoader ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_6)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_CalendarApp)])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_hoisted_5","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_SelectArrow","_hoisted_3","_component_CurrentWeek","_createCommentVNode","$data","showLoader","_hoisted_4","_hoisted_6","_component_CalendarApp"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\Home\\CalendarComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"calendar__component\">\r\n    <div style=\"margin-top: 24px;\r\n    margin-left: 79px;\">\r\n        <SelectArrow></SelectArrow>\r\n    </div>\r\n\r\n    <div class=\"calendar\">\r\n      <CurrentWeek></CurrentWeek>\r\n    <!-- заглушка -->\r\n    <div class=\"wrapper\" v-if=\"showLoader\">\r\n      <span class=\"loader\"></span>\r\n    </div>\r\n    <CalendarApp></CalendarApp>\r\n  </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nimport SelectArrow from './CALENDAR/SelectArrow.vue'\r\nimport CurrentWeek from './CALENDAR/CurrentWeek.vue'\r\nimport CalendarApp from './CALENDAR/CalendarApp.vue'\r\n\r\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\r\nmoment.locale(\"ru\");\r\n\r\nexport default {\r\n  components: {\r\n    SelectArrow, \r\n    CurrentWeek,\r\n    CalendarApp\r\n  },\r\n  data() {\r\n    return {\r\n      // загрузка данных с сервера\r\n      showLoader: false,\r\n      showCalendar: true,\r\n\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['USER_REGISTRATIONS', 'CURRENT_WEEK', 'USER_TASKS_IN_CALENDAR', 'CHECKED_TASK']), \r\n    \r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.scrollToCurrentHour();\r\n    });\r\n\r\n    this.CHANGE_WEEK(moment())\r\n    this.GET_HOURS();\r\n    this.GET_PRESENT_DAY()\r\n    this.GET_MONTHS(this.USER_REGISTRATIONS);\r\n\r\n\r\n    this.GET_THIS_WEEK_TASKS(this.CURRENT_WEEK)\r\n    this.GET_THIS_DAY_TASKS(this.PRESENT_DAY)\r\n    this.GET_TASKLIST() // other\r\n  \r\n  },\r\n\r\n  methods: {\r\n    ...mapActions(['GET_HOURS', 'GET_MONTHS', 'GET_PRESENT_DAY', 'CHANGE_WEEK', 'GET_THIS_WEEK_TASKS','GET_THIS_DAY_TASKS', 'GET_TASKLIST']), \r\n    ...mapMutations(['UPDATE_WEEK', 'UPDATE_FIRST_DAY_WEEK', 'UPDATE_CHECKED_TASK']),\r\n\r\n    isTaskOverflowed(task) {\r\n      const taskElement = this.$refs[`${task.id}`]; \r\n      console.log(taskElement)\r\n    },\r\n\r\n    // обновляет выбранную задачу \r\n    showTask(task){\r\n      this.UPDATE_CHECKED_TASK(task)\r\n    },\r\n    // автоматически скролит к нужному времени при открытии страницы\r\n    scrollToCurrentHour() { \r\n      const taskboardContainer = document.querySelector('.calendar__taskboard'); \r\n      if (taskboardContainer) {\r\n        const currentHour = `${Number(moment().format('HH'))}:00`; \r\n        const hourElements = taskboardContainer.querySelectorAll('.time__name');\r\n        \r\n        for (let i = 0; i < hourElements.length; i++) {\r\n          if (hourElements[i].textContent === currentHour) {\r\n            const containerRect = taskboardContainer.getBoundingClientRect();\r\n            const hourRect = hourElements[i].getBoundingClientRect();\r\n            const scrollTop = hourRect.top - containerRect.top;\r\n            taskboardContainer.scrollTop = scrollTop;\r\n            return; // Выходим из цикла, когда нашли нужный час\r\n          }\r\n    }\r\n    \r\n    console.error(\"Час не найден в .calendar__taskboard.\");\r\n  } else {\r\n    console.error(\"Элемент .calendar__taskboard не найден в DOM.\");\r\n  }\r\n},\r\n\r\n  \r\n    \r\n    // старт загрузки\r\n    startLoading() {\r\n      this.showLoader = true;\r\n      this.showCalendar = false;\r\n    },\r\n    // процесс загрузки\r\n    async loading() {\r\n  return new Promise((resolve) => {\r\n    // Здесь выполняются асинхронные действия, например, задержка в 1 секунду\r\n    setTimeout(() => {\r\n      this.showLoader = false;\r\n      this.showCalendar = true;\r\n      resolve(); // Разрешить промис после выполнения\r\n    }, 1000);\r\n  });\r\n},\r\n    \r\n  },\r\n  \r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* .calendar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start; \r\n    justify-content: start;\r\n} */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n.wrapper {\r\n  width: 1340px;\r\n  margin: 100px auto;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.loader {\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 5px solid black;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAqB;;EACzBC,KACc,EADd;IAAA;IAAA;EAAA;AACc;;EAIdD,KAAK,EAAC;AAAU;;;EAGhBA,KAAK,EAAC;;gEACTE,mBAAA,CAA4B;EAAtBF,KAAK,EAAC;AAAQ;oBAApBG,UAA4B,C;;;;;uBAVhCC,mBAAA,CAcM,OAdNC,UAcM,GAbJH,mBAAA,CAGM,OAHNI,UAGM,GADFC,YAAA,CAA2BC,sBAAA,E,GAG/BN,mBAAA,CAOI,OAPJO,UAOI,GANFF,YAAA,CAA2BG,sBAAA,GAC7BC,mBAAA,cAAiB,EACUC,KAAA,CAAAC,UAAU,I,cAArCT,mBAAA,CAEM,OAFNU,UAEM,EAAAC,UAAA,K,mCACNR,YAAA,CAA2BS,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}