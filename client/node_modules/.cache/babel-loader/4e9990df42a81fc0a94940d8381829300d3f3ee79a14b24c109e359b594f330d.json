{"ast":null,"code":"import axios from 'axios';\nexport default {\n  state() {\n    return {\n      registration: '23-07-2023',\n      tasklist: [{\n        title: 'Этот день',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: []\n      }, {\n        title: ' неделя',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: [],\n        id: 2\n      }],\n      selectTask: []\n    };\n  },\n  getters: {\n    USER_REGISTRATIONS: state => {\n      return state.registration;\n    },\n    USER_TASKLISTS: state => {\n      return state.tasklist;\n    },\n    USER_SELECT_TASKS: state => {\n      return state.selectTask;\n    },\n    USER_TASKS_IN_CALENDAR: state => {\n      return state.tasklist[1].tasks;\n    }\n  },\n  mutations: {\n    UPDATE_VISIBLE_TASKLIST: (state, idx) => {\n      state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle;\n      state.tasklist[idx].isTasklistVisible = !state.tasklist[idx].isTasklistVisible;\n    },\n    UPDATE_SELECT_TASKS: (state, response) => {\n      state.selectTask = response;\n    },\n    UPDATE_THIS_DAY_TASKS: (state, response) => {\n      state.tasklist[0].tasks = response;\n    },\n    UPDATE_THIS_WEEK_TASKS: (state, response) => {\n      state.tasklist[1].tasks = response;\n    },\n    UPDATE_TASKLIST: (state, data) => {\n      console.log(data);\n      state.tasklist = state.tasklist.concat(data);\n    },\n    UPDATE_TASK_IN_TASKLIST: (state, payload) => {\n      const tasks = payload.tasks;\n      const id = payload.id;\n      for (let i = 2; i < state.tasklist.length; i++) {\n        if (id === state.tasklist[i].id) {\n          state.tasklist[i].tasks = tasks;\n        }\n      }\n    }\n  },\n  actions: {\n    GET_THIS_DAY_TASKS({\n      commit\n    }, day) {\n      const presentDay = `${day[2]}-${day[3]}-${day[0]}`;\n      let nextDay_day = day[0].split('0');\n      const nextDay = `${day[2]}-${day[3]}-${Number(day[0]) > 10 ? Number(day[0]) + 1 : `0${Number(nextDay_day[1]) + 1}`}`;\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/task/getTask',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        params: {\n          startTime: `${presentDay}T00:00:00Z`,\n          endTime: `${nextDay}T00:00:00Z`\n        }\n      }).then(response => {\n        commit('UPDATE_THIS_DAY_TASKS', response.data.tasks);\n      }).catch(() => {\n        alert(\"Запрос на этот день не удался\");\n      });\n    },\n    GET_THIS_WEEK_TASKS({\n      commit\n    }, week) {\n      const startTime = `${week[0][3]}-${week[0][4]}-${week[0][1]}`;\n      const endTime = `${week[6][3]}-${week[6][4]}-${week[6][1]}`;\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/task/getTask',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        params: {\n          startTime: `${startTime}T00:00:00Z`,\n          endTime: `${endTime}T00:00:00Z`\n        }\n      }).then(response => {\n        commit('UPDATE_THIS_WEEK_TASKS', response.data.tasks);\n      }).catch(() => {\n        alert(\"Запрос на эту неделю не удался\");\n      });\n    },\n    ADDED_TASKLIST() {\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/task/createTaskList',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        data: {\n          title: 'Люблю дрочить на мужиков',\n          toggleCircle: false,\n          isTasklistVisible: false,\n          startTime: \"2023-10-02T11:00:00Z\",\n          endTime: \"2023-10-07T16:30:00Z\"\n        }\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n        alert(\"Создание списка не удалось\");\n      });\n    },\n    GET_TASKLIST({\n      commit\n    }) {\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/task/getTaskList',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        params: {}\n      }).then(response => {\n        commit('UPDATE_TASKLIST', response.data.tasksList);\n      }).catch(() => {\n        alert(\"Запрос на кастомный список не удался\");\n      });\n    },\n    GET_TASK_IN_TASKLIST({\n      commit\n    }, data) {\n      const startTime = data.startTime;\n      const endTime = data.endTime;\n      const id = data.id;\n      axios({\n        method: 'GET',\n        url: 'http://localhost:5000/task/get',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        params: {\n          startTime: startTime,\n          endTime: endTime\n        }\n      }).then(response => {\n        commit('UPDATE_TASK_IN_TASKLIST', {\n          tasks: response.data.tasks,\n          id: id\n        });\n      }).catch(() => {\n        alert(\"Запрос на кастомный список не удался\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","state","registration","tasklist","title","toggleCircle","isTasklistVisible","tasks","id","selectTask","getters","USER_REGISTRATIONS","USER_TASKLISTS","USER_SELECT_TASKS","USER_TASKS_IN_CALENDAR","mutations","UPDATE_VISIBLE_TASKLIST","idx","UPDATE_SELECT_TASKS","response","UPDATE_THIS_DAY_TASKS","UPDATE_THIS_WEEK_TASKS","UPDATE_TASKLIST","data","console","log","concat","UPDATE_TASK_IN_TASKLIST","payload","i","length","actions","GET_THIS_DAY_TASKS","commit","day","presentDay","nextDay_day","split","nextDay","Number","method","url","headers","localStorage","getItem","params","startTime","endTime","then","catch","alert","GET_THIS_WEEK_TASKS","week","ADDED_TASKLIST","error","GET_TASKLIST","tasksList","GET_TASK_IN_TASKLIST"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/User.js"],"sourcesContent":["import axios from 'axios'\r\nexport default {\r\n\r\n    state() {\r\n        return {\r\n            registration: '23-07-2023',\r\n            tasklist: [\r\n                {\r\n                    title: 'Этот день',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [\r\n                    ],\r\n                }, \r\n                {\r\n                    title: ' неделя',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [],\r\n                    id: 2,\r\n                }, \r\n            ], \r\n            selectTask: []\r\n        }\r\n        \r\n    }, \r\n    getters: {\r\n        \r\n        USER_REGISTRATIONS: state => {\r\n            return state.registration\r\n        },\r\n        USER_TASKLISTS: state => {\r\n            return state.tasklist\r\n        }, \r\n        USER_SELECT_TASKS: state => {\r\n            return state.selectTask\r\n        }, \r\n        USER_TASKS_IN_CALENDAR: state => {\r\n            return state.tasklist[1].tasks\r\n        }\r\n    }, \r\n    mutations: {\r\n        UPDATE_VISIBLE_TASKLIST: (state, idx) => {\r\n            state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle\r\n            state.tasklist[idx].isTasklistVisible = !state.tasklist[idx].isTasklistVisible\r\n        }, \r\n        UPDATE_SELECT_TASKS: (state, response) => {\r\n            state.selectTask = response\r\n        }, \r\n        UPDATE_THIS_DAY_TASKS: (state, response) => {\r\n            state.tasklist[0].tasks = response\r\n        }, \r\n        UPDATE_THIS_WEEK_TASKS: (state, response) => {\r\n            state.tasklist[1].tasks = response\r\n        }, \r\n        UPDATE_TASKLIST: (state, data) => {\r\n            console.log(data)\r\n            state.tasklist = state.tasklist.concat(data)\r\n        }, \r\n\r\n        UPDATE_TASK_IN_TASKLIST: (state, payload) => {\r\n            const tasks = payload.tasks\r\n            const id = payload.id\r\n\r\n            for (let i = 2; i < state.tasklist.length; i++){\r\n                if(id === state.tasklist[i].id){\r\n                    state.tasklist[i].tasks = tasks\r\n                }\r\n            }\r\n        }\r\n    }, \r\n    actions: {\r\n        GET_THIS_DAY_TASKS({commit}, day) {\r\n            const presentDay = `${day[2]}-${day[3]}-${day[0]}`\r\n            let nextDay_day =  day[0].split('0')\r\n            const nextDay = `${day[2]}-${day[3]}-${Number(day[0]) > 10 ? Number(day[0]) + 1 : `0${Number(nextDay_day[1]) + 1}`}`\r\n            \r\n            axios({\r\n                method: 'GET', \r\n                url: 'http://localhost:5000/task/getTask',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                params: {\r\n                    startTime: `${presentDay}T00:00:00Z`, \r\n                    endTime: `${nextDay}T00:00:00Z`, \r\n                }\r\n            })\r\n            .then((response) => {\r\n                commit('UPDATE_THIS_DAY_TASKS', response.data.tasks)\r\n            })\r\n            .catch(() => {\r\n\r\n                alert(\"Запрос на этот день не удался\")\r\n            })   \r\n        },\r\n        GET_THIS_WEEK_TASKS({commit}, week) {\r\n            const startTime = `${week[0][3]}-${week[0][4]}-${week[0][1]}`\r\n            const endTime = `${week[6][3]}-${week[6][4]}-${week[6][1]}`\r\n\r\n            axios({\r\n                method: 'GET', \r\n                url: 'http://localhost:5000/task/getTask',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                params: {\r\n                    startTime: `${startTime}T00:00:00Z`, \r\n                    endTime: `${endTime}T00:00:00Z`, \r\n                }\r\n            })\r\n            .then((response) => {\r\n                commit('UPDATE_THIS_WEEK_TASKS', response.data.tasks)\r\n            })\r\n            .catch(() => {\r\n                alert(\"Запрос на эту неделю не удался\")\r\n            })   \r\n        },\r\n\r\n        ADDED_TASKLIST(){\r\n            axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/task/createTaskList',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                data: {\r\n                    title: 'Люблю дрочить на мужиков',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    startTime: \"2023-10-02T11:00:00Z\",\r\n                    endTime: \"2023-10-07T16:30:00Z\",\r\n                },\r\n            })\r\n            .then((response) => {\r\n                console.log(response)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n                alert(\"Создание списка не удалось\")\r\n            }) \r\n\r\n            \r\n        }, \r\n\r\n        GET_TASKLIST({commit}){\r\n            axios({\r\n                method: 'GET', \r\n                url: 'http://localhost:5000/task/getTaskList',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                params: {\r\n\r\n                }\r\n            })\r\n            .then((response) => {\r\n                commit('UPDATE_TASKLIST', response.data.tasksList)\r\n            })\r\n            .catch(() => {\r\n                alert(\"Запрос на кастомный список не удался\")\r\n            })  \r\n        },\r\n\r\n        GET_TASK_IN_TASKLIST({commit}, data){\r\n            const startTime = data.startTime\r\n            const endTime = data.endTime\r\n\r\n            const id = data.id\r\n\r\n            axios({\r\n                method: 'GET', \r\n                url: 'http://localhost:5000/task/get',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                params: {\r\n                    startTime: startTime, \r\n                    endTime: endTime, \r\n                }\r\n            })\r\n            .then((response) => {\r\n                commit('UPDATE_TASK_IN_TASKLIST', {tasks: response.data.tasks, id: id})\r\n            })\r\n            .catch(() => {\r\n                alert(\"Запрос на кастомный список не удался\")\r\n            })   \r\n\r\n            \r\n        }\r\n\r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}