{"ast":null,"code":"// import axios from 'axios'\n\nexport default {\n  state() {\n    return {\n      registration: '23-07-2023',\n      tasklist: [{\n        title: 'Эта неделя',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: [{\n          name: 'Утренняя рутина',\n          id: 1,\n          time: '09:00 - 11:00',\n          type: 'EveryDay',\n          date: '18-09-2023'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 2,\n          time: '9:00 - 11:00',\n          type: 'Working',\n          date: '19-09-2023'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 3,\n          time: '9:00 - 12:00',\n          type: 'Common',\n          date: '20-09-2023'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 4,\n          time: '15:00 - 22:00',\n          type: 'Common',\n          date: '20-09-2023'\n        }, {\n          name: 'Утренняя рутина',\n          id: 5,\n          time: '09:00 - 11:00',\n          type: 'EveryDay',\n          date: '18-09-2023'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 6,\n          time: '9:00 - 11:00',\n          type: 'Working',\n          date: '19-09-2023'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 7,\n          time: '9:00 - 12:00',\n          type: 'Common',\n          date: '20-09-2023'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 8,\n          time: '15:00 - 22:00',\n          type: 'Common',\n          date: '20-09-2023'\n        }]\n      }, {\n        title: 'Этот месяц',\n        toggleCircle: false,\n        isTasklistVisible: false,\n        tasks: [{\n          name: 'Утренняя рутина',\n          id: 4,\n          time: '10:00 - 15:00',\n          type: 'EveryDay'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 5,\n          time: '19:00 - 22:00',\n          type: 'Working'\n        }, {\n          name: 'Вечерняя закалка',\n          id: 6,\n          time: '21:00 - 23:30',\n          type: 'Common'\n        }]\n      }],\n      selectTask: [{\n        name: 'Утренняя рутина',\n        id: 1,\n        time: '01:00 - 02:00',\n        type: 'EveryDay',\n        date: '18-09-2023'\n      }]\n    };\n  },\n  getters: {\n    USER_REGISTRATIONS: state => {\n      return state.registration;\n    },\n    USER_TASKLISTS: state => {\n      return state.tasklist;\n    },\n    USER_SELECT_TASKS: state => {\n      return state.selectTask;\n    }\n  },\n  mutations: {\n    UPDATE_VISIBLE_TASKLIST: (state, idx) => {\n      state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle;\n      state.tasklist[idx].isTasklistVisible = !state.tasklist[idx].isTasklistVisible;\n    },\n    UPDATE_SELECT_TASKS: (state, response) => {\n      state.selectTask = response;\n    }\n  },\n  actions: {}\n};","map":{"version":3,"names":["state","registration","tasklist","title","toggleCircle","isTasklistVisible","tasks","name","id","time","type","date","selectTask","getters","USER_REGISTRATIONS","USER_TASKLISTS","USER_SELECT_TASKS","mutations","UPDATE_VISIBLE_TASKLIST","idx","UPDATE_SELECT_TASKS","response","actions"],"sources":["C:/Users/Sergey/Documents/GitHub/task-manager/client/src/store/modules/User.js"],"sourcesContent":["// import axios from 'axios'\r\n\r\nexport default {\r\n    state() {\r\n        return {\r\n            registration: '23-07-2023',\r\n            tasklist: [\r\n                {\r\n                    title: 'Эта неделя',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [\r\n                        {name: 'Утренняя рутина', id: 1, time: '09:00 - 11:00', type: 'EveryDay', date: '18-09-2023'},\r\n                        {name: 'Вечерняя закалка', id: 2, time: '9:00 - 11:00', type: 'Working',date: '19-09-2023'},\r\n                        {name: 'Вечерняя закалка', id: 3, time: '9:00 - 12:00', type: 'Common',date: '20-09-2023'},\r\n                        {name: 'Вечерняя закалка', id: 4, time: '15:00 - 22:00', type: 'Common',date: '20-09-2023'},\r\n                        {name: 'Утренняя рутина', id: 5, time: '09:00 - 11:00', type: 'EveryDay', date: '18-09-2023'},\r\n                        {name: 'Вечерняя закалка', id: 6, time: '9:00 - 11:00', type: 'Working',date: '19-09-2023'},\r\n                        {name: 'Вечерняя закалка', id: 7, time: '9:00 - 12:00', type: 'Common',date: '20-09-2023'},\r\n                        {name: 'Вечерняя закалка', id: 8, time: '15:00 - 22:00', type: 'Common',date: '20-09-2023'}\r\n                        \r\n                    ],\r\n                }, \r\n                {\r\n                    title: 'Этот месяц',\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    tasks: [\r\n                        {name: 'Утренняя рутина', id: 4, time: '10:00 - 15:00', type: 'EveryDay'},\r\n                        {name: 'Вечерняя закалка', id: 5, time: '19:00 - 22:00', type: 'Working'},\r\n                        {name: 'Вечерняя закалка', id: 6, time: '21:00 - 23:30', type: 'Common'},\r\n                    ],\r\n                }, \r\n            ], \r\n            selectTask: [{name: 'Утренняя рутина', id: 1, time: '01:00 - 02:00', type: 'EveryDay', date: '18-09-2023'}]\r\n        }\r\n        \r\n    }, \r\n    getters: {\r\n        \r\n        USER_REGISTRATIONS: state => {\r\n            return state.registration\r\n        },\r\n        USER_TASKLISTS: state => {\r\n            return state.tasklist\r\n        }, \r\n        USER_SELECT_TASKS: state => {\r\n            return state.selectTask\r\n        }\r\n    }, \r\n    mutations: {\r\n        UPDATE_VISIBLE_TASKLIST: (state, idx) => {\r\n            state.tasklist[idx].toggleCircle = !state.tasklist[idx].toggleCircle\r\n            state.tasklist[idx].isTasklistVisible = !state.tasklist[idx].isTasklistVisible\r\n        }, \r\n        UPDATE_SELECT_TASKS: (state, response) => {\r\n            state.selectTask = response\r\n        }\r\n    }, \r\n    actions: {\r\n        \r\n        \r\n\r\n        }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}