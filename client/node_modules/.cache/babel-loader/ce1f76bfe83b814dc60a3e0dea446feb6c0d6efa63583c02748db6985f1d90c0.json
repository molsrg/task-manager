{"ast":null,"code":"import axios from 'axios';\nimport { mapActions, mapMutations, mapGetters } from \"vuex\";\nimport 'air-datepicker/air-datepicker.css';\nimport AirDatepicker from 'air-datepicker';\nexport default {\n  mounted() {\n    this.formattedDate = this.USER_REGISTRATIONS.split('-').reverse().join('-') + 'T00:00';\n    new AirDatepicker('#start-time', {\n      position: 'right center',\n      range: true,\n      multipleDatesSeparator: ' - ',\n      dateFormat: 'yyyy-MM-dd',\n      buttons: [{\n        content(dp) {\n          return dp.opts.timepicker ? 'Выключить выбор времени' : 'Включить выбор времени';\n        },\n        onClick(dp) {\n          let viewDate = dp.viewDate;\n          let today = new Date();\n\n          // Since timepicker takes initial time from 'viewDate', set up time here, \n          // otherwise time will be equal to 00:00 if user navigated through datepicker\n          viewDate.setHours(today.getHours());\n          viewDate.setMinutes(today.getMinutes());\n          dp.update({\n            timepicker: !dp.opts.timepicker,\n            viewDate\n          });\n        }\n      }]\n    });\n  },\n  data() {\n    return {\n      taskListTitle: '',\n      taskListStartTime: '',\n      taskListEndTime: '',\n      formattedDate: ''\n    };\n  },\n  methods: {\n    ...mapActions(['ADD_TASK', 'GET_TASKLIST']),\n    ...mapMutations(['UPDATE_IS_ADDED_TASKLIST']),\n    addTaskList(event) {\n      event.preventDefault();\n      axios({\n        method: 'POST',\n        url: 'http://localhost:5000/task/createTaskList',\n        headers: {\n          'authorization': `Bearer ${localStorage.getItem('AccessToken')}`\n        },\n        data: {\n          title: this.taskListTitle,\n          toggleCircle: false,\n          isTasklistVisible: false,\n          startTime: this.taskListStartTime,\n          endTime: this.taskListEndTime\n        }\n      }).then(() => {\n        this.UPDATE_IS_ADDED_TASKLIST();\n        this.GET_TASKLIST();\n      }).catch(err => {\n        console.log(err);\n        alert(\"Создание списка не удалось\");\n      });\n    }\n  },\n  computed: {\n    ...mapGetters(['USER_REGISTRATIONS'])\n  }\n};","map":{"version":3,"names":["axios","mapActions","mapMutations","mapGetters","AirDatepicker","mounted","formattedDate","USER_REGISTRATIONS","split","reverse","join","position","range","multipleDatesSeparator","dateFormat","buttons","content","dp","opts","timepicker","onClick","viewDate","today","Date","setHours","getHours","setMinutes","getMinutes","update","data","taskListTitle","taskListStartTime","taskListEndTime","methods","addTaskList","event","preventDefault","method","url","headers","localStorage","getItem","title","toggleCircle","isTasklistVisible","startTime","endTime","then","UPDATE_IS_ADDED_TASKLIST","GET_TASKLIST","catch","err","console","log","alert","computed"],"sources":["C:\\Users\\Sergey\\Documents\\GitHub\\task-manager\\client\\src\\components\\AddSomething\\AddTaskList.vue"],"sourcesContent":["<template>\r\n        <div class=\"form-task\">\r\n        <h3 class=\"form-title\">\r\n            Создание списка задач\r\n        </h3>\r\n        <form action=\"\" type=\"post\" @submit=\"addTask\" style=\"display: flex; flex-direction: column; gap: 20px;\"> \r\n            <div>\r\n                <input \r\n                    class=\"form-input\" \r\n                    type=\"text\" \r\n                    placeholder=\"Название списка\" \r\n                    v-model=\"taskListTitle\"\r\n                > \r\n                <span class=\"invalid-span\" v-if=\"v$.taskListTitle.$invalid\">Минимальная длина 8 символов</span>\r\n            </div>\r\n            \r\n            <div>\r\n                <input class=\"form-input\" type=\"text\" placeholder=\"Описание списка\" v-model=\"taskInfo\">\r\n                <span class=\"invalid-span\" v-if=\"v$.taskInfo.$invalid\">Минимальная длина 8 символов</span>\r\n            </div>\r\n            \r\n\r\n            <div>\r\n                <input ref=\"taskDate\" class=\"form-input\" type=\"text\" placeholder=\"Дата выполнения\" v-model=\"taskStartDate\">\r\n                \r\n            </div>\r\n\r\n            <button class=\"form-submit\" type=\"submit\">Создать</button>\r\n            <button class=\"form-submit_exit\" @click=\"UPDATE_IS_ADDED_TASK()\">Отмена</button>\r\n        </form>\r\n    </div>\r\n    <!-- <form action=\"\" type=\"post\" @submit=\"addTaskList\">\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"Название списка\"\r\n        required\r\n        v-model=\"taskListTitle\"\r\n        />\r\n\r\n        <label for=\"start-time\">Выберите промежуток отслеживания списка</label>\r\n        <input\r\n        id=\"start-time\"\r\n        type=\"text\"\r\n        placeholder=\"Начало задачи\"\r\n        required\r\n        v-model=\"taskListStartTime\"\r\n        :min=\"formattedDate\"\r\n        />\r\n        \r\n\r\n        <button type=\"submit\">Добавить список</button>\r\n        <button @click=\"UPDATE_IS_ADDED_TASKLIST()\">Выйти из создания</button>\r\n    </form> -->\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { mapActions, mapMutations, mapGetters } from \"vuex\";\r\nimport 'air-datepicker/air-datepicker.css';\r\nimport AirDatepicker from 'air-datepicker';\r\nexport default {\r\n    mounted() {\r\n        this.formattedDate = this.USER_REGISTRATIONS.split('-').reverse().join('-') + 'T00:00'\r\n\r\n        new AirDatepicker('#start-time',{\r\n            position: 'right center',\r\n            range: true,\r\n            multipleDatesSeparator: ' - ', \r\n            dateFormat: 'yyyy-MM-dd',\r\n            buttons: [\r\n        {\r\n            content(dp) {\r\n                return dp.opts.timepicker \r\n                    ? 'Выключить выбор времени'\r\n                    : 'Включить выбор времени'\r\n            },\r\n            onClick(dp) {\r\n                let viewDate = dp.viewDate;\r\n                let today = new Date();\r\n                \r\n                // Since timepicker takes initial time from 'viewDate', set up time here, \r\n                // otherwise time will be equal to 00:00 if user navigated through datepicker\r\n                viewDate.setHours(today.getHours());\r\n                viewDate.setMinutes(today.getMinutes());\r\n\r\n                dp.update({\r\n                    timepicker: !dp.opts.timepicker,\r\n                    viewDate\r\n                })\r\n            }\r\n        }\r\n    ]\r\n        });\r\n        \r\n    },\r\n    data(){\r\n        return {\r\n            taskListTitle: '',\r\n            taskListStartTime: '',\r\n            taskListEndTime: '',\r\n\r\n            formattedDate: ''\r\n        }\r\n    }, \r\n    methods: {\r\n        ...mapActions(['ADD_TASK', 'GET_TASKLIST']), \r\n        ...mapMutations(['UPDATE_IS_ADDED_TASKLIST']),\r\n        addTaskList(event) {\r\n            event.preventDefault();\r\n            axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/task/createTaskList',\r\n                headers: {'authorization': `Bearer ${localStorage.getItem('AccessToken')}`},\r\n                data: {\r\n                    title: this.taskListTitle,\r\n                    toggleCircle: false,\r\n                    isTasklistVisible: false,\r\n                    startTime: this.taskListStartTime,\r\n                    endTime: this.taskListEndTime,\r\n                },\r\n            })\r\n            .then(() => {\r\n                this.UPDATE_IS_ADDED_TASKLIST()\r\n                this.GET_TASKLIST()\r\n\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                alert(\"Создание списка не удалось\")\r\n            }) \r\n        }\r\n    },\r\n    computed: {\r\n    ...mapGetters(['USER_REGISTRATIONS' ]),\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стили для модального окна */\r\n\r\n.invalid-span {\r\n    font-size: 12px;\r\n}\r\n.form-task {\r\n    width: 230px;\r\n    max-height: 363px;\r\n    color: #001524;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    padding: 40px 103px ;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    font-family: Raleway;\r\n    font-weight: 500;\r\n\r\n\r\n}\r\n.form-title{\r\n    font-size: 20px;\r\n    margin-bottom: 35px;\r\n\r\n}\r\n\r\n.form-input {\r\n    width: 100%;\r\n    height: 19px;\r\n    outline: none;\r\n    border: 0px solid white;\r\n    border-bottom: 1px solid #001524;\r\n    font-family: Raleway;\r\n    font-size: 16px;\r\n}\r\n\r\n.form-input_time {\r\n    display: grid;\r\n    grid-template-columns: 120px 120px;\r\n    grid-template-rows: 44px;\r\n    column-gap: 15px;\r\n}\r\n\r\n.form-text {\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.form-button-container {\r\n    display: grid;\r\n    grid-template-columns: 120px 120px;\r\n    grid-template-rows: 44px 44px;\r\n    gap: 11px 11px;\r\n}\r\n\r\n/* Скрыть оригинальные радиокнопки */\r\ninput[type=\"radio\"] {\r\n    display: none;\r\n}\r\n\r\n/* Стили для лейблов-кнопок */\r\n.form-button {\r\n    display: inline-block;\r\n    text-align: center;\r\n    padding-top: 11px;\r\n    border: 1px solid #001524;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n/* Изменение стилей лейбла при выборе радиокнопки */\r\ninput[type=\"radio\"]:checked + .form-button {\r\n    background-color: rgb(220,232,233);\r\n}\r\n\r\n\r\n.form-submit{\r\n    width: 100%;\r\n    padding: 16px 53px;\r\n    color:#FFECD1;\r\n    background-color: #87979A;\r\n    border-radius: 10px;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.form-submit_filled {\r\n    background-color: #15616D;\r\n}\r\n\r\n.form-submit_exit{\r\n    width: 100%;\r\n    padding: 16px 53px;\r\n    border-radius: 10px;\r\n    border: 1px solid #001524;\r\n}\r\n\r\n</style>"],"mappings":"AAwDA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,UAAU,EAAEC,YAAY,EAAEC,UAAS,QAAS,MAAM;AAC3D,OAAO,mCAAmC;AAC1C,OAAOC,aAAY,MAAO,gBAAgB;AAC1C,eAAe;EACXC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,aAAY,GAAI,IAAI,CAACC,kBAAkB,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,IAAI,QAAO;IAErF,IAAIN,aAAa,CAAC,aAAa,EAAC;MAC5BO,QAAQ,EAAE,cAAc;MACxBC,KAAK,EAAE,IAAI;MACXC,sBAAsB,EAAE,KAAK;MAC7BC,UAAU,EAAE,YAAY;MACxBC,OAAO,EAAE,CACb;QACIC,OAAOA,CAACC,EAAE,EAAE;UACR,OAAOA,EAAE,CAACC,IAAI,CAACC,UAAS,GAClB,yBAAwB,GACxB,wBAAuB;QACjC,CAAC;QACDC,OAAOA,CAACH,EAAE,EAAE;UACR,IAAII,QAAO,GAAIJ,EAAE,CAACI,QAAQ;UAC1B,IAAIC,KAAI,GAAI,IAAIC,IAAI,CAAC,CAAC;;UAEtB;UACA;UACAF,QAAQ,CAACG,QAAQ,CAACF,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;UACnCJ,QAAQ,CAACK,UAAU,CAACJ,KAAK,CAACK,UAAU,CAAC,CAAC,CAAC;UAEvCV,EAAE,CAACW,MAAM,CAAC;YACNT,UAAU,EAAE,CAACF,EAAE,CAACC,IAAI,CAACC,UAAU;YAC/BE;UACJ,CAAC;QACL;MACJ;IAEA,CAAC,CAAC;EAEN,CAAC;EACDQ,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,aAAa,EAAE,EAAE;MACjBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,EAAE;MAEnB1B,aAAa,EAAE;IACnB;EACJ,CAAC;EACD2B,OAAO,EAAE;IACL,GAAGhC,UAAU,CAAC,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;IAC3C,GAAGC,YAAY,CAAC,CAAC,0BAA0B,CAAC,CAAC;IAC7CgC,WAAWA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBpC,KAAK,CAAC;QACFqC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,2CAA2C;QAChDC,OAAO,EAAE;UAAC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;QAAC,CAAC;QAC3EZ,IAAI,EAAE;UACFa,KAAK,EAAE,IAAI,CAACZ,aAAa;UACzBa,YAAY,EAAE,KAAK;UACnBC,iBAAiB,EAAE,KAAK;UACxBC,SAAS,EAAE,IAAI,CAACd,iBAAiB;UACjCe,OAAO,EAAE,IAAI,CAACd;QAClB;MACJ,CAAC,EACAe,IAAI,CAAC,MAAM;QACR,IAAI,CAACC,wBAAwB,CAAC;QAC9B,IAAI,CAACC,YAAY,CAAC;MAGtB,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG;QACfG,KAAK,CAAC,4BAA4B;MACtC,CAAC;IACL;EACJ,CAAC;EACDC,QAAQ,EAAE;IACV,GAAGpD,UAAU,CAAC,CAAC,oBAAmB,CAAG;EACrC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}